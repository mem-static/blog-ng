{"version":3,"file":"604a744d2c251c356f4883de75fbe215c488e05b-9cfd4e7d1a5d1d91451a.js","mappings":"+JAQA,WAAmCA,GACjC,OAAOC,EAAAA,cAAAA,MAAAA,CAAKC,UCPgB,qDDOmB,IAAEF,EAAMG,SACxD,C,6JETM,SAASC,EAA2BC,GACzC,OAAO,QAAqB,iBAAkBA,EAChD,EAC2B,QAAuB,iBAAkB,CAAC,OAAQ,UAAW,eAAgB,eAAgB,cAAe,YAAa,eAAgB,eAAgB,eAAgB,eAAgB,kBAAmB,cAAe,iBACtP,I,UCHA,MAAMC,EAAY,CAAC,WAAY,QAAS,YAAa,YAAa,YAAa,QAAS,WAwBlFC,GAAkB,EAAAC,EAAA,GAAO,MAAO,CACpCC,KAAM,iBACNJ,KAAM,OACNK,kBAAmB,CAACV,EAAOW,IAAWA,EAAOC,MAHvB,EAIrB,EACDC,iBAEA,MAAMC,EAA4C,iBAAzBD,EAAWC,UAAyB,GAAGD,EAAWC,cAAgBD,EAAWC,UAChGC,EAA4C,iBAAzBF,EAAWE,UAAyB,GAAGF,EAAWE,cAAgBF,EAAWE,UACtG,MAAO,CAEL,8BAA+BD,GAAaC,EAAY,SAASD,GAAa,uBAAuBD,EAAWG,YAAYD,GAAa,YAAc,gBAAgBF,EAAWG,UAClLC,aAAc,4BACdC,cAAe,SACfC,OAAQ,4BACT,IAEGC,GAAqB,EAAAZ,EAAA,GAAO,MAAO,CACvCC,KAAM,iBACNJ,KAAM,UACNK,kBAAmB,CAACV,EAAOW,IAAWA,EAAOU,SAHpB,EAIxB,EACDC,QACAT,iBAEA,IAAIU,EACJ,MAAO,CAAC,CACNC,KAAM,EACNC,SAAU,WACVR,aAAc,UACdS,OAAQ,EACRC,cAAe,mCACfC,SAAU,SAGV,uBAAwB,CACtBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,aACXP,SAAU,WACVQ,MAAO,OACPP,OAAQ,OACRQ,UAAWrB,EAAWqB,UACtBf,OAAQ,EACRgB,QAAS,EACT,UAAW,CAETF,MAAO,OACPP,OAAQ,OACRQ,UAAWrB,EAAWqB,aAGiC,OAAzDX,EAAkBD,EAAMc,SAASvB,EAAWwB,eAAoB,EAASd,EAAgBV,EAAWyB,OAAO,IA8FjH,MA5FiC,cAAiB,SAAqBC,EAASC,GAC9E,MAAMxC,GAAQ,EAAAyC,EAAA,GAAc,CAC1BzC,MAAOuC,EACP9B,KAAM,oBAEF,SACFN,EAAQ,MACRa,EAAQ,SAAQ,UAChBF,EAAS,UACTC,EAAS,UACTmB,EAAY,QACZI,MAAOI,EAAY,UAAS,QAC5BL,EAAU,QACRrC,EACJ2C,GAAQ,OAA8B3C,EAAOM,IACzC,SACJsC,IACE,QAAkBP,GAChBC,EAAQM,EAASL,EAAQD,MAAOI,GAChC7B,GAAa,OAAS,CAAC,EAAGb,EAAO,CACrCc,YACAC,YACAmB,YACAlB,QACAsB,QACAD,YAEIQ,EA/FkBhC,KACxB,MAAM,QACJwB,EAAO,MACPC,GACEzB,EACEiC,EAAQ,CACZlC,KAAM,CAAC,QACPS,QAAS,CAAC,UAAWgB,GAAW,WAAU,EAAAU,EAAA,GAAWV,KAAYC,GAAS,SAAQ,EAAAS,EAAA,GAAWT,OAE/F,OAAO,EAAAU,EAAA,GAAeF,EAAO1C,EAA4B,CAAC,EAAE,EAsF5C6C,CAAkBpC,IAC3BqC,EAAUC,IAAa,EAAAC,EAAA,GAAQ,OAAQ,CAC5CZ,MACAtC,UAAW2C,EAAQjC,KACnByC,YAAa9C,EACb+C,uBAAwBX,EACxB9B,gBAEK0C,EAAaC,IAAgB,EAAAJ,EAAA,GAAQ,UAAW,CACrDlD,UAAW2C,EAAQxB,QACnBgC,YAAajC,EACbkC,uBAAwBX,EACxB9B,eAEF,OAAoB,SAAKqC,GAAU,OAAS,CAAC,EAAGC,EAAW,CACzDhD,UAAuB,SAAKoD,GAAa,OAAS,CAAC,EAAGC,EAAc,CAClErD,SAAU,eAAmBA,GAAU,CAACsD,EAAOC,IAAoB,IAAVA,GAA4B,iBAAqBD,GAAsB,eAAmBA,EAAO,CACxJ,mBAAoB,KACjBA,SAGX,I,oBChIO,SAASE,EAAoBtD,GAClC,OAAO,QAAqB,UAAWA,EACzC,EACoB,QAAuB,UAAW,CAAC,OAAQ,eAAgB,eAAgB,cAAe,YAAa,eAAgB,eAAgB,eAAgB,eAAgB,kBAAmB,cAAe,eAAgB,SAAU,SAAU,SAAU,QCCpQ,MAAMuD,EAAiB,EAC5BtC,QACAT,cACCgD,EAAKC,KACN,IAAIC,EACAC,EAAW,CAAC,EAehB,GAAInD,EAAWoD,GAAI,EAdnB,SAASC,EAAUC,GACK,mBAAXA,EAETD,EADeC,EAAO7C,IAEb8C,MAAMC,QAAQF,GACvBA,EAAOG,SAAQC,IACS,kBAAXA,GACTL,EAAUK,EACZ,IAEyB,iBAAXJ,IAChBH,GAAW,OAAS,CAAC,EAAGA,EAAUG,GAEtC,CAEED,CAAUrD,EAAWoD,IACrB,MAAMO,EAAQR,EAASH,GACvB,IAAqB,iBAAVW,GAAuC,iBAAVA,IAC1B,iBAARX,EAAwB,CAC1B,IAAIY,EACJ,GAAqB,iBAAVD,EACT,MAAO,GAAGA,MAEZT,GAA6C,OAA7BU,EAAcnD,EAAMoD,WAAgB,EAASD,EAAYE,OAAOH,KAAWA,CAC7F,CAEJ,CACA,OAAOT,GAAeD,CAAY,EClCvBc,EAA8B,iBAAoB,GCFzD,EAAY,CAAC,YAAa,QAAS,YAAa,iBAAkB,OAAQ,UAAW,WAAY,OAyBjGC,GAAW,EAAArE,EAAA,GAAO,MAAO,CAC7BC,KAAM,UACNJ,KAAM,OACNK,kBAAmB,CAACV,EAAOW,IAAWA,EAAOC,MAH9B,EAId,EACDU,QACAT,iBAEA,IAAIU,EAAiBuD,EACrB,MAAO,EAAC,OAAS,CAEf,qBAAsB,8KAEtB,uBAAwB,0BAExB,2BAA4B,6CAE5B,2BAA4BlB,EAAe,CACzCtC,QACAT,cACC,eAAgB,sBAEnB,qBAAsB,6DAEtB,wBAAyB,iCACzB,wBAAyB,6DAEzB,kBAAmB,kCACE,OAApBA,EAAWkE,MAAiB,CAC7B,gBAAiBzD,EAAMoD,KAAKC,OAAOK,GACnC,iBAAkB,UACG,OAApBnE,EAAWkE,MAAiB,CAC7B,gBAAiBzD,EAAMoD,KAAKC,OAAOM,GACnC,iBAAkB,OAClBC,SAAU5D,EAAMoD,KAAKQ,SAASD,IACT,OAApBpE,EAAWkE,MAAiB,CAC7B,gBAAiBzD,EAAMoD,KAAKC,OAAOQ,GACnC,iBAAkB,UACjB,CACDhD,QAAS,sBACTlB,aAAc,qBACdmE,UAAW9D,EAAM+D,OAAOL,GACxBM,gBAAiBhE,EAAMoD,KAAKa,QAAQC,WAAWC,QAC/CC,WAAYpE,EAAMoD,KAAKgB,WAAWC,KAGlCC,WAAY,oDACZnE,SAAU,WACVI,QAAS,OACTX,cAAeL,EAAWgF,IAAM,MAAQ,WACoB,OAAzDtE,EAAkBD,EAAMc,SAASvB,EAAWwB,eAAoB,EAASd,EAAgBV,EAAWyB,OAA6B,YAArBzB,EAAWyB,OAAuBzB,EAAWiF,iBAAyF,OAArEhB,EAAwBxD,EAAMyE,eAAelF,EAAWwB,eAAoB,EAASyC,EAAsBjE,EAAWyB,QAAQ,IAE5S0D,EAAoB,cAAiB,SAAczD,EAASC,GAChE,MAAMxC,GAAQ,EAAAyC,EAAA,GAAc,CAC1BzC,MAAOuC,EACP9B,KAAM,aAEF,UACFP,EACAoC,MAAOI,EAAY,UAAS,UAC5BuD,EAAY,MAAK,eACjBH,GAAiB,EAAK,KACtBf,EAAO,KAAI,QACX1C,EAAU,QAAO,SACjBlC,EAAQ,IACR0F,GAAM,GACJ7F,EACJ2C,GAAQ,OAA8B3C,EAAO,IACzC,SACJ4C,IACE,QAAkBP,GAChBC,EAAQM,EAASL,EAAQD,MAAOI,GAChC7B,GAAa,OAAS,CAAC,EAAGb,EAAO,CACrCsC,QACA2D,YACAJ,MACAd,OACA1C,YAEIQ,EA3FkBhC,KACxB,MAAM,KACJkE,EAAI,QACJ1C,EAAO,MACPC,EAAK,IACLuD,GACEhF,EACEiC,EAAQ,CACZlC,KAAM,CAAC,OAAQyB,GAAW,WAAU,EAAAU,EAAA,GAAWV,KAAYC,GAAS,SAAQ,EAAAS,EAAA,GAAWT,KAAUyC,GAAQ,QAAO,EAAAhC,EAAA,GAAWgC,KAASc,GAAO,QAE7I,OAAO,EAAA7C,EAAA,GAAeF,EAAOa,EAAqB,CAAC,EAAE,EAiFrC,CAAkB9C,GAC5BqF,GAAsB,SAAKtB,EAAeuB,SAAU,CACxD3B,MAAOqB,EACP1F,UAAuB,SAAK0E,GAAU,OAAS,CAC7CuB,GAAIH,EACJpF,WAAYA,EACZX,WAAW,OAAK2C,EAAQjC,KAAMV,GAC9BsC,IAAKA,GACJG,EAAO,CACRxC,SAAU,eAAmBA,GAAU,CAACsD,EAAOC,KAC7C,IAAmB,iBAAqBD,GACtC,OAAOA,EAET,MAAM4C,EAAa,CAAC,EACpB,IAAI,EAAAC,EAAA,GAAa7C,EAAO,CAAC,YAAa,CACpC4C,EAAWE,MAAQ,UAAW9C,EAAMzD,MAAQyD,EAAMzD,MAAMuG,MAAQ,UAChE,MAAMC,EAAcX,EAAM,WAAa,aACvCQ,EAAWG,YAAc,gBAAiB/C,EAAMzD,MAAQyD,EAAMzD,MAAMwG,YAAcA,CACpF,CAOA,OANc,IAAV9C,IACF2C,EAAW,oBAAsB,IAE/B3C,IAAU,iBAAqBvD,GAAY,IAC7CkG,EAAW,mBAAqB,IAEd,eAAmB5C,EAAO4C,EAAW,SAI/D,OAAIP,GACkB,SAAKW,EAAA,GAAwB,CAC/CpE,QAASA,EACTlC,SAAU+F,IAGPA,CACT,IAmDA,QChMO,SAASQ,EAA2BrG,GACzC,OAAO,QAAqB,iBAAkBA,EAChD,EACoB,QAAuB,iBAAkB,CAAC,SCF9D,MAAM,EAAY,CAAC,YAAa,YAAa,YAevCsG,GAAkB,EAAAnG,EAAA,GAAO,MAAO,CACpCC,KAAM,iBACNJ,KAAM,OACNK,kBAAmB,CAACV,EAAOW,IAAWA,EAAOC,MAHvB,CAIrB,CACDiB,QAAS,OACTX,cAAe,SACf0F,SAAU,EACVC,OAAQ,IAEJC,EAA2B,cAAiB,SAAqBvE,EAASC,GAC9E,MAAMxC,GAAQ,EAAAyC,EAAA,GAAc,CAC1BzC,MAAOuC,EACP9B,KAAM,oBAEF,UACFP,EAAS,UACT+F,EAAY,MAAK,SACjB9F,GACEH,EACJ2C,GAAQ,OAA8B3C,EAAO,GACzCa,GAAa,OAAS,CAAC,EAAGb,EAAO,CACrCiG,cAEIpD,GA1BC,EAAAG,EAAA,GAHO,CACZpC,KAAM,CAAC,SAEoB8F,EAA4B,CAAC,GA2B1D,OAAoB,SAAKC,GAAiB,OAAS,CACjDP,GAAIH,EACJpF,WAAYA,EACZX,WAAW,OAAK2C,EAAQjC,KAAMV,GAC9BsC,IAAKA,GACJG,EAAO,CACRxC,SAAUA,IAEd,IAyBA,QC1EO,SAAS4G,EAA4B1G,GAC1C,OAAO,QAAqB,kBAAmBA,EACjD,EAC2B,QAAuB,kBAAmB,CAAC,OAAQ,eAAgB,eAAgB,cAAe,YAAa,eAAgB,eAAgB,eAAgB,eAAgB,kBAAmB,cAAe,iBCF5O,MAAM,EAAY,CAAC,YAAa,YAAa,WAAY,QAAS,WAsB5D2G,GAAmB,EAAAxG,EAAA,GAAO,MAAO,CACrCC,KAAM,kBACNJ,KAAM,OACNK,kBAAmB,CAACV,EAAOW,IAAWA,EAAOC,MAHtB,EAItB,EACDU,QACAT,iBAEA,IAAIU,EACJ,MAAM0F,EAAc,qEACpB,MAAO,CAACpG,EAAWgF,KAAM,OAAS,CAChC,uBAAwB,qCACxBqB,UAAW,6BACXC,aAAc,6BACdhF,QAAS,0BACTlB,aAAc,6BACdQ,SAAU,iBAC0B2F,IAAnCvG,EAAW,qBAAqC,CACjD,uBAAwB,GAAGoG,SAAmBA,IAC9CI,qBAAsB,EACtBC,wBAAyB,EACzBC,WAAY,mCACuBH,IAAlCvG,EAAW,oBAAoC,CAChD,uBAAwB,KAAKoG,KAAeA,MAC5CO,oBAAqB,EACrBC,uBAAwB,EACxBC,YAAa,gCACV,OAAS,CACZ,uBAAwB,qCACxBH,WAAY,6BACZG,YAAa,6BACbvF,QAAS,0BACTlB,aAAc,6BACdQ,SAAU,iBAC0B2F,IAAnCvG,EAAW,qBAAqC,CACjD,uBAAwB,GAAGoG,KAAeA,QAC1CQ,uBAAwB,EACxBH,wBAAyB,EACzBJ,UAAW,mCACwBE,IAAlCvG,EAAW,oBAAoC,CAChD,uBAAwB,OAAOoG,KAAeA,IAC9CO,oBAAqB,EACrBH,qBAAsB,EACtBF,aAAc,+BAC8C,OAAzD5F,EAAkBD,EAAMc,SAASvB,EAAWwB,eAAoB,EAASd,EAAgBV,EAAWyB,OAAO,IAE5GqF,EAA4B,cAAiB,SAAsBpF,EAASC,GAChF,MAAMxC,GAAQ,EAAAyC,EAAA,GAAc,CAC1BzC,MAAOuC,EACP9B,KAAM,oBAEFoF,EAAM,aAAiBjB,IACvB,UACF1E,EAAS,UACT+F,EAAY,MAAK,SACjB9F,EACAmC,MAAOI,EAAY,UAAS,QAC5BL,EAAU,SACRrC,EACJ2C,GAAQ,OAA8B3C,EAAO,IACzC,SACJ4C,IACE,QAAkBP,GAChBC,EAAQM,EAASL,EAAQD,MAAOI,GAChC7B,GAAa,OAAS,CAAC,EAAGb,EAAO,CACrCiG,YACA3D,QACAD,UACAwD,QAEIhD,EAhFkBhC,KACxB,MAAM,QACJwB,EAAO,MACPC,GACEzB,EACEiC,EAAQ,CACZlC,KAAM,CAAC,OAAQyB,GAAW,WAAU,EAAAU,EAAA,GAAWV,KAAYC,GAAS,SAAQ,EAAAS,EAAA,GAAWT,OAEzF,OAAO,EAAAU,EAAA,GAAeF,EAAOiE,EAA6B,CAAC,EAAE,EAwE7C,CAAkBlG,GAClC,OAAoB,SAAKmG,GAAkB,OAAS,CAClDZ,GAAIH,EACJpF,WAAYA,EACZX,WAAW,OAAK2C,EAAQjC,KAAMV,GAC9BsC,IAAKA,GACJG,EAAO,CACRxC,SAAUA,IAEd,IAmCA,Q,4DC1IA,MAAMyH,EAAa,CAAC,MAAO,QCCpB,ICsCP,WAAgB,GAAsB,IAAZ,MAAEC,GAAO,EACjC,OACE5H,EAAAA,cAAC6H,EAAAA,EAAG,CAAC5H,UDxCgB,2CCyClB2H,EAAME,KAAIC,IAAe,IAAD,MAAb,KAAEC,GAAM,EAClB,MAAMC,EFzCP,SAAoBC,GACzB,IAAK,MAAMC,KAAOR,EAChB,GAAIO,EAAKE,SAASD,GAAM,CACtBD,EAAOA,EAAKG,MAAM,EAAGH,EAAKI,OAASH,EAAIG,QACvC,KACF,CAQF,OANKJ,EAAKK,WAAW,OACnBL,EAAO,IAAMA,GAEXA,EAAKK,WAAW,WAClBL,EAAOA,EAAKG,MAAM,IAEbH,CACT,CE2BqBM,CAAWR,EAAKS,OAAOC,cAEpC,OACE1I,EAAAA,cAAC+F,EAAI,CAAC9F,UD5Ca,+CC4CqB2D,IAAKoE,EAAKW,GAAIvG,QAAQ,YAC5DpC,EAAAA,cAAC4I,EAAW,CAAC/H,UAAU,QAAQC,UAAU,SACvCd,EAAAA,cAAAA,MAAAA,CAAK6I,IAAKb,EAAKc,YAAYC,MAAOC,QAAQ,OAAOC,IAAI,MAEvDjJ,EAAAA,cAAC6G,EAAW,KACV7G,EAAAA,cAACkJ,EAAAA,EAAI,CAACjJ,UD9Ca,oDC8CyBkJ,GAAIlB,GAC9CjI,EAAAA,cAAAA,KAAAA,CAAIC,UD7Cc,sDC8Cf+H,EAAKc,YAAYM,MAClBpJ,EAAAA,cAAAA,OAAAA,CAAMC,UDhDS,qDCgD8B+H,EAAKc,YAAYO,QAGlErJ,EAAAA,cAACsJ,EAAAA,EAAU,KAAEtB,EAAKuB,WAEE,QAArB,EAAAvB,EAAKc,YAAYU,YAAI,aAArBC,EAAuBnB,SACtBtI,EAAAA,cAAC0H,EAAY,CAACzH,UDzDS,wDCyDiCmC,QAAQ,OAAO4B,GAAI,CAAE0F,QAAS,sBACpF1J,EAAAA,cAAC2J,EAAAA,EAAO,CAACrD,MAAM,YACftG,EAAAA,cAAC6G,EAAW,CAAC5G,UD1De,iEC2D1BD,EAAAA,cAAC4J,EAAAA,EAAa,KAAE5B,EAAKc,YAAYU,KAAK1B,KAAI,CAACtH,EAAqBiD,IAAkBjD,GAAQR,EAAAA,cAAC6J,EAAAA,EAAG,CAACrJ,KAAMA,EAAMwD,GAAI,CAAE8F,GAAIrG,EAAQ,EAAI,UAIlI,IAKhB,C","sources":["webpack://memset0-blog/./src/components/ContentContainer.tsx","webpack://memset0-blog/./src/components/ContentContainer.module.less","webpack://memset0-blog/./node_modules/@mui/joy/AspectRatio/aspectRatioClasses.js","webpack://memset0-blog/./node_modules/@mui/joy/AspectRatio/AspectRatio.js","webpack://memset0-blog/./node_modules/@mui/joy/Card/cardClasses.js","webpack://memset0-blog/./node_modules/@mui/joy/styles/styleUtils.js","webpack://memset0-blog/./node_modules/@mui/joy/Card/CardContext.js","webpack://memset0-blog/./node_modules/@mui/joy/Card/Card.js","webpack://memset0-blog/./node_modules/@mui/joy/CardContent/cardContentClasses.js","webpack://memset0-blog/./node_modules/@mui/joy/CardContent/CardContent.js","webpack://memset0-blog/./node_modules/@mui/joy/CardOverflow/cardOverflowClasses.js","webpack://memset0-blog/./node_modules/@mui/joy/CardOverflow/CardOverflow.js","webpack://memset0-blog/./src/utils/route.ts","webpack://memset0-blog/./src/components/page/BlogArchive.module.less","webpack://memset0-blog/./src/components/page/BlogArchive.tsx"],"sourcesContent":["import React from 'react';\n\nimport * as style from './ContentContainer.module.less';\n\ninterface ContainerProps {\n  children?: any;\n}\n\nexport default (function Container(props) {\n  return <div className={style.contentContainer}> {props.children}</div>;\n} as React.FC<ContainerProps>);\n","// extracted by mini-css-extract-plugin\nexport var __container = \"ContentContainer-module--__container--7488b\";\nexport var contentContainer = \"ContentContainer-module--content-container--f1849\";","import { generateUtilityClass, generateUtilityClasses } from '../className';\nexport function getAspectRatioUtilityClass(slot) {\n  return generateUtilityClass('JoyAspectRatio', slot);\n}\nconst aspectRatioClasses = generateUtilityClasses('JoyAspectRatio', ['root', 'content', 'colorPrimary', 'colorNeutral', 'colorDanger', 'colorInfo', 'colorSuccess', 'colorWarning', 'colorContext', 'variantPlain', 'variantOutlined', 'variantSoft', 'variantSolid']);\nexport default aspectRatioClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"ratio\", \"minHeight\", \"maxHeight\", \"objectFit\", \"color\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport styled from '../styles/styled';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport { getAspectRatioUtilityClass } from './aspectRatioClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getAspectRatioUtilityClass, {});\n};\n\n// Use to control the width of the content, usually in a flexbox row container\nconst AspectRatioRoot = styled('div', {\n  name: 'JoyAspectRatio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState\n}) => {\n  const minHeight = typeof ownerState.minHeight === 'number' ? `${ownerState.minHeight}px` : ownerState.minHeight;\n  const maxHeight = typeof ownerState.maxHeight === 'number' ? `${ownerState.maxHeight}px` : ownerState.maxHeight;\n  return {\n    // a context variable for any child component\n    '--AspectRatio-paddingBottom': minHeight || maxHeight ? `clamp(${minHeight || '0px'}, calc(100% / (${ownerState.ratio})), ${maxHeight || '9999px'})` : `calc(100% / (${ownerState.ratio}))`,\n    borderRadius: 'var(--AspectRatio-radius)',\n    flexDirection: 'column',\n    margin: 'var(--AspectRatio-margin)'\n  };\n});\nconst AspectRatioContent = styled('div', {\n  name: 'JoyAspectRatio',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants;\n  return [{\n    flex: 1,\n    position: 'relative',\n    borderRadius: 'inherit',\n    height: 0,\n    paddingBottom: 'var(--AspectRatio-paddingBottom)',\n    overflow: 'hidden',\n    // use data-attribute instead of :first-child to support zero config SSR (emotion)\n    // use nested selector for integrating with nextjs image `fill` layout (spans are inserted on top of the img)\n    '& [data-first-child]': {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      objectFit: ownerState.objectFit,\n      margin: 0,\n      padding: 0,\n      '& > img': {\n        // support art-direction that uses <picture><img /></picture>\n        width: '100%',\n        height: '100%',\n        objectFit: ownerState.objectFit\n      }\n    }\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];\n});\nconst AspectRatio = /*#__PURE__*/React.forwardRef(function AspectRatio(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAspectRatio'\n  });\n  const {\n      children,\n      ratio = '16 / 9',\n      minHeight,\n      maxHeight,\n      objectFit = 'cover',\n      color: colorProp = 'neutral',\n      variant = 'soft'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, colorProp);\n  const ownerState = _extends({}, props, {\n    minHeight,\n    maxHeight,\n    objectFit,\n    ratio,\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: AspectRatioRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotContent, contentProps] = useSlot('content', {\n    className: classes.content,\n    elementType: AspectRatioContent,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsx(SlotContent, _extends({}, contentProps, {\n      children: React.Children.map(children, (child, index) => index === 0 && /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n        'data-first-child': ''\n      }) : child)\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AspectRatio.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the AspectRatio if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']),\n  /**\n   * The maximum calculated height of the element (not the CSS height).\n   */\n  maxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The minimum calculated height of the element (not the CSS height).\n   */\n  minHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The CSS object-fit value of the first-child.\n   */\n  objectFit: PropTypes.oneOf(['-moz-initial', 'contain', 'cover', 'fill', 'inherit', 'initial', 'none', 'revert-layer', 'revert', 'scale-down', 'unset']),\n  /**\n   * The aspect-ratio of the element. The current implementation uses padding instead of the CSS aspect-ratio due to browser support.\n   * https://caniuse.com/?search=aspect-ratio\n   * @default '16 / 9'\n   */\n  ratio: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AspectRatio;","import { generateUtilityClass, generateUtilityClasses } from '../className';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('JoyCard', slot);\n}\nconst cardClasses = generateUtilityClasses('JoyCard', ['root', 'colorPrimary', 'colorNeutral', 'colorDanger', 'colorInfo', 'colorSuccess', 'colorWarning', 'colorContext', 'variantPlain', 'variantOutlined', 'variantSoft', 'variantSolid', 'sizeSm', 'sizeMd', 'sizeLg', 'row']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * internal utility\n */\n// eslint-disable-next-line import/prefer-default-export\nexport const resolveSxValue = ({\n  theme,\n  ownerState\n}, key, defaultValue) => {\n  let parsedValue;\n  let sxObject = {};\n  function resolveSx(sxProp) {\n    if (typeof sxProp === 'function') {\n      const result = sxProp(theme);\n      resolveSx(result);\n    } else if (Array.isArray(sxProp)) {\n      sxProp.forEach(sxItem => {\n        if (typeof sxItem !== 'boolean') {\n          resolveSx(sxItem);\n        }\n      });\n    } else if (typeof sxProp === 'object') {\n      sxObject = _extends({}, sxObject, sxProp);\n    }\n  }\n  if (ownerState.sx) {\n    resolveSx(ownerState.sx);\n    const value = sxObject[key];\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (key === 'borderRadius') {\n        var _theme$vars;\n        if (typeof value === 'number') {\n          return `${value}px`;\n        }\n        parsedValue = ((_theme$vars = theme.vars) == null ? void 0 : _theme$vars.radius[value]) || value;\n      }\n    }\n  }\n  return parsedValue || defaultValue;\n};","import * as React from 'react';\n\n// internal logic\n// eslint-disable-next-line import/prefer-default-export\nexport const CardRowContext = /*#__PURE__*/React.createContext(false);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"invertedColors\", \"size\", \"variant\", \"children\", \"row\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize, unstable_isMuiElement as isMuiElement } from '@mui/utils';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { ColorInversionProvider, useColorInversion } from '../styles/ColorInversion';\nimport { getCardUtilityClass } from './cardClasses';\nimport { resolveSxValue } from '../styles/styleUtils';\nimport { CardRowContext } from './CardContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    size,\n    variant,\n    color,\n    row\n  } = ownerState;\n  const slots = {\n    root: ['root', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, row && 'row']\n  };\n  return composeClasses(slots, getCardUtilityClass, {});\n};\nconst CardRoot = styled('div', {\n  name: 'JoyCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants, _theme$colorInversion;\n  return [_extends({\n    // a context variable for any child component\n    '--Card-childRadius': 'max((var(--Card-radius) - var(--variant-borderWidth, 0px)) - var(--Card-padding), min(var(--Card-padding) / 2, (var(--Card-radius) - var(--variant-borderWidth, 0px)) / 2))',\n    // AspectRatio integration\n    '--AspectRatio-radius': 'var(--Card-childRadius)',\n    // Link integration\n    '--internal-action-margin': 'calc(-1 * var(--variant-borderWidth, 0px))',\n    // Link, Radio, Checkbox integration\n    '--internal-action-radius': resolveSxValue({\n      theme,\n      ownerState\n    }, 'borderRadius', 'var(--Card-radius)'),\n    // CardCover integration\n    '--CardCover-radius': 'calc(var(--Card-radius) - var(--variant-borderWidth, 0px))',\n    // CardOverflow integration\n    '--CardOverflow-offset': `calc(-1 * var(--Card-padding))`,\n    '--CardOverflow-radius': 'calc(var(--Card-radius) - var(--variant-borderWidth, 0px))',\n    // Divider integration\n    '--Divider-inset': 'calc(-1 * var(--Card-padding))'\n  }, ownerState.size === 'sm' && {\n    '--Card-radius': theme.vars.radius.sm,\n    '--Card-padding': '0.5rem'\n  }, ownerState.size === 'md' && {\n    '--Card-radius': theme.vars.radius.md,\n    '--Card-padding': '1rem',\n    fontSize: theme.vars.fontSize.md\n  }, ownerState.size === 'lg' && {\n    '--Card-radius': theme.vars.radius.lg,\n    '--Card-padding': '1.5rem'\n  }, {\n    padding: 'var(--Card-padding)',\n    borderRadius: 'var(--Card-radius)',\n    boxShadow: theme.shadow.sm,\n    backgroundColor: theme.vars.palette.background.surface,\n    fontFamily: theme.vars.fontFamily.body,\n    // TODO: discuss the theme transition.\n    // This value is copied from mui-material Sheet.\n    transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: ownerState.row ? 'row' : 'column'\n  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], ownerState.color !== 'context' && ownerState.invertedColors && ((_theme$colorInversion = theme.colorInversion[ownerState.variant]) == null ? void 0 : _theme$colorInversion[ownerState.color])];\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCard'\n  });\n  const {\n      className,\n      color: colorProp = 'neutral',\n      component = 'div',\n      invertedColors = false,\n      size = 'md',\n      variant = 'plain',\n      children,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, colorProp);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    row,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const result = /*#__PURE__*/_jsx(CardRowContext.Provider, {\n    value: row,\n    children: /*#__PURE__*/_jsx(CardRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: React.Children.map(children, (child, index) => {\n        if (! /*#__PURE__*/React.isValidElement(child)) {\n          return child;\n        }\n        const extraProps = {};\n        if (isMuiElement(child, ['Divider'])) {\n          extraProps.inset = 'inset' in child.props ? child.props.inset : 'context';\n          const orientation = row ? 'vertical' : 'horizontal';\n          extraProps.orientation = 'orientation' in child.props ? child.props.orientation : orientation;\n        }\n        if (index === 0) {\n          extraProps['data-first-child'] = '';\n        }\n        if (index === React.Children.count(children) - 1) {\n          extraProps['data-last-child'] = '';\n        }\n        return /*#__PURE__*/React.cloneElement(child, extraProps);\n      })\n    }))\n  });\n  if (invertedColors) {\n    return /*#__PURE__*/_jsx(ColorInversionProvider, {\n      variant: variant,\n      children: result\n    });\n  }\n  return result;\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the Card if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the children with an implicit color prop invert their colors to match the component's variant and color.\n   * @default false\n   */\n  invertedColors: PropTypes.bool,\n  /**\n   * If `true`, flex direction is set to 'row'.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['lg', 'md', 'sm']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '../className';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('JoyCardContent', slot);\n}\nconst cardClasses = generateUtilityClasses('JoyCardContent', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"children\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, {});\n};\nconst CardContentRoot = styled('div', {\n  name: 'JoyCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  zIndex: 1\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCardContent'\n  });\n  const {\n      className,\n      component = 'div',\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the CardContent if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { generateUtilityClass, generateUtilityClasses } from '../className';\nexport function getCardOverflowUtilityClass(slot) {\n  return generateUtilityClass('JoyCardOverflow', slot);\n}\nconst aspectRatioClasses = generateUtilityClasses('JoyCardOverflow', ['root', 'colorPrimary', 'colorNeutral', 'colorDanger', 'colorInfo', 'colorSuccess', 'colorWarning', 'colorContext', 'variantPlain', 'variantOutlined', 'variantSoft', 'variantSolid']);\nexport default aspectRatioClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"children\", \"color\", \"variant\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { useColorInversion } from '../styles/ColorInversion';\nimport { getCardOverflowUtilityClass } from './cardOverflowClasses';\nimport { CardRowContext } from '../Card/CardContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getCardOverflowUtilityClass, {});\n};\nconst CardOverflowRoot = styled('div', {\n  name: 'JoyCardOverflow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants;\n  const childRadius = 'calc(var(--CardOverflow-radius) - var(--variant-borderWidth, 0px))';\n  return [ownerState.row ? _extends({\n    '--AspectRatio-margin': 'calc(-1 * var(--Card-padding)) 0px',\n    marginTop: 'var(--CardOverflow-offset)',\n    marginBottom: 'var(--CardOverflow-offset)',\n    padding: 'var(--Card-padding) 0px',\n    borderRadius: 'var(--CardOverflow-radius)',\n    position: 'relative'\n  }, ownerState['data-first-child'] !== undefined && {\n    '--AspectRatio-radius': `${childRadius} 0 0 ${childRadius}`,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    marginLeft: 'var(--CardOverflow-offset)'\n  }, ownerState['data-last-child'] !== undefined && {\n    '--AspectRatio-radius': `0 ${childRadius} ${childRadius} 0`,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    marginRight: 'var(--CardOverflow-offset)'\n  }) : _extends({\n    '--AspectRatio-margin': '0px calc(-1 * var(--Card-padding))',\n    marginLeft: 'var(--CardOverflow-offset)',\n    marginRight: 'var(--CardOverflow-offset)',\n    padding: '0px var(--Card-padding)',\n    borderRadius: 'var(--CardOverflow-radius)',\n    position: 'relative'\n  }, ownerState['data-first-child'] !== undefined && {\n    '--AspectRatio-radius': `${childRadius} ${childRadius} 0 0`,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    marginTop: 'var(--CardOverflow-offset)'\n  }, ownerState['data-last-child'] !== undefined && {\n    '--AspectRatio-radius': `0 0 ${childRadius} ${childRadius}`,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    marginBottom: 'var(--CardOverflow-offset)'\n  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];\n});\nconst CardOverflow = /*#__PURE__*/React.forwardRef(function CardOverflow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCardOverflow'\n  });\n  const row = React.useContext(CardRowContext);\n  const {\n      className,\n      component = 'div',\n      children,\n      color: colorProp = 'neutral',\n      variant = 'plain'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getColor\n  } = useColorInversion(variant);\n  const color = getColor(inProps.color, colorProp);\n  const ownerState = _extends({}, props, {\n    component,\n    color,\n    variant,\n    row\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardOverflowRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardOverflow.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the CardOverflow if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default CardOverflow;","const targetExts = ['.md', '.mdx'];\n\nexport function getPostUri(file: string) {\n  for (const ext of targetExts) {\n    if (file.endsWith(ext)) {\n      file = file.slice(0, file.length - ext.length);\n      break;\n    }\n  }\n  if (!file.startsWith('/')) {\n    file = '/' + file;\n  }\n  if (file.startsWith('/blog')) {\n    file = file.slice(5);\n  }\n  return file;\n}\n","// extracted by mini-css-extract-plugin\nexport var blogArchive = \"BlogArchive-module--blog-archive--85f3a\";\nexport var blogArchiveCard = \"BlogArchive-module--blog-archive-card--8aa97\";\nexport var blogArchiveCardExtended = \"BlogArchive-module--blog-archive-card-extended--87fb1\";\nexport var blogArchiveCardExtendedContent = \"BlogArchive-module--blog-archive-card-extended-content--0bdfa\";\nexport var blogArchiveCardLink = \"BlogArchive-module--blog-archive-card-link--94e30\";\nexport var blogArchivePostDate = \"BlogArchive-module--blog-archive-post-date--4b01e\";\nexport var blogArchivePostTitle = \"BlogArchive-module--blog-archive-post-title--93ad8\";","import React from 'react';\n\nimport AspectRatio from '@mui/joy/AspectRatio';\nimport Card from '@mui/joy/Card';\nimport CardContent from '@mui/joy/CardContent';\nimport CardOverflow from '@mui/joy/CardOverflow';\nimport Divider from '@mui/joy/Divider';\nimport IconButton from '@mui/joy/IconButton';\nimport JoyTypography from '@mui/joy/Typography';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\n\nimport Box from '@mui/joy/Box';\nimport Link from '../Link';\nimport Tag from '../Tag';\nimport Typography from '../Typography';\nimport { getPostUri } from '../../utils/route';\n\nimport * as style from './BlogArchive.module.less';\n\nexport interface PostType {\n  readonly node: {\n    readonly id: string;\n    readonly excerpt: string;\n    readonly frontmatter: {\n      readonly title: string;\n      readonly date: string;\n      readonly cover: string;\n      readonly tags: Array<string>;\n    };\n    readonly parent: {\n      readonly relativePath: string;\n    };\n  };\n}\n\ninterface BlogArchiveProps {\n  posts: Array<PostType>;\n}\n\nexport default (function ({ posts }) {\n  return (\n    <Box className={style.blogArchive}>\n      {posts.map(({ node }) => {\n        const slug = getPostUri(node.parent.relativePath);\n\n        return (\n          <Card className={style.blogArchiveCard} key={node.id} variant=\"outlined\">\n            <AspectRatio minHeight=\"160px\" maxHeight=\"240px\">\n              <img src={node.frontmatter.cover} loading=\"lazy\" alt=\"\" />\n            </AspectRatio>\n            <CardContent>\n              <Link className={style.blogArchiveCardLink} to={slug}>\n                <h2 className={style.blogArchivePostTitle}>\n                  {node.frontmatter.title}\n                  <span className={style.blogArchivePostDate}>{node.frontmatter.date}</span>\n                </h2>\n              </Link>\n              <Typography>{node.excerpt}</Typography>\n            </CardContent>\n            {node.frontmatter.tags?.length && (\n              <CardOverflow className={style.blogArchiveCardExtended} variant=\"soft\" sx={{ bgcolor: 'background.level1' }}>\n                <Divider inset=\"context\" />\n                <CardContent className={style.blogArchiveCardExtendedContent}>\n                  <JoyTypography>{node.frontmatter.tags.map((name: string | null, index: number) => name && <Tag name={name} sx={{ ml: index ? 1 : 0 }}></Tag>)}</JoyTypography>\n                </CardContent>\n              </CardOverflow>\n            )}\n          </Card>\n        );\n      })}\n    </Box>\n  );\n} as React.FC<BlogArchiveProps>);\n"],"names":["props","React","className","children","getAspectRatioUtilityClass","slot","_excluded","AspectRatioRoot","styled","name","overridesResolver","styles","root","ownerState","minHeight","maxHeight","ratio","borderRadius","flexDirection","margin","AspectRatioContent","content","theme","_theme$variants","flex","position","height","paddingBottom","overflow","display","justifyContent","alignItems","boxSizing","width","objectFit","padding","variants","variant","color","inProps","ref","useThemeProps","colorProp","other","getColor","classes","slots","capitalize","composeClasses","useUtilityClasses","SlotRoot","rootProps","useSlot","elementType","externalForwardedProps","SlotContent","contentProps","child","index","getCardUtilityClass","resolveSxValue","key","defaultValue","parsedValue","sxObject","sx","resolveSx","sxProp","Array","isArray","forEach","sxItem","value","_theme$vars","vars","radius","CardRowContext","CardRoot","_theme$colorInversion","size","sm","md","fontSize","lg","boxShadow","shadow","backgroundColor","palette","background","surface","fontFamily","body","transition","row","invertedColors","colorInversion","Card","component","result","Provider","as","extraProps","isMuiElement","inset","orientation","ColorInversion","getCardContentUtilityClass","CardContentRoot","flexGrow","zIndex","CardContent","getCardOverflowUtilityClass","CardOverflowRoot","childRadius","marginTop","marginBottom","undefined","borderTopRightRadius","borderBottomRightRadius","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","marginRight","CardOverflow","targetExts","posts","Box","map","_ref2","node","slug","file","ext","endsWith","slice","length","startsWith","getPostUri","parent","relativePath","id","AspectRatio","src","frontmatter","cover","loading","alt","Link","to","title","date","Typography","excerpt","tags","_node$frontmatter$tag","bgcolor","Divider","JoyTypography","Tag","ml"],"sourceRoot":""}