{"version":3,"file":"component---src-templates-blog-post-js-a0220ba89e469c75f309.js","mappings":"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","sources":["webpack://memset0-blog/./node_modules/@mui/icons-material/Category.js","webpack://memset0-blog/./node_modules/@mui/icons-material/Event.js","webpack://memset0-blog/./node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","webpack://memset0-blog/./node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","webpack://memset0-blog/./node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","webpack://memset0-blog/./node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","webpack://memset0-blog/./src/templates/blog-post.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 2-5.5 9h11z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}, \"1\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13.5h8v8H3z\"\n}, \"2\")], 'Category');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"\n}), 'Event');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport EventIcon from \"@mui/icons-material/Event\";\nimport CategoryIcon from \"@mui/icons-material/Category\";\nimport Link from \"../components/Link\";\nimport Main from \"../components/Main\";\nimport Seo from \"../components/Seo\";\n\nimport { isNegativeIndentTitleRequired } from \"../utils/frontend\";\n\nconst getTitle = ({ data }) => {\n  return data.post.frontmatter.title || \"Untitled!\";\n};\n\nconst BlogPostTemplate = ({ data }) => {\n  const { post } = data;\n\n  let coverImage = null;\n  if (post.fields.hasCover) {\n    coverImage = getImage(post.fields.cover);\n  }\n\n  return (\n    <Main maxWidth=\"lg\" title={getTitle({ data })}>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <Grid container spacing={2}>\n          {/* 这里是博文 */}\n          <Grid item xs={12} lg={9}>\n            <Card className=\"post-card\">\n              {post.fields.hasCover && (\n                <CardMedia component=\"div\">\n                  <GatsbyImage\n                    style={{ width: \"100%\", maxHeight: \"24rem\" }}\n                    image={coverImage}\n                    imgStyle={{\n                      objectFit: \"cover\",\n                      objectPosition: \"center\",\n                    }}\n                    alt={post.frontmatter.title}\n                  />\n                </CardMedia>\n              )}\n\n              <CardContent sx={{ padding: { md: 3 } }}>\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  sx={{\n                    mt: 0.5,\n                    textIndent: isNegativeIndentTitleRequired(\n                      post.frontmatter.title\n                    )\n                      ? \"-0.75rem\"\n                      : 0,\n                    fontSize: { lg: \"1.6rem\" },\n                  }}\n                >\n                  {post.frontmatter.title}\n                </Typography>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    color: \"grey.500\",\n                    mt: 1.5,\n                    mb: 4,\n                  }}\n                >\n                  <EventIcon sx={{ mr: 1 }} />\n                  <Typography variant=\"body1\" color=\"inherit\">\n                    {post.frontmatter.date}\n                  </Typography>\n\n                  <CategoryIcon sx={{ ml: 2, mr: 1 }} />\n                  <Breadcrumbs\n                    aria-label=\"breadcrumb\"\n                    sx={{ color: \"grey.500\" }}\n                  >\n                    {JSON.parse(post.fields.category).map(\n                      ({ name, to }, index) => (\n                        <Link\n                          underline=\"hover\"\n                          color=\"inherit\"\n                          href={to}\n                          key={index}\n                        >\n                          {name}\n                        </Link>\n                      )\n                    )}\n                  </Breadcrumbs>\n                </Box>\n\n                <Typography variant=\"body1\">\n                  <section\n                    className=\"typography\"\n                    itemProp=\"articleBody\"\n                    dangerouslySetInnerHTML={{ __html: post.html }}\n                  />\n                </Typography>\n              </CardContent>\n            </Card>\n\n            {/* 这里放前后博文的导航链接 */}\n            {/* <Grid container spacing={2} sx={{ mt: 1 }}>\n              {previous && (\n                <Grid item xs={12} lg={6}>\n                  <Card>\n                    <CardContent>\n                      <Link to={previous.fields.slug} rel=\"prev\">\n                        ← {previous.frontmatter.title}\n                      </Link>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              )}\n              {next && (\n                <Grid item xs={12} lg={6}>\n                  <Card>\n                    <CardContent>\n                      <Link to={next.fields.slug} rel=\"next\">\n                        {next.frontmatter.title} →\n                      </Link>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              )}\n            </Grid> */}\n          </Grid>\n\n          {/* 这里是侧边栏 */}\n          <Grid item xs={12} lg={3}>\n            <Card>\n              <CardContent>\n                <p>这里是还没做好的侧边栏</p>\n                <p>这里是还没做好的侧边栏</p>\n                <p>这里是还没做好的侧边栏</p>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </article>\n    </Main>\n  );\n};\n\nexport const Head = ({ data }) => {\n  return (\n    <Seo\n      title={getTitle({ data })}\n      description={data.post.frontmatter.description || data.post.excerpt}\n    />\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    post: markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MM/DD/YYYY\")\n        description\n      }\n      fields {\n        cover {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        hasCover\n        category\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","createSvgIcon","_excluded","BreadcrumbCollapsedButton","styled","ButtonBase","theme","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","BreadcrumbCollapsedIcon","MoreHoriz","width","height","props","slots","slotProps","otherProps","ownerState","children","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","Typography","name","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","getTitle","data","post","frontmatter","title","Head","Seo","description","excerpt","coverImage","fields","hasCover","getImage","cover","Main","maxWidth","itemScope","itemType","Grid","container","item","xs","lg","Card","CardMedia","G","style","maxHeight","image","imgStyle","objectFit","objectPosition","alt","CardContent","sx","md","variant","mt","textIndent","isNegativeIndentTitleRequired","fontSize","Box","mb","Event","mr","date","Category","ml","JSON","parse","category","to","Link","underline","href","key","itemProp","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}