{"version":3,"file":"component---src-templates-blog-post-tsx-3c9048a5ed3102f04fbd.js","mappings":"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","sources":["webpack://memset0-blog/./src/components/Image.tsx","webpack://memset0-blog/./node_modules/@mui/material/Typography/typographyClasses.js","webpack://memset0-blog/./node_modules/@mui/material/Typography/Typography.js","webpack://memset0-blog/./src/components/Typography.tsx","webpack://memset0-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface Props {\n  src: string;\n  alt?: string;\n  sx?: any;\n}\n\nconst imageStyles = {\n  width: '100%',\n  maxWidth: '100%',\n  display: 'block',\n};\n\nfunction Image(props: Props) {\n  const { src } = props;\n  if (!src) {\n    throw new Error(\"You can't render an empty image!\");\n  }\n\n  if (src.startsWith('/') || src.startsWith('http://') || src.startsWith('https://')) {\n    return <img src={src} alt={props.alt || ''} style={{ ...imageStyles, ...props.sx }}></img>;\n  } else {\n    throw new Error('Not supported yet.');\n  }\n}\n\nexport default Image;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import React from 'react';\nimport MuiTypography from '@mui/material/Typography';\n\nexport interface TypographyProps {\n  children?: any;\n}\n\nexport default (function Typography({ children }) {\n  return <MuiTypography className='mem-typography'>{children}</MuiTypography>;\n} as React.FC<TypographyProps>);\n","import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\n\nimport Box from '@mui/joy/Box';\nimport AppContainer from '../layouts/AppContainer';\nimport Tag from '../components/Tag';\nimport Image from '../components/Image';\nimport Typography from '../components/Typography';\n\nexport default function BlogPostTemplate({ data }: PageProps<Queries.BlogPostPageQuery>) {\n  const markdownRemark = data.markdownRemark!;\n  const frontmatter = markdownRemark.frontmatter!;\n  const html = markdownRemark.html!;\n\n  return (\n    <AppContainer title={frontmatter.title!} isArticle={true}>\n      {frontmatter?.cover && (\n        <Box\n          sx={{\n            position: 'relative',\n          }}\n        >\n          <Box\n            sx={{\n              overflow: 'hidden',\n              borderRadius: '20px',\n              position: 'absolute',\n              left: 0,\n              right: 0,\n              top: 0,\n              zIndex: -1,\n            }}\n          >\n            <Image\n              src={frontmatter.cover}\n              sx={{\n                objectFit: 'cover',\n                aspectRatio: '20 / 9',\n              }}\n            ></Image>\n          </Box>\n        </Box>\n      )}\n      <Box>\n        <Box\n          sx={{\n            width: '96%',\n            maxWidth: '800px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'inline-block',\n              width: '100%',\n              marginTop: '280px',\n              padding: '32px',\n              minHeight: '840px',\n              background: 'white',\n            }}\n          >\n            <h1\n              style={{\n                fontSize: '1.875rem',\n              }}\n            >\n              {frontmatter.title}\n            </h1>\n\n            <h2>{frontmatter.date}</h2>\n\n            {/* {frontmatter.tags?.length && frontmatter.tags!.map((name: string | null) => <Tag name={name || ''}></Tag>)} */}\n\n            <Typography>\n              <div dangerouslySetInnerHTML={{ __html: html }}></div>\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n    </AppContainer>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover\n      }\n    }\n  }\n`;\n"],"names":["imageStyles","width","maxWidth","display","props","src","Error","startsWith","React","alt","style","sx","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","theme","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","as","children","MuiTypography","BlogPostTemplate","data","markdownRemark","frontmatter","html","AppContainer","title","isArticle","cover","Box","position","borderRadius","left","right","top","zIndex","Image","objectFit","aspectRatio","marginLeft","marginRight","marginTop","padding","minHeight","background","fontSize","date","Typography","dangerouslySetInnerHTML","__html"],"sourceRoot":""}