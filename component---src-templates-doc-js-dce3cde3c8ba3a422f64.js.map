{"version":3,"file":"component---src-templates-doc-js-dce3cde3c8ba3a422f64.js","mappings":"kQAaA,MAAMA,EAAWC,IAAe,IAAd,KAAEC,GAAMD,EACxB,OAAOC,EAAKC,KAAKC,YAAYC,OAAS,WAAW,EA2EtCC,EAAOC,IAAe,IAAd,KAAEL,GAAMK,EAC3B,OACEC,EAAAA,cAACC,EAAAA,EAAG,CAACJ,MAAOL,EAAS,CAAEE,SAASQ,YAAaR,EAAKC,KAAKC,YAAYM,aAAeR,EAAKC,KAAKQ,SAAW,EAI3G,UA9EoBC,IAAsC,IAArC,KAAEV,EAAI,SAAEW,EAAQ,YAAEC,GAAaF,EAClD,MAAM,KAAET,GAASD,GACX,QAAEa,GAAYD,GACd,UAAEE,GAAcb,EAAKc,OACrBC,EAAQF,GAAaG,KAAKC,MAAMJ,GAMtC,OAJAK,QAAQC,IAAI,CAAEpB,OAAMY,gBACpBO,QAAQC,IAAI,QAASH,KAAKC,MAAML,IAChCM,QAAQC,IAAI,UAAWJ,GAGrBV,EAAAA,cAACe,EAAAA,EAAI,CAACC,SAAS,KAAKnB,MAAOL,EAAS,CAAEE,SAASW,SAAUA,EAAUE,QAASA,GAC1EP,EAAAA,cAAA,WAASiB,WAAS,EAACC,SAAS,6BAC1BlB,EAAAA,cAACmB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GAEvBrB,EAAAA,cAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBxB,EAAAA,cAACyB,EAAAA,EAAI,CAACC,UAAWC,EAAAA,IACf3B,EAAAA,cAAC4B,EAAAA,EAAW,CAACC,GAAI,CAAEC,QAAS,CAAEC,GAAI,KAChC/B,EAAAA,cAACgC,EAAAA,EAAU,CACTC,UAAU,MACVP,UAAWC,EAAAA,GAAsB,IAAMA,EAAAA,GACvCE,GAAI,CACFK,YAAYC,EAAAA,EAAAA,GAAexC,EAAKC,YAAYC,OAAS,UAAY,EACjEuC,GAAI,IAGLzC,EAAKC,YAAYC,OAGnBa,GACCV,EAAAA,cAACqC,EAAAA,EAAG,CAACR,GAAI,CAAEO,GAAI,EAAGE,GAAI,IACnB5B,EAAM6B,KAAI,CAACC,EAAIC,IACdzC,EAAAA,cAACgC,EAAAA,EAAU,CACTU,QAAQ,QACRT,UAAU,MACVU,IAAKF,EACLZ,GAAI,CAAEe,WAAY,MAAOC,MAAO,SAEhC7C,EAAAA,cAAA,OAAK8C,MAAO,CAAEC,MAAO,QAASC,QAAS,iBAAmBR,EAAGG,KAC5DH,EAAGS,UAMZjD,EAAAA,cAACgC,EAAAA,EAAU,CAACU,QAAQ,QAAQb,GAAI,CAAEO,GAAI,IACpCpC,EAAAA,cAAA,WACE0B,UAAU,4BACVwB,SAAS,cACTC,wBAAyB,CAAEC,OAAQzD,EAAK0D,YAQlDrD,EAAAA,cAACmB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBxB,EAAAA,cAACyB,EAAAA,EAAI,KACHzB,EAAAA,cAAC4B,EAAAA,EAAW,KACV5B,EAAAA,cAAA,SAAG,eACHA,EAAAA,cAAA,SAAG,eACHA,EAAAA,cAAA,SAAG,oBAMR,C,gICpFJ,IAAIsD,EAAc,sCACdC,EAAe,uCACfC,EAAkB,2CAClBC,EAAmB,2C","sources":["webpack://memset0-blog/./src/templates/doc.js","webpack://memset0-blog/./src/style/article.module.less"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Main from \"../components/Main\";\nimport Seo from \"../components/Seo\";\n\nimport { checkNegIndent } from \"../utils/frontend\";\nimport * as styles from \"../style/article.module.less\";\n\nconst getTitle = ({ data }) => {\n  return data.post.frontmatter.title || \"Untitled!\";\n};\n\nconst DocTemplate = ({ data, location, pageContext }) => {\n  const { post } = data;\n  const { navJson } = pageContext;\n  const { propsJson } = post.fields;\n  const props = propsJson && JSON.parse(propsJson);\n\n  console.log({ data, pageContext });\n  console.log(\"[nav]\", JSON.parse(navJson));\n  console.log(\"[props]\", props);\n\n  return (\n    <Main maxWidth=\"lg\" title={getTitle({ data })} location={location} navJson={navJson}>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <Grid container spacing={2}>\n          {/* 这里是博文 */}\n          <Grid item xs={12} lg={9}>\n            <Card className={styles.articleCard}>\n              <CardContent sx={{ padding: { md: 3 } }}>\n                <Typography\n                  component=\"div\"\n                  className={styles.articleTitle + \" \" + styles.articleTitleDoc}\n                  sx={{\n                    textIndent: checkNegIndent(post.frontmatter.title) ? \"-0.32em\" : 0,\n                    mt: 2,\n                  }}\n                >\n                  {post.frontmatter.title}\n                </Typography>\n\n                {props && (\n                  <Box sx={{ mt: 2, ml: 4 }}>\n                    {props.map((el, index) => (\n                      <Typography\n                        variant=\"body1\"\n                        component=\"div\"\n                        key={index}\n                        sx={{ lineHeight: \"1.8\", color: \"grey\" }}\n                      >\n                        <div style={{ width: \"9.8em\", display: \"inline-block\" }}>{el.key}</div>\n                        {el.value}\n                      </Typography>\n                    ))}\n                  </Box>\n                )}\n\n                <Typography variant=\"body1\" sx={{ mt: 4 }}>\n                  <section\n                    className=\"typography typography-doc\"\n                    itemProp=\"articleBody\"\n                    dangerouslySetInnerHTML={{ __html: post.html }}\n                  />\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* 这里是侧边栏 */}\n          <Grid item xs={12} lg={3}>\n            <Card>\n              <CardContent>\n                <p>这里是还没做好的侧边栏</p>\n                <p>这里是还没做好的侧边栏</p>\n                <p>这里是还没做好的侧边栏</p>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </article>\n    </Main>\n  );\n};\n\nexport const Head = ({ data }) => {\n  return (\n    <Seo title={getTitle({ data })} description={data.post.frontmatter.description || data.post.excerpt} />\n  );\n};\n\nexport default DocTemplate;\n\nexport const pageQuery = graphql`\n  query DocTemplate($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    post: markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MM/DD/YYYY\")\n        description\n      }\n      fields {\n        category\n        propsJson\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var articleCard = \"article-module--article-card--a261e\";\nexport var articleTitle = \"article-module--article-title--12b60\";\nexport var articleTitleDoc = \"article-module--article-title-doc--d1b5f\";\nexport var articleTitlePost = \"article-module--article-title-post--e0239\";"],"names":["getTitle","_ref","data","post","frontmatter","title","Head","_ref3","React","Seo","description","excerpt","_ref2","location","pageContext","navJson","propsJson","fields","props","JSON","parse","console","log","Main","maxWidth","itemScope","itemType","Grid","container","spacing","item","xs","lg","Card","className","styles","CardContent","sx","padding","md","Typography","component","textIndent","checkNegIndent","mt","Box","ml","map","el","index","variant","key","lineHeight","color","style","width","display","value","itemProp","dangerouslySetInnerHTML","__html","html","articleCard","articleTitle","articleTitleDoc","articleTitlePost"],"sourceRoot":""}