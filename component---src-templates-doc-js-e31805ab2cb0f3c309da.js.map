{"version":3,"file":"component---src-templates-doc-js-e31805ab2cb0f3c309da.js","mappings":"wPAYA,MAAMA,EAAWC,IAAe,IAAd,KAAEC,GAAMD,EACxB,OAAOC,EAAKC,KAAKC,YAAYC,OAAS,WAAW,EAsDtCC,EAAOC,IAAe,IAAd,KAAEL,GAAMK,EAC3B,OACEC,EAAAA,cAACC,EAAAA,EAAG,CAACJ,MAAOL,EAAS,CAAEE,SAASQ,YAAaR,EAAKC,KAAKC,YAAYM,aAAeR,EAAKC,KAAKQ,SAAW,EAI3G,UAzDoBC,IAAsC,IAArC,KAAEV,EAAI,SAAEW,EAAQ,YAAEC,GAAaF,EAClD,MAAM,KAAET,GAASD,GACX,QAAEa,GAAYD,EAKpB,OAHAE,QAAQC,IAAI,CAAEf,OAAMY,gBACpBE,QAAQC,IAAI,QAASC,KAAKC,MAAMJ,IAG9BP,EAAAA,cAACY,EAAAA,EAAI,CAACC,SAAS,KAAKhB,MAAOL,EAAS,CAAEE,SAASW,SAAUA,EAAUE,QAASA,GAC1EP,EAAAA,cAAA,WAASc,WAAS,EAACC,SAAS,6BAC1Bf,EAAAA,cAACgB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GAEvBlB,EAAAA,cAACgB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBrB,EAAAA,cAACsB,EAAAA,EAAI,CAACC,UAAWC,EAAAA,GACfxB,EAAAA,cAACyB,EAAAA,EAAW,CAACC,GAAI,CAAEC,QAAS,CAAEC,GAAI,KAChC5B,EAAAA,cAAC6B,EAAAA,EAAU,CACTC,QAAQ,KACRC,UAAU,MACVR,UAAWC,EAAAA,EACXE,GAAI,CAAEM,YAAYC,EAAAA,EAAAA,GAAetC,EAAKC,YAAYC,OAAS,UAAY,IAEtEF,EAAKC,YAAYC,OAGpBG,EAAAA,cAAC6B,EAAAA,EAAU,CAACC,QAAQ,SAClB9B,EAAAA,cAAA,WACEuB,UAAU,aACVW,SAAS,cACTC,wBAAyB,CAAEC,OAAQzC,EAAK0C,YAQlDrC,EAAAA,cAACgB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBrB,EAAAA,cAACsB,EAAAA,EAAI,KACHtB,EAAAA,cAACyB,EAAAA,EAAW,KACVzB,EAAAA,cAAA,SAAG,eACHA,EAAAA,cAAA,SAAG,eACHA,EAAAA,cAAA,SAAG,oBAMR,C,8EC9DJ,IAAIsC,EAAc,sCACdC,EAAe,sC","sources":["webpack://memset0-blog/./src/templates/doc.js","webpack://memset0-blog/./src/style/article.module.less"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Main from \"../components/Main\";\nimport Seo from \"../components/Seo\";\n\nimport { checkNegIndent } from \"../utils/frontend\";\nimport * as styles from \"../style/article.module.less\";\n\nconst getTitle = ({ data }) => {\n  return data.post.frontmatter.title || \"Untitled!\";\n};\n\nconst DocTemplate = ({ data, location, pageContext }) => {\n  const { post } = data;\n  const { navJson } = pageContext;\n\n  console.log({ data, pageContext });\n  console.log(\"[nav]\", JSON.parse(navJson));\n\n  return (\n    <Main maxWidth=\"lg\" title={getTitle({ data })} location={location} navJson={navJson}>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <Grid container spacing={2}>\n          {/* 这里是博文 */}\n          <Grid item xs={12} lg={9}>\n            <Card className={styles.articleCard}>\n              <CardContent sx={{ padding: { md: 3 } }}>\n                <Typography\n                  variant=\"h5\"\n                  component=\"div\"\n                  className={styles.articleTitle}\n                  sx={{ textIndent: checkNegIndent(post.frontmatter.title) ? \"-0.35em\" : 0 }}\n                >\n                  {post.frontmatter.title}\n                </Typography>\n\n                <Typography variant=\"body1\">\n                  <section\n                    className=\"typography\"\n                    itemProp=\"articleBody\"\n                    dangerouslySetInnerHTML={{ __html: post.html }}\n                  />\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* 这里是侧边栏 */}\n          <Grid item xs={12} lg={3}>\n            <Card>\n              <CardContent>\n                <p>这里是还没做好的侧边栏</p>\n                <p>这里是还没做好的侧边栏</p>\n                <p>这里是还没做好的侧边栏</p>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </article>\n    </Main>\n  );\n};\n\nexport const Head = ({ data }) => {\n  return (\n    <Seo title={getTitle({ data })} description={data.post.frontmatter.description || data.post.excerpt} />\n  );\n};\n\nexport default DocTemplate;\n\nexport const pageQuery = graphql`\n  query DocTemplate($id: String!, $previousPostId: String, $nextPostId: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    post: markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MM/DD/YYYY\")\n        description\n      }\n      fields {\n        category\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var articleCard = \"article-module--article-card--a261e\";\nexport var articleTitle = \"article-module--article-title--12b60\";"],"names":["getTitle","_ref","data","post","frontmatter","title","Head","_ref3","React","Seo","description","excerpt","_ref2","location","pageContext","navJson","console","log","JSON","parse","Main","maxWidth","itemScope","itemType","Grid","container","spacing","item","xs","lg","Card","className","styles","CardContent","sx","padding","md","Typography","variant","component","textIndent","checkNegIndent","itemProp","dangerouslySetInnerHTML","__html","html","articleCard","articleTitle"],"sourceRoot":""}