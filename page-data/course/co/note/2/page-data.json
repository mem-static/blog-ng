{"componentChunkName":"component---src-templates-post-js","path":"/course/co/note/2/","result":{"data":{"site":{"siteMetadata":{"title":"mem 的小站"}},"post":{"id":"483a6610-cff6-5f86-9ffe-a298b8b692f0","excerpt":"1. Numbers 1.1. Radix-Based System  最高有效位(Most Significant Digit, MSD)： 最低有效位(Least Significant Digit, LSD)： 1.2. Binary Representations…","html":"<h2 id=\"anchor-69ad5044d98258f0\" style=\"position: relative;\"><a href=\"#anchor-69ad5044d98258f0\" aria-label=\"anchor 69ad5044d98258f0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Numbers</h2>\n<h3 id=\"anchor-f450ac5cb51b2302\" style=\"position: relative;\"><a href=\"#anchor-f450ac5cb51b2302\" aria-label=\"anchor f450ac5cb51b2302 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. Radix-Based System</h3>\n<p><img src=\"https://img.memset0.cn/2024/10/15/prMkGudL.png\"alt=\"\" style=\"width: 401px; \" ></p>\n<ul>\n<li><strong>最高有效位(Most Significant Digit, MSD)</strong>：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">A_{n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span></span></li>\n<li><strong>最低有效位(Least Significant Digit, LSD)</strong>：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mrow><mo>−</mo><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">A_{-m}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<h3 id=\"anchor-a807fc7d111dcf7c\" style=\"position: relative;\"><a href=\"#anchor-a807fc7d111dcf7c\" aria-label=\"anchor a807fc7d111dcf7c permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. Binary Representations</h3>\n<p>对于正数而言，原码=反码=补码；而对于负数：</p>\n<ul>\n<li><strong>原码(sign-magnitude)</strong>：符号位为 1，其余位和其相反数的表示相同。</li>\n<li><strong>反码(1's complement code)</strong>：在其相反数的表示的基础上取反。</li>\n<li><strong>补码(2's complement code)</strong>：在其相反数的表示的基础上取反并 + 1。</li>\n</ul>\n<p>另外，一些场合（比如：IEEE754 标准浮点数的指数部分（阶码））还会用到移码：</p>\n<ul>\n<li><strong>移码(biased notation)</strong>：统一加上一个固定常数并用无符号整数的方法表示。</li>\n</ul>\n<p><details open disabled class=\"callout callout-type-warning\"><summary> 原码表示和补码表示的差异</summary><div class=\"callout-content\"><p>\n原码和补码下表示正数都是<mark class=\"m-mark\">不变</mark>，且符号位为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span>。但是原码表示下的负数仅符号位为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span>，其余为是数值绝对值的二进制表示；补码表示下的负数会取反并加一。</p></div></details></p>\n<h2 id=\"anchor-23f041aebf645e1f\" style=\"position: relative;\"><a href=\"#anchor-23f041aebf645e1f\" aria-label=\"anchor 23f041aebf645e1f permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ALU</h2>\n<h3 id=\"anchor-2eaa39857cdc4162\" style=\"position: relative;\"><a href=\"#anchor-2eaa39857cdc4162\" aria-label=\"anchor 2eaa39857cdc4162 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. 1-bit ALU</h3>\n<p>AND 和 OR 的功能可以直接使用对应的电路门。</p>\n<p>加法功能通过 <strong>一位全加器(1-bit full adder)</strong> 实现（后面直接用“方括号内加号”的组合来表示全加器）：</p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>S</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo>⊕</mo><msub><mi>C</mi><mtext>in</mtext></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>C</mi><mtext>out</mtext></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>B</mi><mo>⋅</mo><msub><mi>C</mi><mtext>in</mtext></msub><mo>+</mo><mi>A</mi><mo>⋅</mo><msub><mi>C</mi><mtext>in</mtext></msub><mo>+</mo><mi>A</mi><mo>⋅</mo><mi>B</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\nS &#x26;= A \\oplus B \\oplus C_{\\text{in}} \\\\\nC_{\\text{out}} &#x26;= B \\cdot C_{\\text{in}} + A \\cdot C_{\\text{in}} + A \\cdot B\n\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3em;vertical-align:-1.25em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">out</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.75em;\"><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3175em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">in</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3175em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">in</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3175em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">in</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.25em;\"><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p><img src=\"https://img.memset0.cn/2024/10/15/S4jaIXpe.png\"alt=\"\" style=\"width: 297px; \" ></p>\n<p>为了实现减法器，多一个 Binvert 输入控制（而不是通过 Operation 控制）是否需要将输入 B 取反并将第一个 CarryIn 设 1，因为减一个数就相当于加上这个数的补码。</p>\n<p><img src=\"https://img.memset0.cn/2024/10/15/fM4X5Czh.png\"alt=\"\" style=\"width: 346px; \" ></p>\n<p>这样的 1-bit ALU 已经实现了最基本的 AND、OR、加法、减法四种功能。</p>\n<h3 id=\"anchor-7c6cc4d0baf33e07\" style=\"position: relative;\"><a href=\"#anchor-7c6cc4d0baf33e07\" aria-label=\"anchor 7c6cc4d0baf33e07 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. Complete ALU</h3>\n<p>可以直接把 1-bit 连接起来拼成一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span> 位的 ALU。这样的设计虽然简单，但是速度慢。</p>\n<p>真实的 ALU 每个部分都应是用更快的电路实现的，最后通过一个 MUX 实现选择。</p>\n<ul>\n<li>Zero detection：给输出加一个或非门，即可作为一个判断结果是否为 0 的输出。</li>\n</ul>\n<h4 id=\"anchor-cb321bd09ce78f67\" style=\"position: relative;\"><a href=\"#anchor-cb321bd09ce78f67\" aria-label=\"anchor cb321bd09ce78f67 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.1. Overflow Detection</h4>\n<p>两个数的和或差可能超过可以被表示的范围，这种情况下就是发生了 <strong>溢出(overflow)</strong>，ALU 可以支持溢出检测。</p>\n<ul>\n<li>对于有符号数运算，正数和正数相加得到负数，或者负数和负数相加得到负数，就可以认为发生了溢出。这里正数包括 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span>。</li>\n<li>对于无符号数运算，两个数相加的结果小于其中任何一个数，就可以认为发生了溢出。</li>\n</ul>\n<p>一般来说，实现上我们需要将结果扩展一位，并和最高位综合进行检测。</p>\n<p><img src=\"https://img.memset0.cn/2024/09/18/wEdNgTlV.png\"alt=\"一般溢出条件\" style=\"width: 476px; \" ><span class=\"image-alt\">一般溢出条件</span></p>\n<h3 id=\"anchor-91263dc3cf7f2226\" style=\"position: relative;\"><a href=\"#anchor-91263dc3cf7f2226\" aria-label=\"anchor 91263dc3cf7f2226 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3. Comparison</h3>\n<p>两个计算时会发生 overflow 的数也可以进行比较，比如 <code class=\"language-text\">127</code> 减 <code class=\"language-text\">-128</code>。这时可以通过符号位得到结果，而不用担心减法产生溢出。</p>\n<p><details open disabled class=\"callout callout-type-note\"><summary> 对应指令 <code class=\"language-text\">slt rd, rs, rt</code>（set on less than）</summary><div class=\"callout-content\"><p></p><p>行为：如果 <code class=\"language-text\">rs</code> &#x3C; <code class=\"language-text\">rt</code>，则设 <code class=\"language-text\">rd</code> 为 1，否则设 <code class=\"language-text\">rd</code> 为 0。（<code class=\"language-text\">rd</code> 除了最低有效位，其他位都为 0）</p></div></details></p>\n<h3 id=\"anchor-95e08471417af3f0\" style=\"position: relative;\"><a href=\"#anchor-95e08471417af3f0\" aria-label=\"anchor 95e08471417af3f0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4. Faster Adders</h3>\n<ul>\n<li>所有的组合逻辑都可以通过二级逻辑表示（但是其硬件代价可能极高）。</li>\n</ul>\n<h4 id=\"anchor-df1d2ff7cbf3e39e\" style=\"position: relative;\"><a href=\"#anchor-df1d2ff7cbf3e39e\" aria-label=\"anchor df1d2ff7cbf3e39e permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4.1. Carry Lookahead Adder</h4>\n<p><strong>超前进位加法器(Carry Lookahead Adder, CLA)</strong> 通过“超前进位”的方式改进 <strong>行波进位加法器(Ripple Carry Adder, RCA)</strong> 中后一位必须等待前一位进位结果的问题。关于加法中的进位，可以视为两种条件：</p>\n<ul>\n<li><strong>生成(generate)</strong>：记作 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>G</mi><mi>i</mi></msub><mo>=</mo><msub><mi>A</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">G_i=A_i \\cdot B_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>，即第 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span></span> 位两位相加本身是否会产生进位。</li>\n<li><strong>传播(propagate)</strong>：记作 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">P_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>，接到低位的 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>G</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">G_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span></span> 一起，用来表示进位逐步上传的过程。</li>\n</ul>\n<p><img src=\"https://img.memset0.cn/2024/10/16/JxKbR8HK.png\"alt=\"4 bit CLA\" style=\"width: 370px; \" ><span class=\"image-alt\">4 bit CLA</span></p>\n<p>CLA 的底层也可以不是 1 bit Adder，而是另一个 CLA，如两层 4 bit CLA 嵌套就可以实现 16 bit 加法器。</p>\n<p><img src=\"https://img.memset0.cn/2024/10/16/exCQZdiU.png\"alt=\"16 bit CLA\" style=\"width: 525px; \" ><span class=\"image-alt\">16 bit CLA</span></p>\n<h4 id=\"anchor-b7eee6a7e2acfec4\" style=\"position: relative;\"><a href=\"#anchor-b7eee6a7e2acfec4\" aria-label=\"anchor b7eee6a7e2acfec4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4.2. Carry Select Adder</h4>\n<p><strong>进位选择加法器(Carry Select Adder, CSA)</strong> 通过在加法器中添加一个选择器，在计算时同时计算两种情况，然后根据进位选择结果。</p>\n<p><img src=\"https://img.memset0.cn/2024/10/16/O4N6D3oL.png\"alt=\"\" style=\"width: 461px; \" ></p>\n<p>CSA 和 CLA 没有一定优劣，在实际优劣中，我们可以根据对性能快还是面积小的需求选择合适的加法器。</p>\n<h2 id=\"anchor-2f93449aec4d169d\" style=\"position: relative;\"><a href=\"#anchor-2f93449aec4d169d\" aria-label=\"anchor 2f93449aec4d169d permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Multiplier</h2>\n<h3 id=\"anchor-8030def8ec914fed\" style=\"position: relative;\"><a href=\"#anchor-8030def8ec914fed\" aria-label=\"anchor 8030def8ec914fed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1. Unsigned Multiplication</h3>\n<h4 id=\"anchor-8a8435ebf6cfcded\" style=\"position: relative;\"><a href=\"#anchor-8a8435ebf6cfcded\" aria-label=\"anchor 8a8435ebf6cfcded permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1.1. Approach 1</h4>\n<p>按照竖式乘法的算术法则实现。</p>\n<p><img src=\"https://img.memset0.cn/2024/09/23/hyGyoyjX.png\"alt=\"\" style=\"width: 501px; \" ></p>\n<p><strong>具体过程</strong>：执行以下步骤 64 次：</p>\n<ol>\n<li>判断 Multiplier 寄存器的最低位是否是 1：</li>\n<li>如果是，则将 Multiplicand 寄存器的值加到 Product 寄存器里；</li>\n<li>如果否，进入下一步；</li>\n<li>将 Multiplier 寄存器的值右移一位（这是为了不断拿出每一位，相当于在枚举 Multiplier 的每一位），将 Multiplicand 寄存器的值左移一位（对应于和 Multiplier 的第几位乘得到的位移，具体参考上面的链接内容）；</li>\n<li>判断是否做满 64 次，决定是否终止；</li>\n</ol>\n<h4 id=\"anchor-3a6a725100c8cdff\" style=\"position: relative;\"><a href=\"#anchor-3a6a725100c8cdff\" aria-label=\"anchor 3a6a725100c8cdff permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1.2. Approach 2</h4>\n<p>只在 Product 的左半部分应用加法，这样 ALU 的大小可以减半。</p>\n<p><img src=\"https://img.memset0.cn/2024/09/23/48AZ1pcN.png\"alt=\"\" style=\"width: 647px; \" ></p>\n<p><strong>具体过程</strong>：执行以下步骤 64 次：</p>\n<ol>\n<li>判断 Multiplier 寄存器的最低位是否是 1：</li>\n<li>如果是，则将 Multiplicand 寄存器的值加到 Product 寄存器的左半部分里；</li>\n<li>如果否，进入下一步；</li>\n<li>将 Multiplier 寄存器的值右移一位，将 Product 寄存器的值右移一位；</li>\n<li>判断是否做满 64 次，决定是否终止；</li>\n</ol>\n<p><details open disabled class=\"callout callout-type-warning\"><summary> Why 129 bits?</summary><div class=\"callout-content\"><p></p><p>在执行循环的第 2 步时，可能会有加法进位的问题，这一问题也同样会出现在下面的 Approach 3。如果认为加法和右移的过程不是同时的，那么 Product 寄存器就需要<mark class=\"m-mark\">有额外的 1 位用来存储进位</mark>。</p></div></details></p>\n<h4 id=\"anchor-1a07f763f2f182c4\" style=\"position: relative;\"><a href=\"#anchor-1a07f763f2f182c4\" aria-label=\"anchor 1a07f763f2f182c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1.3. Approach 3</h4>\n<p>把 Multiplier 寄存器和 Product 寄存器进行合并，每次只有一个寄存器需要右移。</p>\n<p><img src=\"https://img.memset0.cn/2024/09/23/8erWNFxv.png\"alt=\"\" style=\"width: 477px; \" ></p>\n<p><strong>具体过程</strong>：先将 Multiplexer 放到 Product 寄存器的低 64 位，然后执行以下步骤 64 次：</p>\n<ol>\n<li>判断 Product 寄存器的最低位是否是 1：</li>\n<li>如果是，则将 Multiplicand 寄存器的值加到 Product 寄存器的左半部分里；</li>\n<li>如果否，进入下一步；</li>\n<li>将 Product 寄存器的值右移一位；</li>\n<li>判断是否做满 64 次，决定是否终止；</li>\n</ol>\n<h3 id=\"anchor-6934cc06da21e4ea\" style=\"position: relative;\"><a href=\"#anchor-6934cc06da21e4ea\" aria-label=\"anchor 6934cc06da21e4ea permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2. Signed Multiplication</h3>\n<p>上面的乘法不能用补码，只能先进行绝对值的乘法，再把符号位单独处理并应用到结果上。</p>\n<p>使用 Booth's Algorithm 可以实现基于补码的乘法（仅了解）。</p>\n<ul>\n<li>注意 <strong>算术右移(arithmetic shift right)</strong> 时应保持符号位不变，最高位补符号位。</li>\n</ul>\n<h3 id=\"anchor-175ef4df11b0d28d\" style=\"position: relative;\"><a href=\"#anchor-175ef4df11b0d28d\" aria-label=\"anchor 175ef4df11b0d28d permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3. Parallel Multiplier</h3>\n<p>我觉得这个图放在这里本身就有问题。</p>\n<p><img src=\"https://img.memset0.cn/2024/10/16/Gj41Bqbw.png\"alt=\"\" style=\"width: 642px; \" ></p>\n<p>（TBD：我不理解！）</p>\n<h2 id=\"anchor-23040e0950f0c3f6\" style=\"position: relative;\"><a href=\"#anchor-23040e0950f0c3f6\" aria-label=\"anchor 23040e0950f0c3f6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Division</h2>\n<p>TBD</p>\n<h3 id=\"anchor-b4605cb43a3362c2\" style=\"position: relative;\"><a href=\"#anchor-b4605cb43a3362c2\" aria-label=\"anchor b4605cb43a3362c2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1. Unsigned Division</h3>\n<h4 id=\"anchor-aafb44878d2cbddf\" style=\"position: relative;\"><a href=\"#anchor-aafb44878d2cbddf\" aria-label=\"anchor aafb44878d2cbddf permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1.1. Approach 1</h4>\n<h4 id=\"anchor-aa98b6c17154ad1d\" style=\"position: relative;\"><a href=\"#anchor-aa98b6c17154ad1d\" aria-label=\"anchor aa98b6c17154ad1d permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1.2. Approach 2</h4>\n<h4 id=\"anchor-1b07c0065264d32d\" style=\"position: relative;\"><a href=\"#anchor-1b07c0065264d32d\" aria-label=\"anchor 1b07c0065264d32d permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1.3. Approach 3</h4>\n<h3 id=\"anchor-cd352e3b32c11e31\" style=\"position: relative;\"><a href=\"#anchor-cd352e3b32c11e31\" aria-label=\"anchor cd352e3b32c11e31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2. Faster Division</h3>\n<p>与乘法不同，除法不能通过循环展开来并行。一些其它的加速方法如 SRT Division 仍需要多步。</p>\n<h2 id=\"anchor-71202e37f26b2874\" style=\"position: relative;\"><a href=\"#anchor-71202e37f26b2874\" aria-label=\"anchor 71202e37f26b2874 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Floating Arithmetic</h2>\n<h3 id=\"anchor-a8027dfe564c9586\" style=\"position: relative;\"><a href=\"#anchor-a8027dfe564c9586\" aria-label=\"anchor a8027dfe564c9586 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1. IEEE 754 Representation</h3>\n<ul>\n<li>符号位：一般来说正数就是 0 负数就是 1。</li>\n<li>尾数：去除符号位后应被移到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1.</mn><mtext>xxxxx</mtext></mrow><annotation encoding=\"application/x-tex\">1.\\text{xxxxx}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1.</span><span class=\"mord text\"><span class=\"mord\">xxxxx</span></span></span></span></span></span> 的形式，所以最高位的 1 可以被省略（称为 <strong>hidden 1</strong>）。\n<ul>\n<li>对于一些不使用 hidden 1 策略的表示方式则移到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0.1</mn><mtext>xxxxx</mtext></mrow><annotation encoding=\"application/x-tex\">0.1\\text{xxxxx}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.1</span><span class=\"mord text\"><span class=\"mord\">xxxxx</span></span></span></span></span></span> 的形式，注意不同的方式会影响阶码的值。</li>\n</ul>\n</li>\n<li>指数：用移码表示，单精度浮点数的 <strong>偏移(bias)</strong> 为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>127</mn></mrow><annotation encoding=\"application/x-tex\">127</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">127</span></span></span></span></span>，双精度浮点数的偏移为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1023</mn></mrow><annotation encoding=\"application/x-tex\">1023</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1023</span></span></span></span></span>（刚好是范围的一半）。</li>\n</ul>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mtext>sign</mtext></msup><mo>⋅</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mtext>significand</mtext><mo stretchy=\"false\">)</mo><mo>⋅</mo><msup><mn>2</mn><mtext>exponent-bias</mtext></msup></mrow><annotation encoding=\"application/x-tex\">(-1)^\\text{sign} \\cdot (1+\\text{significand}) \\cdot 2^{\\text{exponent-bias}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1305em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8805em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">sign</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">significand</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8991em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">exponent-bias</span></span></span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p><details  class=\"callout callout-type-example\"><summary> <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>0.75</mn></mrow><annotation encoding=\"application/x-tex\">-0.75</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">0.75</span></span></span></span></span> 的单精度、双精度表示</summary><div class=\"callout-content\"><p></p><p><img src=\"https://img.memset0.cn/2024/11/18/Lpm9HU9X.png\"alt=\"\" style=\"width: 600px; \" ></p></div></details></p>\n<p>一些特殊值：</p>\n<ul>\n<li>NaN：Exponent = 111...1, Fraction ≠ 000...0</li>\n<li>Infinity：Exponent = 111...1, Fraction = 000...0</li>\n</ul>\n<p><img src=\"https://img.memset0.cn/2024/11/18/eS2XxifQ.png\"alt=\"\" style=\"width: 627px; \" ></p>\n<p><details  class=\"callout callout-type-example\"><summary> 单精度、双精度表示法的范围和精度</summary><div class=\"callout-content\"><p></p><p><img src=\"https://img.memset0.cn/2024/11/18/vkTUdE9O.png\"alt=\"\" style=\"width: 600px; \" ></p></div></details></p>\n<h3 id=\"anchor-e2184dac254102bb\" style=\"position: relative;\"><a href=\"#anchor-e2184dac254102bb\" aria-label=\"anchor e2184dac254102bb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.2. Floating Point Addition</h3>\n<ul>\n<li>Step 1：<strong>对齐(alignment)</strong>，即让两个数的指数相同，不能表示的位（被移出的位）将被舍弃。这里还需要补上前面被省略掉的尾数最高位。</li>\n<li>Step 2：将对齐后的小数部分进行相加。</li>\n<li>Step 3：<strong>规格化(normalization)</strong>，将其移位直到符合标准。</li>\n<li>Step 4：<strong>上溢(overflow)</strong> 或 <strong>下溢(underflow)</strong> 检测。</li>\n<li>Step 5：<strong>舍入(rounding)</strong>，将结果舍入到最接近的值。</li>\n<li>Step 6：还需要再进行一次规格化，因为 rounding 时可能产生了进位。</li>\n</ul>\n<h4 id=\"anchor-b119791c781e146a\" style=\"position: relative;\"><a href=\"#anchor-b119791c781e146a\" aria-label=\"anchor b119791c781e146a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Round Modes</h4>\n<p><img src=\"https://img.memset0.cn/2024/11/18/2RFAcItA.png\"alt=\"\" style=\"width: 576px; \" ></p>\n<p><img src=\"https://img.memset0.cn/2024/11/18/6qNskwOB.png\"alt=\"\" style=\"width: 630px; \" ></p>\n<ul>\n<li>guard bit：最低有效位</li>\n<li>round bit：最低有效位右边的第一位</li>\n<li>sticky bit：只要 round bit 右边出现过非零位，就将 sticky bit 置 1。在加法的右移过程中，可以记录是否有 1 被移出，从而能够实现 \"round to nearest even\"。</li>\n</ul>\n<h3 id=\"anchor-1b2e1f57b4ee728a\" style=\"position: relative;\"><a href=\"#anchor-1b2e1f57b4ee728a\" aria-label=\"anchor 1b2e1f57b4ee728a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.3. Floating Point Multiplication</h3>\n<ul>\n<li>Step 1：add exponents</li>\n<li>Step 2：multiply the significands</li>\n<li>Step 3：normalise</li>\n<li>Step 4：over/under-flow detection</li>\n<li>Step 5：rounding</li>\n<li>Step 6：sign（依据输入数的符号确定结果的符号）</li>\n</ul>\n<h2 id=\"anchor-651eb997b58a2f68\" style=\"position: relative;\"><a href=\"#anchor-651eb997b58a2f68\" aria-label=\"anchor 651eb997b58a2f68 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Useful Links</h2>\n<ul>\n<li><a href=\"https://xuan-insr.github.io/computer_organization/3_arithmetic/\">3 Arithmetic - 咸鱼暄的代码空间 (xuan-insr.github.io)</a></li>\n<li><a href=\"https://www.h-schmidt.net/FloatConverter/IEEE754.html\">IEEE-754 Floating Point Converter</a></li>\n<li><a href=\"https://www.pianshen.com/article/6973939936/\">IEEE754 浮点数 向偶数舍入 - 程序员大本营</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#anchor-69ad5044d98258f0\">1. Numbers</a></p>\n<ul>\n<li><a href=\"#anchor-f450ac5cb51b2302\">1.1. Radix-Based System</a></li>\n<li><a href=\"#anchor-a807fc7d111dcf7c\">1.2. Binary Representations</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-23f041aebf645e1f\">2. ALU</a></p>\n<ul>\n<li><a href=\"#anchor-2eaa39857cdc4162\">2.1. 1-bit ALU</a></li>\n<li><a href=\"#anchor-7c6cc4d0baf33e07\">2.2. Complete ALU</a></li>\n<li><a href=\"#anchor-91263dc3cf7f2226\">2.3. Comparison</a></li>\n<li><a href=\"#anchor-95e08471417af3f0\">2.4. Faster Adders</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-2f93449aec4d169d\">3. Multiplier</a></p>\n<ul>\n<li><a href=\"#anchor-8030def8ec914fed\">3.1. Unsigned Multiplication</a></li>\n<li><a href=\"#anchor-6934cc06da21e4ea\">3.2. Signed Multiplication</a></li>\n<li><a href=\"#anchor-175ef4df11b0d28d\">3.3. Parallel Multiplier</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-23040e0950f0c3f6\">4. Division</a></p>\n<ul>\n<li><a href=\"#anchor-b4605cb43a3362c2\">4.1. Unsigned Division</a></li>\n<li><a href=\"#anchor-cd352e3b32c11e31\">4.2. Faster Division</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-71202e37f26b2874\">5. Floating Arithmetic</a></p>\n<ul>\n<li><a href=\"#anchor-a8027dfe564c9586\">5.1. IEEE 754 Representation</a></li>\n<li><a href=\"#anchor-e2184dac254102bb\">5.2. Floating Point Addition</a></li>\n<li><a href=\"#anchor-1b2e1f57b4ee728a\">5.3. Floating Point Multiplication</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-651eb997b58a2f68\">6. Useful Links</a></p>\n</li>\n</ul>","frontmatter":{"title":"II. Arithmetic","date":null,"description":null},"fields":{"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#081838","images":{"fallback":{"src":"/static/7f24f5d1972235f67847fc0b88a5a8bd/42e53/X7MD2Cti.png","srcSet":"/static/7f24f5d1972235f67847fc0b88a5a8bd/74b4e/X7MD2Cti.png 231w,\n/static/7f24f5d1972235f67847fc0b88a5a8bd/68896/X7MD2Cti.png 462w,\n/static/7f24f5d1972235f67847fc0b88a5a8bd/42e53/X7MD2Cti.png 923w","sizes":"(min-width: 923px) 923px, 100vw"},"sources":[{"srcSet":"/static/7f24f5d1972235f67847fc0b88a5a8bd/b83be/X7MD2Cti.webp 231w,\n/static/7f24f5d1972235f67847fc0b88a5a8bd/9a9b4/X7MD2Cti.webp 462w,\n/static/7f24f5d1972235f67847fc0b88a5a8bd/877fc/X7MD2Cti.webp 923w","type":"image/webp","sizes":"(min-width: 923px) 923px, 100vw"}]},"width":923,"height":602}}},"slug":"/course/co/note/2/","cssclasses":null,"isDoc":true,"category":"[{\"name\":\"课程笔记\",\"to\":\"/course/\"}]","propsJson":null}},"previous":null,"next":null},"pageContext":{"id":"483a6610-cff6-5f86-9ffe-a298b8b692f0","previousPostId":null,"nextPostId":null,"navJson":"[{\"slug\":\"/course/co\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/index.md\",\"title\":\"Intro\"},{\"title\":\"Note\",\"children\":[{\"slug\":\"/course/co/note/1\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/1.md\",\"title\":\"I. Prelude\"},{\"slug\":\"/course/co/note/2\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/2.md\",\"title\":\"II. Arithmetic\"},{\"slug\":\"/course/co/note/3\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/3.md\",\"title\":\"III. Instructions\"},{\"slug\":\"/course/co/note/4\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/4.md\",\"title\":\"V. Pipelined Processor\"}]}]"}},"staticQueryHashes":[],"slicesMap":{}}