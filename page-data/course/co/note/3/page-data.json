{"componentChunkName":"component---src-templates-post-js","path":"/course/co/note/3/","result":{"data":{"site":{"siteMetadata":{"title":"mem 的小站"}},"post":{"id":"de10309d-7f7d-5a0f-a800-67d0afe764f6","excerpt":"本篇笔记围绕 RISC-V 架构介绍了计算机指令系统的基本概念。首先介绍了 RISC-V 的 32 个通用寄存器及其约定用途，包括零寄存器、返回地址寄存器、堆栈指针等。接着讨论了内存系统的特点，包括字节寻址、小端存储等概念。重点阐述了 RISC-V 的指令格式(R/I/S/B/U/J 型)及其编码方式，详细介绍了分支指令、过程调用指令、数据加载存储指令、跳转指令等常用指令的使用方法和实现细节。（由 claude-3.5-sonnet 生成摘要）","html":"<blockquote>\n<p>本篇笔记围绕 RISC-V 架构介绍了计算机指令系统的基本概念。首先介绍了 RISC-V 的 32 个通用寄存器及其约定用途，包括零寄存器、返回地址寄存器、堆栈指针等。接着讨论了内存系统的特点，包括字节寻址、小端存储等概念。重点阐述了 RISC-V 的指令格式(R/I/S/B/U/J 型)及其编码方式，详细介绍了分支指令、过程调用指令、数据加载存储指令、跳转指令等常用指令的使用方法和实现细节。<small style=\"font-style: italic; opacity: 0.5\">（由 claude-3.5-sonnet 生成摘要）</small></p>\n</blockquote>\n<!-- more -->\n<p>我们的课程和教材围绕 RISC-V 架构编写，因而本章也将围绕 RISC-V 中的设计展开。</p>\n<p><details open class=\"callout callout-type-faq\"><summary style=\"pointer-events: none;\"> Why RISC-V Architecture?</summary><div class=\"callout-content\"><p></p><ul>\n<li>开放。</li>\n<li>具有现代 <strong>指令集架构(Instruction Set Architecture, ISA)</strong> 的特征。</li>\n<li>类似的 ISA 在市场上占据很大份额。</li>\n</ul></div></details></p>\n<h2 id=\"anchor-68c29c96d7d24422\" style=\"position: relative;\"><a href=\"#anchor-68c29c96d7d24422\" aria-label=\"anchor 68c29c96d7d24422 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Register</h2>\n<p>RISC-V 架构提供 <mark class=\"m-mark\">32 个</mark> 数据寄存器，每个寄存器的大小是 <mark class=\"m-mark\">64 位</mark>。（<em>设计原则：smaller is faster</em>，寄存器的空间远小于内存）</p>\n<p>RISC-V 中对寄存器的约定如下（不过，对于其中的一些寄存器，我们在自己做题的时候也不是不能混用）：</p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x0</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x0</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">zero</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{zero}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">zero</span></span></span></span></span></span>) 常量 0。这一寄存器的值一直是 0。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x1</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x1</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">ra</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{ra}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">ra</span></span></span></span></span></span>) 保存 <strong>返回地址(return address)</strong>，即完成过程调用后 PC 需要回到的位置。\n<ul>\n<li>所以说伪指令 <code class=\"language-text\">ret</code> 其实就是 <code class=\"language-text\">jalr x0, 0(x1)</code>。</li>\n</ul>\n</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x2</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x2</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">sp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{sp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6528em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">sp</span></span></span></span></span></span>) 是 <strong>堆栈指针(stack pointer)</strong>，始终指向<mark class=\"m-mark\">栈顶元素</mark>。\n<ul>\n<li>栈<mark class=\"m-mark\">从高地址向低地址增长</mark>，例：<code class=\"language-text\">addi sp, sp, -24</code> , <code class=\"language-text\">sd x5, 16(sp)</code> , <code class=\"language-text\">sd x6, 8(sp)</code> , <code class=\"language-text\">sd x20, 0(sp)</code>  可以实现将 x5, x6, x20 压栈。</li>\n</ul>\n</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x5</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">x7</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x5} \\sim \\texttt{x7}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x5</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x7</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">t0</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">t2</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{t0} \\sim \\texttt{t2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">t0</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">t2</span></span></span></span></span></span>) - <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x7</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x7}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x7</span></span></span></span></span></span>(<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">t2</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{t2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">t2</span></span></span></span></span></span>) 和 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x28</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">x31</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x28} \\sim \\texttt{x31}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x28</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x31</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">t3</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">t6</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{t3} \\sim \\texttt{t6}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">t3</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">t6</span></span></span></span></span></span>) 是 <strong>临时寄存器(temporary register)</strong>，不保证在经过过程调用之后临时寄存器的值不变，需要的话应由 caller 保存。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x8</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">x9</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x8} \\sim \\texttt{x9}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x8</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x9</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">s0</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">s1</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{s0} \\sim \\texttt{s1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">s0</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">s1</span></span></span></span></span></span>) 和 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x18</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">x27</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x18} \\sim \\texttt{x27}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x18</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x27</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">s2</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">s11</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{s2} \\sim \\texttt{s11}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">s2</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">s11</span></span></span></span></span></span>) 是 <strong>保留寄存器(saved register)</strong>，保证过程调用前后这些寄存器的值不变。如果 callee 需要修改这些寄存器，就需要再堆栈中保存一份，以便在返回前恢复。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x10</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">x17</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x10} \\sim \\texttt{x17}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x10</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x17</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">a0</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">a7</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{a0} \\sim \\texttt{a7}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">a0</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">a7</span></span></span></span></span></span>) 用于存储过程参数或者数返回值。\n<ul>\n<li>函数调用的前 8 个参数会放在这些寄存器中；如果参数超过 8 个则需要放到栈上（例：放在  <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">fp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{fp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">fp</span></span></span></span></span></span>  上方， <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">fp</mtext><mo>+</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">\\texttt{fp} + 8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">fp</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span></span></span></span></span>  是第 9 个参数， <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">fp</mtext><mo>+</mo><mn>16</mn></mrow><annotation encoding=\"application/x-tex\">\\texttt{fp} + 16</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">fp</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">16</span></span></span></span></span>  的第 10 个……）。</li>\n<li>在过程调用结束后，过程的返回值也应被放在这些寄存器中。像 C 语言一般来说只有一个，就放在 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x10</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x10}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x10</span></span></span></span></span></span> (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">a0</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{a0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">a0</span></span></span></span></span></span>) 寄存器中。</li>\n</ul>\n</li>\n</ul>\n<p><details  class=\"callout callout-type-note\"><summary > Read More</summary><div class=\"callout-content\"><p></p><ul>\n<li>一些 RISC-V 编译器保留寄存器  <code class=\"language-text\">x3</code>  用来指向静态变量区，称为 global pointer <code class=\"language-text\">gp</code> 。</li>\n<li>一些 RISC-V 编译器使用  <code class=\"language-text\">x8</code>  指向 activation record 的第一个 dword，方便访问局部变量；因此  <code class=\"language-text\">x8</code>  也称为 frame pointer <code class=\"language-text\">fp</code> 。在进入函数时，用  <code class=\"language-text\">sp</code>  将  <code class=\"language-text\">fp</code>  初始化。\n<ul>\n<li><code class=\"language-text\">fp</code>  的方便性在于在整个程中对局部变量过的所有引用相对于  <code class=\"language-text\">fp</code>  的偏移都是固定的，但是对  <code class=\"language-text\">sp</code>  不一定。当然，如果过程中没有什么栈的变化或者根本没有局部变量，那就没有必要用  <code class=\"language-text\">fp</code>  了。</li>\n</ul>\n</li>\n<li>RISC-V 架构还提供一系列浮点数寄存器 <code class=\"language-text\">f0</code> ~ <code class=\"language-text\">f31</code>，不过这并不是这里我们讨论的重点。</li>\n</ul></div></details></p>\n<p><details open class=\"callout callout-type-summary\"><summary style=\"pointer-events: none;\"> Cheetsheet</summary><div class=\"callout-content\"><p></p><p><img src=\"https://img.memset0.cn/2024/11/04/HVDSFt0e.png\"alt=\"\" style=\"width: 538px; \" ></p></div></details></p>\n<h2 id=\"anchor-d3b421755d094c70\" style=\"position: relative;\"><a href=\"#anchor-d3b421755d094c70\" aria-label=\"anchor d3b421755d094c70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Memory</h2>\n<p>RISC-V 结构的内存按照 <mark class=\"m-mark\">8 位</mark> 为一个 <strong>字节(byte)</strong> 存储，地址宽度为 <mark class=\"m-mark\">64 位</mark>。此外，一个 word 为 32 位，一个 <strong>双字(doubleword)</strong> 为 64 位。也就是说，RISC-V 架构的指令总共可以寻址 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{64}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">64</span></span></span></span></span></span></span></span></span></span></span></span></span> 个字节，也即 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>67</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{67}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">67</span></span></span></span></span></span></span></span></span></span></span></span></span> 个 bit 或者 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>61</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{61}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">61</span></span></span></span></span></span></span></span></span></span></span></span></span> 个 dword。</p>\n<p>RISC-V 架构使用 <strong>小端存储(Little Endian)</strong>，即最低有效位放在内存最低处。按照小端存储的方式存储 0x12345678 得：(low) 78 56 34 12 (high)（如果按照一般逻辑，从左到右进行书写，实际上是是对应 <strong>大端存储(Big Endian)</strong>）。</p>\n<p><details open class=\"callout callout-type-info\"><summary style=\"pointer-events: none;\"> Memort Alignment</summary><div class=\"callout-content\"><p></p><p>CPU 一次只能读出 4 字节内存中的一行，所以为了一次性读出下图结构体中的 <code class=\"language-text\">float e</code>，需要使用 <strong>内存对齐(memory alignment)</strong> 的技术。</p><p><img src=\"https://img.memset0.cn/2024/11/11/LrRHT6l4.png\"alt=\"\" style=\"width: 280px; \" ></p></div></details></p>\n<p><details open class=\"callout callout-type-info\"><summary style=\"pointer-events: none;\"> Constant vs Immediate Operands？</summary><div class=\"callout-content\"><p>\n编译器可以通过从指定地址取值的方式来实现 <strong>常量(constant)</strong>，为了让操作更快，我们希望引入 <strong>立即数(immediate operands)</strong>，从而省掉寻址的时间。（<em>设计原则：make common case fast</em>）</p></div></details></p>\n<p>RISC-V 支持四种 <strong>寻址(addressing)</strong> 方式：</p>\n<ul>\n<li><strong>立即数寻址(immediate addressing)</strong></li>\n<li><strong>寄存器寻址(register addressing)</strong></li>\n<li><strong>基址寻址(base addressing)</strong>：例：<code class=\"language-text\">8(sp)</code></li>\n<li><strong>PC-relative 寻址(PC-relative addressing)</strong></li>\n</ul>\n<p><img src=\"https://img.memset0.cn/2024/11/12/cKPQXFYu.png\"alt=\"\" style=\"width: 684px; \" ></p>\n<p><details open class=\"callout callout-type-info\"><summary style=\"pointer-events: none;\"> Memory Layout</summary><div class=\"callout-content\"><p></p><p><img src=\"https://img.memset0.cn/2024/11/12/HgSNu9rL.png\"alt=\"\" style=\"width: 457px; \" ></p></div></details></p>\n<h2 id=\"anchor-a433b3fac2971835\" style=\"position: relative;\"><a href=\"#anchor-a433b3fac2971835\" aria-label=\"anchor a433b3fac2971835 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Instructions</h2>\n<p>根据存储程序原理，我们二进制对每一条指令编码表示，叫作 <strong>机器码(machine code)</strong>。</p>\n<p><details open class=\"callout callout-type-note\"><summary style=\"pointer-events: none;\"> Note</summary><div class=\"callout-content\"><p></p><p>（精简指令集的）一条指令只用来实现一个运算。（<em>设计原则：Simplicity favors regularity</em>）</p></div></details></p>\n<h3 id=\"anchor-b8dfb1e74814ea0c\" style=\"position: relative;\"><a href=\"#anchor-b8dfb1e74814ea0c\" aria-label=\"anchor b8dfb1e74814ea0c permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1. Instruction Formats</h3>\n<p>在 RISC-V 架构中，所有指令的长度都固定为 32 位。（<em>设计原则：good design demands good compromises</em>）</p>\n<p>这里每种指令 format 的空间分布需要记忆，部分需要用到的指令的 opcode 和 funct 会在考试时给出。</p>\n<p><img src=\"https://img.memset0.cn/2024/11/12/KcGbrnLp.png\"alt=\"\" style=\"width: 737px; \" ></p>\n<p>缩写解释：</p>\n<ul>\n<li>rs：<strong>源寄存器(register source)</strong></li>\n<li>rd：<strong>目标寄存器(register destination)</strong></li>\n<li>imm：<strong>立即数(immediate operands)</strong></li>\n<li>opcode：<strong>操作编码(operation code)</strong></li>\n<li>funct：<strong>函数编码(function code)</strong>，用来和 <code class=\"language-text\">opcode</code> 共同表示运算。</li>\n</ul>\n<p>指令类型：</p>\n<ul>\n<li><strong>R-type</strong>：使用寄存器进行数字逻辑运算的指令格式，具体运算 op 由 opcode funct3 funct7  共同决定，功能为：<code class=\"language-text\">rd = rs1 op rs2</code>。</li>\n<li><strong>I-type</strong>：寄存器与立即数的运算，或者 load 类指令等只需要用到一个源寄存器的指令，功能为：<code class=\"language-text\">rd = rs1 op imm</code>。这里虽然立即数 <code class=\"language-text\">imm</code> 只有 12 位，但会先符号扩充到 64 位再参与运算，故立即数实际上为：<code class=\"language-text\">{{52{inst[31]}}, inst[31:20]}</code>。\n<ul>\n<li>立即数 <strong>移位(shift)</strong> 操作（<code class=\"language-text\">slli</code>、<code class=\"language-text\">srai</code> 等）是一类特殊的 I 型指令，因为对一个 64 位数进行 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo><mn>64</mn></mrow><annotation encoding=\"application/x-tex\">\\ge 64</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">64</span></span></span></span></span> 位的移位操作没有意义，所以将其 imm 的 12 位分成 6 位的 funct6 和 6 位的立即数 immed，其中 immed 用来表示移位位数。</li>\n</ul>\n</li>\n<li><strong>S-type</strong>：store 类指令。这里 <code class=\"language-text\">rs1</code> 存储 <strong>基址(base address)</strong> 寄存器编号，<code class=\"language-text\">rs2</code> 存储源操作数寄存器编号。\n<ul>\n<li><code class=\"language-text\">sd</code> 指令例：<code class=\"language-text\">sd x9, 64(x22)</code>，则 <code class=\"language-text\">rs1</code> 为 22、<code class=\"language-text\">rs2</code> 为 9、<code class=\"language-text\">imm</code> 为 64。</li>\n</ul>\n</li>\n<li><strong>U-type</strong>：</li>\n</ul>\n<p><details open class=\"callout callout-type-hint\"><summary style=\"pointer-events: none;\"> 为什么 <code class=\"language-text\">SB</code> 和 <code class=\"language-text\">UJ</code> 类型指令都不存储立即数的最低位（<code class=\"language-text\">imm[0]</code>）呢？</summary><div class=\"callout-content\"><p></p><p>因为这两种指令的立即数都是指偏移，而我们的地址是 2 字节对齐的，因此最后一位一定是 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span>，不需要存储。</p></div></details></p>\n<p><details open class=\"callout callout-type-summary\"><summary style=\"pointer-events: none;\"> Cheatsheet</summary><div class=\"callout-content\"><p></p><p><img src=\"https://img.memset0.cn/2024/11/12/Iygimvey.png\"alt=\"\" style=\"width: 800px; \" ></p><p><img src=\"https://img.memset0.cn/2024/11/12/ABLaJ0cn.png\"alt=\"Pesudo Instructions\" style=\"width: 468px; \" ><span class=\"image-alt\">Pesudo Instructions</span></p></div></details></p>\n<h3 id=\"anchor-20f7eb25c2ad04db\" style=\"position: relative;\"><a href=\"#anchor-20f7eb25c2ad04db\" aria-label=\"anchor 20f7eb25c2ad04db permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2. Branch &#x26; Loop</h3>\n<p><strong>基于相等的跳转语句</strong>：</p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">beq</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">rs1</mtext></mstyle><mtext mathvariant=\"monospace\">,</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">rs2</mtext></mstyle><mtext mathvariant=\"monospace\">,</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">label</mtext></mstyle></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}beq {\\color{blue}rs1}, {\\color{blue}rs2}, {\\color{blue}label}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">beq </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">rs1</span></span><span class=\"mord texttt\" style=\"color:blue;\">, </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">rs2</span></span><span class=\"mord texttt\" style=\"color:blue;\">, </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">label</span></span></span></span></span></span></span> (B-type)：相等则跳转。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">bne</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">rs1</mtext></mstyle><mtext mathvariant=\"monospace\">,</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">rs2</mtext></mstyle><mtext mathvariant=\"monospace\">,</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">label</mtext></mstyle></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}bne {\\color{blue}rs1}, {\\color{blue}rs2}, {\\color{blue}label}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">bne </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">rs1</span></span><span class=\"mord texttt\" style=\"color:blue;\">, </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">rs2</span></span><span class=\"mord texttt\" style=\"color:blue;\">, </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">label</span></span></span></span></span></span></span> (B-type)：不相等则跳转。</li>\n</ul>\n<p><strong>基于比较的跳转语句</strong>：注意这里的比较都是<mark class=\"m-mark\">有符号数</mark>的比较，如果需要无符号数的比较，请使用 <code class=\"language-text\">bltu</code>、<code class=\"language-text\">bgeu</code> 等指令。</p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">blt</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs1,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs2,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">label</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}blt rs1, rs2, label}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">blt rs1, rs2, label</span></span></span></span></span></span> (B-type)：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>if (</mtext><mtext mathvariant=\"monospace\">rs1</mtext><mo>&#x3C;</mo><mtext mathvariant=\"monospace\">rs2</mtext><mtext>) branch to instruction labeled </mtext><mtext mathvariant=\"monospace\">label</mtext><mtext>.</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{if (}\\texttt{rs1} &#x3C; \\texttt{rs2}\\text{) branch to instruction labeled }\\texttt{label}\\text{.}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">if (</span></span><span class=\"mord text\"><span class=\"mord texttt\">rs1</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span><span class=\"mord text\"><span class=\"mord\">) branch to instruction labeled </span></span><span class=\"mord text\"><span class=\"mord texttt\">label</span></span><span class=\"mord text\"><span class=\"mord\">.</span></span></span></span></span></span></li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">bgt</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs1,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs2,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">label</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}bgt rs1, rs2, label}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">bgt rs1, rs2, label</span></span></span></span></span></span> (B-type)：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>if (</mtext><mtext mathvariant=\"monospace\">rs1</mtext><mo>></mo><mtext mathvariant=\"monospace\">rs2</mtext><mtext>) branch to instruction labeled </mtext><mtext mathvariant=\"monospace\">label</mtext><mtext>.</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{if (}\\texttt{rs1} > \\texttt{rs2}\\text{) branch to instruction labeled }\\texttt{label}\\text{.}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">if (</span></span><span class=\"mord text\"><span class=\"mord texttt\">rs1</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span><span class=\"mord text\"><span class=\"mord\">) branch to instruction labeled </span></span><span class=\"mord text\"><span class=\"mord texttt\">label</span></span><span class=\"mord text\"><span class=\"mord\">.</span></span></span></span></span></span></li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">ble</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs1,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs2,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">label</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}ble rs1, rs2, label}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">ble rs1, rs2, label</span></span></span></span></span></span> (B-type)：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>if (</mtext><mtext mathvariant=\"monospace\">rs1</mtext><mo>≤</mo><mtext mathvariant=\"monospace\">rs2</mtext><mtext>) branch to instruction labeled </mtext><mtext mathvariant=\"monospace\">label</mtext><mtext>.</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{if (}\\texttt{rs1} \\leq \\texttt{rs2}\\text{) branch to instruction labeled }\\texttt{label}\\text{.}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">if (</span></span><span class=\"mord text\"><span class=\"mord texttt\">rs1</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span><span class=\"mord text\"><span class=\"mord\">) branch to instruction labeled </span></span><span class=\"mord text\"><span class=\"mord texttt\">label</span></span><span class=\"mord text\"><span class=\"mord\">.</span></span></span></span></span></span></li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">bge</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs1,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs2,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">label</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}bge rs1, rs2, label}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">bge rs1, rs2, label</span></span></span></span></span></span> (B-type)：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>if (</mtext><mtext mathvariant=\"monospace\">rs1</mtext><mo>≥</mo><mtext mathvariant=\"monospace\">rs2</mtext><mtext>) branch to instruction labeled </mtext><mtext mathvariant=\"monospace\">label</mtext><mtext>.</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{if (}\\texttt{rs1} \\geq \\texttt{rs2}\\text{) branch to instruction labeled }\\texttt{label}\\text{.}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">if (</span></span><span class=\"mord text\"><span class=\"mord texttt\">rs1</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span><span class=\"mord text\"><span class=\"mord\">) branch to instruction labeled </span></span><span class=\"mord text\"><span class=\"mord texttt\">label</span></span><span class=\"mord text\"><span class=\"mord\">.</span></span></span></span></span></span></li>\n</ul>\n<p><details open class=\"callout callout-type-note\"><summary style=\"pointer-events: none;\"> 最热门的比较运算</summary><div class=\"callout-content\"><p></p><ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">slt</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">rd</mtext></mstyle><mtext mathvariant=\"monospace\">,</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">rs1</mtext></mstyle><mtext mathvariant=\"monospace\">,</mtext><mtext> </mtext><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">rs2</mtext></mstyle></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}slt {\\color{blue}rd}, {\\color{blue}rs1}, {\\color{blue}rs2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">slt </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">rd</span></span><span class=\"mord texttt\" style=\"color:blue;\">, </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">rs1</span></span><span class=\"mord texttt\" style=\"color:blue;\">, </span><span class=\"mord\" style=\"color:blue;\"><span class=\"mord texttt\" style=\"color:blue;\">rs2</span></span></span></span></span></span></span>：set on less then，当 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rs1</mtext><mo>&#x3C;</mo><mtext mathvariant=\"monospace\">rs2</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rs1} &#x3C; \\texttt{rs2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6502em;vertical-align:-0.0391em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs1</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&#x3C;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span></span></span></span></span> 时令 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span>。\n<ul>\n<li>可以将比较结果搭配 <code class=\"language-text\">beq</code> 或 <code class=\"language-text\">bne</code> 语句使用。</li>\n</ul>\n</li>\n</ul></div></details></p>\n<p>如果分支体/循环体比较长，我们可能需要 branching 到一个比较远的位置，这时需要使用 <code class=\"language-text\">jal</code> 或 <code class=\"language-text\">jalr</code> 指令，必要时可以反转条件，如下面这个例子：</p>\n<p><img src=\"https://img.memset0.cn/2024/11/12/bUcump8l.png\"alt=\"\" style=\"width: 456px; \" ></p>\n<h3 id=\"anchor-af2f4ab4a4ff4c69\" style=\"position: relative;\"><a href=\"#anchor-af2f4ab4a4ff4c69\" aria-label=\"anchor af2f4ab4a4ff4c69 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3. Procedure</h3>\n<p>一些约定：</p>\n<ul>\n<li>用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">a0</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">a7</mtext><mtext> </mtext><mo stretchy=\"false\">(</mo><mtext mathvariant=\"monospace\">x10</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">x17</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\texttt{a0} \\sim \\texttt{a7}\\text{ }(\\texttt{x10} \\sim \\texttt{x17})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">a0</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">a7</span></span><span class=\"mord text\"><span class=\"mord\"> </span></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord texttt\">x10</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x17</span></span><span class=\"mclose\">)</span></span></span></span></span> 这八个参数寄存器保存 <strong>过程参数(procedure parameter)</strong> 和 <strong>返回值(return value)</strong>。</li>\n<li>用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">ra</mtext><mtext> </mtext><mo stretchy=\"false\">(</mo><mtext mathvariant=\"monospace\">x1</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\texttt{ra}\\text{ }(\\texttt{x1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">ra</span></span><span class=\"mord text\"><span class=\"mord\"> </span></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord texttt\">x1</span></span><span class=\"mclose\">)</span></span></span></span></span> 来存储返回地址。\n<ul>\n<li>通过 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">jal</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">x1,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">label</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{jal x1, label}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">jal x1, label</span></span></span></span></span></span> 指令进入函数体；在过程最后用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">jalr</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">x0,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">0(x1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{jalr x0, 0(x1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9167em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">jalr x0, 0(x1)</span></span></span></span></span></span> 指令（等价于伪指令 <code class=\"language-text\">ret</code>）返回。</li>\n<li>如果过程体中还需要调用其他过程，记得把 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">ra</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{ra}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">ra</span></span></span></span></span></span> 保存到堆栈中。</li>\n</ul>\n</li>\n<li>在过程体中，最好使用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">t0</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">t6</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{t0} \\sim \\texttt{t6}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">t0</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">t6</span></span></span></span></span></span> 这 7 个临时寄存器；尽量不要使用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">s0</mtext><mo>∼</mo><mtext mathvariant=\"monospace\">s11</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{s0} \\sim \\texttt{s11}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">s0</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">s11</span></span></span></span></span></span> 这些保留寄存器。如果非要使用，需要手动压栈出栈保证保留寄存器的值在过程调用前后保持不变。</li>\n</ul>\n<p>我们可以通过对栈指针寄存器 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">sp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{sp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6528em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">sp</span></span></span></span></span></span> 的控制实现 push 和 pop 功能。</p>\n<ul>\n<li><strong>push</strong>：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">addi</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">sp,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">sp,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">-8;</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">sd</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">...,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">8(sp)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{addi sp, sp, -8; sd ..., 8(sp)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9167em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">addi sp, sp, -8; sd ..., 8(sp)</span></span></span></span></span></span></li>\n<li><strong>pop</strong>：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">ld</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">...,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">8(sp);</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">addi</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">sp,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">sp,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">8</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{ld ..., 8(sp); addi sp, sp, 8}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9167em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">ld ..., 8(sp); addi sp, sp, 8</span></span></span></span></span></span></li>\n</ul>\n<p><img src=\"https://img.memset0.cn/2024/11/12/sFba4Dmg.png\"alt=\"\" style=\"width: 208px; \" ></p>\n<p>而帧指针寄存器 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">fp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{fp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">fp</span></span></span></span></span></span> 则始终指向栈顶，其在函数调用过程中保持不变（一些 RISC-V 编译器在进入过程时会自动用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">sp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{sp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6528em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">sp</span></span></span></span></span></span> 初始化 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">fp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{fp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">fp</span></span></span></span></span></span>），可以通过 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">fp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{fp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">fp</span></span></span></span></span></span> 寄存器方便地访问局部变量、保存的参数等。</p>\n<p><img src=\"https://img.memset0.cn/2024/11/12/ut3O9gGP.png\"alt=\"\" style=\"width: 524px; \" ></p>\n<p><details  class=\"callout callout-type-example\"><summary > Example: Compile a recursive factorial function</summary><div class=\"callout-content\"><p>\n<img src=\"https://img.memset0.cn/2024/11/12/XYw3FYUD.png\"alt=\"\" style=\"width: 580px; \" ></p></div></details></p>\n<h3 id=\"anchor-c8f4b71652ae0c15\" style=\"position: relative;\"><a href=\"#anchor-c8f4b71652ae0c15\" aria-label=\"anchor c8f4b71652ae0c15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.4. Load &#x26; Store Instructions</h3>\n<p>load 和 store 是唯二两个在寄存器和内存之间进行 <strong>数据传输(data transfer)</strong> 的指令。</p>\n<p>我们的寄存器是 64 位的（dword），但有时我们需要从内存/堆栈中读取小于 64 位的（byte/halfword/word）数据，这时候就会涉及到扩充的问题，以下 load 指令都是 <strong>符号扩充(sign extend)</strong> 的，</p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">lb</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}lb rd, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">lb rd, offset(rs1)</span></span></span></span></span></span>：load byte，从 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址开始读取 8 位并符号扩充到 64 位后保存到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 中。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">lh</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}lh rd, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">lh rd, offset(rs1)</span></span></span></span></span></span>：load halfword，从 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址开始读取 16 位并符号扩充到 64 位后保存到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 中。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">lw</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}lw rd, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">lw rd, offset(rs1)</span></span></span></span></span></span>：load word，从 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址开始读取 32 位并符号扩充到 64 位后保存到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 中。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">ld</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}ld rd, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">ld rd, offset(rs1)</span></span></span></span></span></span>：load dword，从 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址开始读取 64 位并保存到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 中。</li>\n</ul>\n<p>下面这些 load 指令则是遵循 <strong>零扩充(0 extend)</strong> 的：</p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">lbu</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}lbu rd, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">lbu rd, offset(rs1)</span></span></span></span></span></span>：load byte unsigned，从 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址开始读取 8 位并零扩充到 64 位后保存到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 中，常用于读取 ASCII 字符。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">lhu</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}lhu rd, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">lhu rd, offset(rs1)</span></span></span></span></span></span>：load halfword unsigned，从 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址开始读取 16 位并零扩充到 64 位后保存到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 中。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">lwu</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}lwu rd, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">lwu rd, offset(rs1)</span></span></span></span></span></span>：load word unsigned，从 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址开始读取 32 位并零扩充到 64 位后保存到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 中。</li>\n</ul>\n<p>store 指令的话就是保存寄存器 <mark class=\"m-mark\">最右边</mark> 的（最低的）若干位。</p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">sb</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs2,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}sb rs2, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">sb rs2, offset(rs1)</span></span></span></span></span></span>：store byte，保存 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rs2</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rs2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span></span></span></span></span> 寄存器的最右 8 位到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">sh</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs2,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}sh rs2, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">sh rs2, offset(rs1)</span></span></span></span></span></span>：store halfword，保存 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rs2</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rs2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span></span></span></span></span> 寄存器的最右 16 位到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">sw</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs2,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}sw rs2, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">sw rs2, offset(rs1)</span></span></span></span></span></span>：store word，保存 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rs2</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rs2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span></span></span></span></span> 寄存器的最右 32 位到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址。</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">sd</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs2,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}sd rs2, offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">sd rs2, offset(rs1)</span></span></span></span></span></span>：store dword，保存 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rs2</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rs2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rs2</span></span></span></span></span></span> 寄存器的最右 64 位到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">offset(rs1)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{offset(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">offset(rs1)</span></span></span></span></span></span> 地址。</li>\n</ul>\n<p><details  class=\"callout callout-type-example\"><summary > Example: String copy</summary><div class=\"callout-content\"><p></p><p><img src=\"https://img.memset0.cn/2024/11/12/607BHJlv.png\"alt=\"\" style=\"width: 500px; \" ></p></div></details></p>\n<h3 id=\"anchor-33eac0e3f1a03002\" style=\"position: relative;\"><a href=\"#anchor-33eac0e3f1a03002\" aria-label=\"anchor 33eac0e3f1a03002 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.5. Jump Instructions</h3>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">jal</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">label</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}jal rd, label}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">jal rd, label</span></span></span></span></span></span> (UJ-type)：jump and link，保存下一语句地址（<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">pc</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">+</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">4</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{pc + 4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">pc + 4</span></span></span></span></span></span>）到寄存器 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 并跳转到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">label</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{label}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">label</span></span></span></span></span></span> 处。\n<ul>\n<li>实现：<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">=</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">pc</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">+</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">4,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">pc</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">=</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">pc</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">+</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">imm</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd = pc + 4, pc = pc + imm}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd = pc + 4, pc = pc + imm</span></span></span></span></span></span>。</li>\n</ul>\n</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">jalr</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">imm(rs1)</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}jalr rd, imm(rs1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9167em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">jalr rd, imm(rs1)</span></span></span></span></span></span> (I-type)：jump and link register，保存下一语句地址到寄存器 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 并跳转到 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">imm</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">+</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rs1</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{imm + rs1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">imm + rs1</span></span></span></span></span></span> 地址的指令。\n<ul>\n<li>实现：<code class=\"language-text\">rd = pc + 4, pc = (imm + rs1) &amp; 0xFFFFFFFE</code>，注意 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">pc</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{pc}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6528em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">pc</span></span></span></span></span></span> 的最低位一定会被设为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span>。</li>\n</ul>\n</li>\n</ul>\n<p><details  class=\"callout callout-type-example\"><summary > Example: Jump address table</summary><div class=\"callout-content\"><p></p><ul>\n<li>\n<p>C code:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> f <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> f <span class=\"token operator\">=</span> g <span class=\"token operator\">+</span> h<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> f <span class=\"token operator\">=</span> g <span class=\"token operator\">-</span> h<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> f <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> j<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>assembly:</p>\n<p><img src=\"https://img.memset0.cn/2024/11/13/cYBpIP5o.png\"alt=\"\" style=\"width: 400px; \" ></p>\n</li>\n</ul></div></details></p>\n<p><details open class=\"callout callout-type-note\"><summary style=\"pointer-events: none;\"> Conception: Basic Blocks</summary><div class=\"callout-content\"><p></p><p>一段（除了开头外）没有分支标签且（除了结尾外）没有跳转语句的指令称为一个 <strong>基本块(basic block)</strong>，编辑器可以识别基本块并进行优化。</p></div></details></p>\n<p>我们的 label 在转化为机器码时需要换算成具体的 offset。考虑一条指令的长度为 32 位 / 4 字节，故 offset 即目标地址减当前地址应刚好是相差指令数的 4 倍，但是注意 PC-relative 寻址是根据半字长（16 位 / 2 字节）为单位的，所以我们强制 offset 的最低位为 0，且这一最低位也不会表示到机器码中（SB 类型和 UJ 类型指令的特性）。</p>\n<p><details open class=\"callout callout-type-example\"><summary style=\"pointer-events: none;\"> Example: Calculate offset</summary><div class=\"callout-content\"><p></p><ul>\n<li>\n<p>C language:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>save<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> k<span class=\"token punctuation\">)</span> i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>RISC-V assembler code:</p>\n<p><img src=\"https://img.memset0.cn/2024/11/12/cPr6MSEe.png\"alt=\"\" style=\"width: 450px; \" ></p>\n</li>\n<li>\n<p>Machine code:</p>\n<p><img src=\"https://img.memset0.cn/2024/11/12/jjYmiuAy.png\"alt=\"\" style=\"width: 640px; \" ></p>\n</li>\n</ul></div></details></p>\n<ul>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"blue\"><mtext mathvariant=\"monospace\">lui</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">rd,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">imm</mtext></mstyle></mrow><annotation encoding=\"application/x-tex\">\\texttt{\\color{blue}lui rd, imm}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1389em;\"></span><span class=\"mord text\"><span class=\"mord texttt\" style=\"color:blue;\">lui rd, imm</span></span></span></span></span></span> (U-type)：load upper immediate\n<ul>\n<li>实现：<code class=\"language-text\">rd = imm &lt;&lt; 12</code>。</li>\n</ul>\n</li>\n</ul>\n<p>大立即数的获取：通过 <code class=\"language-text\">lui</code> 指令设置立即数的高 20 位，然后用 <code class=\"language-text\">addi</code> 指令设置立即数的低 12 位。注意：由于 <code class=\"language-text\">addi</code> 指令是 signed 的，第 12 位会被当作符号位；如果我们需要将这一位也置成 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> 的话，使用 <code class=\"language-text\">lui</code> 设置高 20 位的值时需先 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span><span class=\"mord\">1</span></span></span></span></span>。</p>\n<p>任意 32 位地址跳转：可以通过 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">lui</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">t0,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">address[31:12];</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">jalr</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">x0,</mtext><mtext> </mtext><mtext mathvariant=\"monospace\">address[11:0](t0)</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{lui t0, address[31:12]; jalr x0, address[11:0](t0)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9167em;vertical-align:-0.2222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">lui t0, address[31:12]; jalr x0, address[11:0](t0)</span></span></span></span></span></span> 实现任意位置跳转，如果不需要保存下一条语句地址则使用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">x0</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{x0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">x0</span></span></span></span></span></span> 作为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">rd</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{rd}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6111em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">rd</span></span></span></span></span></span> 即可。</p>\n<h2 id=\"anchor-40daec724f0b1b41\" style=\"position: relative;\"><a href=\"#anchor-40daec724f0b1b41\" aria-label=\"anchor 40daec724f0b1b41 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. References</h2>\n<ul>\n<li><a href=\"https://xuan-insr.github.io/computer_organization/2_instructions/\">2 Instructions - 咸鱼暄的代码空间 (xuan-insr.github.io)</a></li>\n<li><a href=\"https://note.hobbitqia.cc/CO/co2/\">指令：计算机的语言 - HobbitQia 的笔记本</a></li>\n<li><a href=\"https://csfufu.life/en/article/58dd7e69-4fe8-4936-948d-5eb7e492f78e\">计算机组成 | fufu 酱の NoteBook</a></li>\n<li><a href=\"http://riscvbook.com/chinese/RISC-V-Reader-Chinese-v2p1.pdf\">RISC-V 手册</a></li>\n<li><a href=\"https://note.tonycrane.cc/cs/pl/riscv/unprivileged/\">RISC-V 非特权级 ISA - 鹤翔万里的笔记本</a></li>\n<li><a href=\"https://wu-wu-u.github.io/Notebooks/cs/systems/CO/instruction/\">2.Instructions - Wu-wu-u's Notebooks</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#anchor-68c29c96d7d24422\">1. Register</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-d3b421755d094c70\">2. Memory</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-a433b3fac2971835\">3. Instructions</a></p>\n<ul>\n<li><a href=\"#anchor-b8dfb1e74814ea0c\">3.1. Instruction Formats</a></li>\n<li><a href=\"#anchor-20f7eb25c2ad04db\">3.2. Branch &#x26; Loop</a></li>\n<li><a href=\"#anchor-af2f4ab4a4ff4c69\">3.3. Procedure</a></li>\n<li><a href=\"#anchor-c8f4b71652ae0c15\">3.4. Load &#x26; Store Instructions</a></li>\n<li><a href=\"#anchor-33eac0e3f1a03002\">3.5. Jump Instructions</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-40daec724f0b1b41\">4. References</a></p>\n</li>\n</ul>","frontmatter":{"title":"III. Instructions","description":null},"fields":{"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#081838","images":{"fallback":{"src":"/static/cef4dea1262b0cab93ff6fa4f42bb946/62413/edu7F13u.png","srcSet":"/static/cef4dea1262b0cab93ff6fa4f42bb946/f054f/edu7F13u.png 271w,\n/static/cef4dea1262b0cab93ff6fa4f42bb946/6288d/edu7F13u.png 541w,\n/static/cef4dea1262b0cab93ff6fa4f42bb946/62413/edu7F13u.png 1082w","sizes":"(min-width: 1082px) 1082px, 100vw"},"sources":[{"srcSet":"/static/cef4dea1262b0cab93ff6fa4f42bb946/4248e/edu7F13u.webp 271w,\n/static/cef4dea1262b0cab93ff6fa4f42bb946/23069/edu7F13u.webp 541w,\n/static/cef4dea1262b0cab93ff6fa4f42bb946/9d5bc/edu7F13u.webp 1082w","type":"image/webp","sizes":"(min-width: 1082px) 1082px, 100vw"}]},"width":1082,"height":862}}},"slug":"/course/co/note/3/","cssclasses":null,"isDoc":true,"authors":[],"createTime":"2024 年 11 月 12 日","updateTime":"2024 年 11 月 12 日","category":"[{\"name\":\"课程笔记\",\"to\":\"/course/\"}]","propsJson":null}},"previous":{"fields":{"slug":"/course/ptms/note/3/"},"frontmatter":{"title":"III. 多元随机变量及其分布"}},"next":{"fields":{"slug":"/course/co/note/4/"},"frontmatter":{"title":"IV. Processor"}}},"pageContext":{"id":"de10309d-7f7d-5a0f-a800-67d0afe764f6","previousPostId":"0b61b0df-30d8-58a8-a1da-c038d9cfd7f9","nextPostId":"04a4dfb8-7594-5d94-8e09-a5f2e8b182e3","navJson":"[{\"slug\":\"/course/co\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/index.md\",\"title\":\"Intro\"},{\"title\":\"Note\",\"children\":[{\"slug\":\"/course/co/note/1\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/1.md\",\"title\":\"I. Prelude\"},{\"slug\":\"/course/co/note/2\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/2.md\",\"title\":\"II. Arithmetic\"},{\"slug\":\"/course/co/note/3\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/3.md\",\"title\":\"III. Instructions\"},{\"slug\":\"/course/co/note/4\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/4.md\",\"title\":\"IV. Processor\"},{\"slug\":\"/course/co/note/5\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/note/5.md\",\"title\":\"V. Memory\"}]}]"}},"staticQueryHashes":["3871233186"],"slicesMap":{}}