{"componentChunkName":"component---src-templates-doc-js","path":"/course/custom/fasm/homework/Lab3/","result":{"data":{"site":{"siteMetadata":{"title":"mem 的小站"}},"post":{"id":"dadbdc65-b215-54a7-9fbb-9565678ab64b","excerpt":"题目描述 本题要求从键盘输入一个字符c，再输出n层金字塔，其中n=c−′0′，首层空格数=n−1，后续各层空格数逐层减1，首层字符数=1，后续各层字符数\n逐层加2，每层输出的字符均固定为c。 输出字符请调用int 21h的2号功能，不能通过写显卡地址实现字符输出。另外，输出最后一层时也需要在末尾输出0Dh及0Ah…","html":"<h2>题目描述</h2>\n<p>本题要求从键盘输入一个字符c，再输出n层金字塔，其中n=c−′0′，首层空格数=n−1，后续各层空格数逐层减1，首层字符数=1，后续各层字符数\n逐层加2，每层输出的字符均固定为c。</p>\n<p>输出字符请调用int 21h的2号功能，不能通过写显卡地址实现字符输出。另外，输出最后一层时也需要在末尾输出0Dh及0Ah。</p>\n<p>例如：输入5，则应该输出</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    5\n   555\n  55555\n 5555555\n555555555</code></pre></div>\n<h2>代码</h2>\n<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">;本题要求:\ncomment %\n以下程序的功能是从键盘输入一个字符c，再输出\nn层金字塔，其中n=c-&#39;0&#39;，首层空格数=n-1，后续\n各层空格数逐层减1，首层字符数=1，后续各层字符数\n逐层加2，每层输出的字符均固定为c。\n输出字符请调用int 21h的2号功能，不能通过写显卡\n地址实现字符输出。另外，输出最后一层时也需要在\n末尾输出0Dh及0Ah。\n例如：输入5，则应该输出\n    5\n   555\n  55555\n 5555555\n555555555\n;请把以下代码补充完整\n%\n;==========请把以下代码保存到src\\main.asm==============================\n;==========选中main.sh及src文件夹-&gt;右键-&gt;压缩成submit.zip提交==========\ndata segment\nc    db 0\nrows dw 0\nspaces_on_this_row dw 0\ndigits_on_this_row dw 0\ndata ends\n\ncode segment\nassume cs:code, ds:data\nmain:\n   mov ax, data\n   mov ds, ax\n   mov ah, 1\n   int 21h       ; AL=getchar()\n   mov [c], al   ; 保存输入的字符到变量c中\n   sub al, &#39;0&#39;   ; 把输入的数字字符脱掉引号\n   mov ah, 0     ; AX的高8位清零\n   mov [rows], ax; 总共需要输出的行数保存到变量rows中\n   dec ax        ; ax--\n   mov [spaces_on_this_row], ax; 首行需要输出的空格的个数\n   mov [digits_on_this_row], 1 ; 首行需要输出的数字的个数\n   cmp [rows], 0\n   je exit\n   mov ah, 2\n   mov dl, 0Dh\n   int 21h; 输出回车\n   mov ah, 2\n   mov dl, 0Ah\n   int 21h; 输出换行\n;请在#1_begin和#1_end之间补充代码实现以下功能:\n;输出n层金字塔，其中n=c-&#39;0&#39;，首层空格数=n-1，后续\n;各层空格数逐层减1，首层字符数=1，后续各层字符数\n;逐层加2，每层输出的字符均固定为c。\n;输出字符请调用int 21h的2号功能，不能通过写显卡\n;地址实现字符输出。另外，输出最后一层时也需要在\n;末尾输出0Dh及0Ah。\n;#1_begin-------------------------------------\n   mov al, 0\nmain_loop:\n   mov bx, [spaces_on_this_row]\n   cmp bx, 0\n   je skip_space_loop\nprint_space_loop:\n   mov ah, 2\n   mov dl, &#39; &#39;\n   int 21h\n   dec bx\n   cmp bx, 0\n   jne print_space_loop\nskip_space_loop:\n   mov bx, [digits_on_this_row]\nprint_letter_loop:\n   mov ah, 2\n   mov dl, [c]\n   int 21h\n   dec bx\n   cmp bx, 0\n   jne print_letter_loop\n   mov ah, 2  \n   mov dl, 0Dh\n   int 21h; 输出回车\n   mov ah, 2\n   mov dl, 0Ah\n   int 21h; 输出换行\n   dec [spaces_on_this_row]\n   add [digits_on_this_row], 2\n   dec [rows]\n   cmp [rows], 0\n   je exit\n   jmp main_loop\n;#1_end=======================================\nexit:\n   mov ah, 4Ch\n   int 21h\ncode ends\nend main\n;==========请把以上代码保存到src\\main.asm==============================</code></pre></div>","frontmatter":{"title":"Lab3: 金字塔","date":null,"description":null},"fields":{"navJson":null,"category":"[{\"name\":\"课程笔记\",\"to\":\"/course/\"}]"}},"previous":{"fields":{"slug":"/course/gen-ed/linear-algebra/"},"frontmatter":{"title":"线性代数"}},"next":{"fields":{"slug":"/course/custom/fasm/homework/Lab4/"},"frontmatter":{"title":"Lab4: 写显卡内存输出ASCII字符及其16进制ASCII码"}}},"pageContext":{"id":"dadbdc65-b215-54a7-9fbb-9565678ab64b","previousPostId":"b9b740ae-3ae0-5101-9c90-49dbca9225b9","nextPostId":"28b2764a-9ad8-5df0-8d66-7a3f35a905e5"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}