{"componentChunkName":"component---src-templates-doc-js","path":"/course/custom/fasm/homework/Lab4/","result":{"data":{"site":{"siteMetadata":{"title":"mem 的小站"}},"post":{"id":"28b2764a-9ad8-5df0-8d66-7a3f35a905e5","excerpt":"题目描述 以下程序的功能是从键盘输入一个十六进制数，该十六进制数一共2位，其中十位保存到buf[0]中，个位保存到buf[1]中，无论十位还是个位只要输入的是字母则一定是大写形式。 接下去按以下步骤从屏幕第0行起输出16行内容，每行都输出字符c+i(i为屏幕行号,c为输入的16进制ASCII码对应的字符)及其1…","html":"<h2>题目描述</h2>\n<p>以下程序的功能是从键盘输入一个十六进制数，该十六进制数一共2位，其中十位保存到buf[0]中，个位保存到buf[1]中，无论十位还是个位只要输入的是字母则一定是大写形式。</p>\n<p>接下去按以下步骤从屏幕第0行起输出16行内容，每行都输出字符c+i(i为屏幕行号,c为输入的16进制ASCII码对应的字符)及其16进制ASCII码:</p>\n<ol>\n<li>把buf[0]及buf[1]中的十六进制字符脱去引号</li>\n<li>计算(buf[0]&#x3C;&#x3C;4) ∣ buf[1]的值并保存到变量c中</li>\n<li>i=0</li>\n<li>在(0,i)处显示字符c, 颜色为7Ch</li>\n<li>在(1,i)处显示字符c的2位十六进制ASCII码, 颜色为1Ah</li>\n<li>c++</li>\n<li>i++</li>\n<li>if(i&#x3C;16)goto 4.</li>\n<li>结束程序运行</li>\n</ol>\n<h2>参考程序</h2>\n<p><a href=\"http://cc.zju.edu.cn/bhh/asm/ascii.c\">http://cc.zju.edu.cn/bhh/asm/ascii.c</a> 用C语言写的解答</p>\n<p><a href=\"http://cc.zju.edu.cn/bhh/asm/calldemo.asm\">http://cc.zju.edu.cn/bhh/asm/calldemo.asm</a> 演示如何定义并调用函数</p>\n<h2>笔记</h2>\n<h3>定义函数</h3>\n<p>由于pta限制，必须在<code class=\"language-text\">main:</code>之后定义函数。可以给真正的主程序部分加上<code class=\"language-text\">main_body:</code>，然后在开始填代码的部分直接<code class=\"language-text\">jmp main_body</code>。</p>\n<h3>写显卡</h3>\n<p>参考第三章相关内容。</p>\n<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">; 初始化写显卡\nmov ax, 0B800h   ; 文本模式显卡映射到的内存段\nmov es, ax\nmov di, 0\n; 写字符\nmov al, &#39;a&#39;      ; 要被写的字符\nmov ah, 007Ch    ; 低2位控制前景色，高2位控制背景色\nmov es:[di], ax \nadd di, 2        ; 一个字符占用两个内存单元</code></pre></div>\n<h3>循环变量</h3>\n<p>这里用的是CX寄存器</p>\n<h2>代码</h2>\n<div class=\"gatsby-highlight\" data-language=\"assembly\"><pre class=\"language-assembly\"><code class=\"language-assembly\">;本题要求:\n;以下程序的功能是从键盘输入一个十六进制数，\n;该十六进制数一共2位，其中十位保存到buf[0]\n;中，个位保存到buf[1]中，无论十位还是个位\n;只要输入的是字母则一定是大写形式。接下去\n;按以下步骤从屏幕第0行起输出16行内容，每行\n;都输出字符c+i(i为屏幕行号)及其16进制ASCII码:\n;(1)把buf[0]及buf[1]中的十六进制字符脱去引号\n;(2)计算buf[0]&lt;&lt;4 | buf[1]的值并保存到变量c中\n;(3)i=0\n;(4)在(0,i)处显示字符c, 颜色为7Ch\n;(5)在(1,i)处显示字符c的2位十六进制ASCII码, 颜色为1Ah\n;(6)c++\n;(7)i++\n;(8)if(i&lt;16) goto (4)\n;(9)结束程序运行\n\n.386\ndata segment use16\nbuf db 0, 0\nc   db 0\nhex db 0, 0\ndata ends\n\ncode segment use16\nassume cs:code, ds:data\nmain:\n   mov ax, data\n   mov ds, ax\n   mov ax, 0B800h\n   mov es, ax\n   mov di, 0\n   ;\n   mov ah, 1\n   int 21h\n   mov buf[0], al\n   mov ah, 1\n   int 21h\n   mov buf[1], al\n;请在#1_begin和#1_end之间补充代码实现以下功能:\n;(1)把buf[0]及buf[1]中的十六进制字符脱去引号\n;(2)计算buf[0]&lt;&lt;4 | buf[1]的值并保存到变量c中\n;(3)i=0\n;(4)在(0,i)处显示字符c, 颜色为7Ch\n;(5)在(1,i)处显示字符c的2位十六进制ASCII码, 颜色为1Ah\n;(6)c++\n;(7)i++\n;(8)if(i&lt;16) goto (4)\n;(9)结束程序运行\n;#1_begin-------------------------------------\n   jmp main_body\n\nremove_quotation:\n   cmp al, &#39;9&#39;\n   jg remove_quotation_alpha\nremove_quotation_number:\n   sub al, &#39;0&#39;\n   jmp remove_quotation_end\nremove_quotation_alpha:\n   sub al, &#39;A&#39;\n   add al, 10\n   jmp remove_quotation_end\nremove_quotation_end:\n   ret\n\nadd_quotation:\n   cmp al, 9\n   jg add_quotation_alpha\nadd_quotation_number:\n   add al, &#39;0&#39;\n   jmp add_quotation_end\nadd_quotation_alpha:\n   add al, &#39;A&#39;\n   sub al, 10\n   jmp add_quotation_end\nadd_quotation_end:\n   ret\n\nmain_body:\n   ; 将buf[0]和buf[1]的值脱去引号\n   mov ah, 0\n   mov al, buf[0]\n   call remove_quotation\n   mov buf[0], al\n   mov al, buf[1]\n   call remove_quotation\n   mov buf[1], al\n   ; 将(buf[0]&lt;&lt;4)|buf[1]的值保存到c中\n   mov al, buf[0]\n   shl al, 4\n   mov bl, buf[1]\n   or al, bl\n   mov c, al\n   ; 初始化写显卡\n   mov ax, 0B800h\n   mov es, ax\n   mov di, 0\n   ; i=0\n   mov cx, 0\nmain_loop:\n   ; 写字符\n   mov al, c\n   mov ah, 007Ch\n   mov es:[di], ax\n   add di, 2\n   ; 写c的高位\n   mov al, c\n   shr al, 4\n   call add_quotation\n   mov ah, 01ah\n   mov es:[di], ax\n   add di, 2\n   ; 写c的低位\n   mov al, c\n   shl al, 4\n   shr al, 4\n   call add_quotation\n   mov ah, 01ah\n   mov es:[di], ax\n   add di, 2\n   ; 跳到下一行\n   add di, 154 ; 160-3*2=154\n   add c, 1\n   add cx, 1\n   cmp cx, 16\n   jne main_loop\nmain_exit:\n   nop\n;#1_end=======================================\n   mov ah, 4Ch\n   int 21h\ncode ends\nend main</code></pre></div>","frontmatter":{"title":"Lab4: 写显卡内存输出ASCII字符及其16进制ASCII码","date":null,"description":null},"fields":{"navJson":null,"category":"[{\"name\":\"课程笔记\",\"to\":\"/course/\"}]"}},"previous":{"fields":{"slug":"/course/gen-ed/linear-algebra/"},"frontmatter":{"title":"线性代数"}},"next":{"fields":{"slug":"/course/custom/fasm/homework/Lab3/"},"frontmatter":{"title":"Lab3: 金字塔"}}},"pageContext":{"id":"28b2764a-9ad8-5df0-8d66-7a3f35a905e5","previousPostId":"b9b740ae-3ae0-5101-9c90-49dbca9225b9","nextPostId":"dadbdc65-b215-54a7-9fbb-9565678ab64b"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}