{"componentChunkName":"component---src-templates-post-js","path":"/course/multimedia/note/2/","result":{"data":{"site":{"siteMetadata":{"title":"mem 的小站"}},"post":{"id":"3d9a7f38-dce0-5462-b4cc-75956a29475f","excerpt":"本篇笔记介绍了图像数据的基本表示方法，包括 1 位二值图像、8 位灰度图像、24 位真彩色图像和 8 位索引彩色图像，并详细讲解了抖动技术及颜色查找表（LUT）的构造方法。此外，还介绍了几种常见的图像文件格式，如 GIF、JPEG、BMP 及其他格式，并分析了它们的存储结构和特点。（由 gpt-4o 生成摘要）","html":"<blockquote>\n<p>本篇笔记介绍了图像数据的基本表示方法，包括 1 位二值图像、8 位灰度图像、24 位真彩色图像和 8 位索引彩色图像，并详细讲解了抖动技术及颜色查找表（LUT）的构造方法。此外，还介绍了几种常见的图像文件格式，如 GIF、JPEG、BMP 及其他格式，并分析了它们的存储结构和特点。<small style=\"font-style: italic; opacity: 0.5\">（由 gpt-4o 生成摘要）</small></p>\n</blockquote>\n<!-- more -->\n<h2 id=\"anchor-8d7cf15b707628a5\" style=\"position: relative;\"><a href=\"#anchor-8d7cf15b707628a5\" aria-label=\"anchor 8d7cf15b707628a5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Basic Data Types</h2>\n<h3 id=\"anchor-8c7db053596b6cde\" style=\"position: relative;\"><a href=\"#anchor-8c7db053596b6cde\" aria-label=\"anchor 8c7db053596b6cde permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. 1-bit Images</h3>\n<ul>\n<li><strong>1 位图像(1-Bit image)</strong>，也称为 <strong>二值图像(binary image)</strong> 或 <strong>单色图像(monochrome image)</strong>。</li>\n<li>每个像素存储为单个位，通常 0 代表黑色，1 代表白色。\n<ul>\n<li>例：对于分辨率为 640 × 480 的单色图像，<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mfrac><mrow><mn>640</mn><mo>×</mo><mn>480</mn><mtext> b</mtext></mrow><mrow><mn>8</mn><mtext> b/B</mtext></mrow></mfrac><mo>=</mo><mn>38.4</mn><mtext>KB</mtext></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle{\\frac{640 \\times 480 \\text{ b}}{8 \\text{ b/B}} = 38.4 \\text{KB}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.3074em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">8</span><span class=\"mord text\"><span class=\"mord\"> b/B</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">640</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">480</span><span class=\"mord text\"><span class=\"mord\"> b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">38.4</span><span class=\"mord text\"><span class=\"mord\">KB</span></span></span></span></span></span></span>，故存储该图需要 38.4KB 的空间。</li>\n</ul>\n</li>\n<li>用途：适用于仅包含简单图形和文本的图片。</li>\n</ul>\n<h3 id=\"anchor-806f1a59789f08b8\" style=\"position: relative;\"><a href=\"#anchor-806f1a59789f08b8\" aria-label=\"anchor 806f1a59789f08b8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. 8-Bit Grey-Level Image</h3>\n<ul>\n<li>每个像素用单个 <strong>字节(byte)</strong> 表示 <strong>灰度值(gray value)</strong>，范围为 0 到 255。\n<ul>\n<li>例：对于分辨率为 640 × 480 的 8 位灰度图像，需要 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mn>640</mn><mo>×</mo><mn>480</mn><mtext> B</mtext><mo>=</mo><mn>307.2</mn><mtext> KB</mtext></mrow></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle{640 \\times 480 \\text{ B} = 307.2 \\text{ KB}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">640</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">480</span><span class=\"mord text\"><span class=\"mord\"> B</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">307.2</span><span class=\"mord text\"><span class=\"mord\"> KB</span></span></span></span></span></span></span> 的存储空间。</li>\n</ul>\n</li>\n<li><strong>位图(bitmap)</strong>：整个图像可以看作是像素值的二维数组，称为位图。\n<img src=\"https://img.memset0.cn/2025/02/21/aCT1y9u8.png\"alt=\"\" style=\"width: 410px; \" ></li>\n<li><strong>位平面(bitplane)</strong>：将图像中所有像素的处于同一位位置的比特提取出来，组成一个新的二值图像 (黑白图像) ，就是一个 1 位位平面。\n<ul>\n<li>8 位灰度图像可以看作是 8 个 1 位的集合。所有位平面共同构成一个字节，存储 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>255</mn></mrow><annotation encoding=\"application/x-tex\">0 \\sim 255</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">255</span></span></span></span></span> 之间的灰度值。\n<img src=\"https://img.memset0.cn/2025/02/21/9dzPqxXj.png\"alt=\"\" style=\"width: 248px; \" ></li>\n</ul>\n</li>\n<li>硬件上，存储图像数组的空间通常由 <strong>帧缓存(frame buffer)</strong> / <strong>显卡(video card)</strong> 提供。</li>\n</ul>\n<h4 id=\"anchor-a4116799c34a4b41\" style=\"position: relative;\"><a href=\"#anchor-a4116799c34a4b41\" aria-label=\"anchor a4116799c34a4b41 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2.1. Dithering</h4>\n<ul>\n<li><strong>DPI(dot per inch)</strong>：每平方英寸上的点数。</li>\n</ul>\n<p><details open class=\"callout callout-type-example\"><summary style=\"pointer-events: none;\"> Example</summary><div class=\"callout-content\"><p></p><p>Print an image (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>240</mn><mo>×</mo><mn>180</mn><mo>×</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">240 \\times 180 \\times 8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">240</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">180</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">8</span></span></span></span></span> bit) on a paper (<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>12.8</mn><mo>×</mo><mn>9.6</mn></mrow><annotation encoding=\"application/x-tex\">12.8 \\times 9.6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">12.8</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">9.6</span></span></span></span></span> inch) by a printer with <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>300</mn><mo>×</mo><mn>300</mn></mrow><annotation encoding=\"application/x-tex\">300\\times 300</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">300</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">300</span></span></span></span></span> DPI, what’s the size of each pixel (dots)?</p><p><details  class=\"callout callout-type-quote\"><summary > Answer</summary><div class=\"callout-content\"><p></p><p>– <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>300</mn><mo>×</mo><mn>12.8</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mo stretchy=\"false\">(</mo><mn>300</mn><mo>×</mo><mn>9.6</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>3480</mn><mo>×</mo><mn>2880</mn></mrow><annotation encoding=\"application/x-tex\">(300\\times 12.8)\\times (300\\times 9.6) = 3480\\times 2880</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">300</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">12.8</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">300</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">9.6</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3480</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2880</span></span></span></span></span> dots\n– <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>3840</mn><mi mathvariant=\"normal\">/</mi><mn>240</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mo stretchy=\"false\">(</mo><mn>2880</mn><mi mathvariant=\"normal\">/</mi><mn>180</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>16</mn><mo>×</mo><mn>16</mn><mo>=</mo><mn>256</mn></mrow><annotation encoding=\"application/x-tex\">(3840/240)\\times (2880/180) = 16\\times 16=256</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">3840/240</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2880/180</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">16</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">16</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">256</span></span></span></span></span></p></div></details></p></div></details></p>\n<p>为了在 2 级（1-位）打印机上 <strong>打印(print)</strong> 灰度图像，通常需要用到 <strong>抖动(dithering)</strong> 技术，这可以将 <strong>强度分辨率(intensity resolution)</strong> 转换为 <strong>空间分辨率(spatial resolution)</strong>。</p>\n<p>主要策略是用更大的图案（<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N \\times N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span> 的矩阵）替换像素值，使得打印点的数量近似于模拟 <strong>半色调打印(halftone printing)</strong> 中使用的不同大小的墨水圆盘。一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N \\times N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span> 矩阵可以表示 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>N</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">N^2 + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> 级强度，例如，<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span></span> 图案可以表示五个强度级别：</p>\n<p><img src=\"https://img.memset0.cn/2025/02/21/C8PMvj9N.png\"alt=\"\" style=\"width: 355px; \" ></p>\n<p>最直观的思路是根据上面的强度级别，用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n \\times n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span> 点矩阵替换每个像素（如果强度 > 抖动矩阵条目，则在该条目位置打印一个“开”点）。以使用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span></span> 为例，由于 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>256</mn><mo>></mo><mn>2</mn><mo>×</mo><mn>2</mn><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">256>2\\times 2+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">256</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span>，我们需要先把强度划分成 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">5</span></span></span></span></span> 个级别，分别对应上面的 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">4,3,2,1,0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span></span></span></span></span> 的矩阵，逐像素进行替换即可。需要注意，这样得到的图片的大小会增大 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N \\times N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span> 倍，这在抖动矩阵较大时不够优秀。</p>\n<p><strong>有序抖动(ordered dithering)</strong> 算法通过引入一个抖动矩阵，打印图片时对于每个像素点进行处理，仅当抖动矩阵对应位置的数值大于强度时，才打印，这样就不需要额外的存储空间（相当于是把比较的步骤移到了打印时进行）。下图是 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">5 \\times 5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">5</span></span></span></span></span> 的标准抖动矩阵，和灰度值为 15 时的打印效果：</p>\n<p><img src=\"https://img.memset0.cn/2025/02/21/UsuTrQkA.png\"alt=\"\" style=\"width: 360px; \" ></p>\n<h3 id=\"anchor-78d632f9582b5627\" style=\"position: relative;\"><a href=\"#anchor-78d632f9582b5627\" aria-label=\"anchor 78d632f9582b5627 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3. 24-Bit Color Image</h3>\n<ul>\n<li>每个像素使用三个字节：分别代表 <strong>红(red, R)</strong>、<strong>绿(green, G)</strong>、<strong>蓝(blue, B)</strong> 三个颜色分量。\n<ul>\n<li>每个颜色分量的值范围从 0 到 255，即每个像素是三个颜色分量的灰度值的组合。</li>\n<li>支持 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>256</mn><mo>×</mo><mn>256</mn><mo>×</mo><mn>256</mn><mo>=</mo><mn>16</mn><mo separator=\"true\">,</mo><mn>777</mn><mo separator=\"true\">,</mo><mn>216</mn></mrow><annotation encoding=\"application/x-tex\">256 \\times 256 \\times 256 = 16,777,216</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">256</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">256</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">256</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">16</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">777</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">216</span></span></span></span></span> 种颜色，通常称为真彩色。</li>\n</ul>\n</li>\n<li>许多 24 位彩色图像实际上存储为 32 位图像，通过引入一个额外的 <strong>Alpha 通道</strong> 值指示特殊效果信息，例如 <strong>透明度(transparency flag)</strong>。\n<ul>\n<li><strong>半透明(Semi-transparency)</strong> 图像颜色计算公式：\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>半透明图像颜色</mtext><mo>=</mo><mtext>源图像颜色</mtext><mo>×</mo><mo stretchy=\"false\">(</mo><mn>100</mn><mi mathvariant=\"normal\">%</mi><mo>−</mo><mtext>透明度</mtext><mo stretchy=\"false\">)</mo><mo>+</mo><mtext>背景图像颜色</mtext><mo>×</mo><mtext>透明度</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{半透明图像颜色} = \\text{源图像颜色} × (100\\% - \\text{透明度}) + \\text{背景图像颜色} × \\text{透明度}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">半透明图像颜色</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">源图像颜色</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">100%</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">透明度</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">背景图像颜色</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">透明度</span></span></span></span></span></span></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"anchor-fe9b0021d3c68d12\" style=\"position: relative;\"><a href=\"#anchor-fe9b0021d3c68d12\" aria-label=\"anchor fe9b0021d3c68d12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4. 8-Bit Color Image</h3>\n<ul>\n<li><strong>8 位彩色图像(8-Bit Color Image)</strong> 也称为 <strong>256 色图像(256-colors image)</strong>。</li>\n<li>使用 <strong>颜色查找表(Color Lookup table)</strong>（也称为 <strong>调色板(palette)</strong>）的思想——图像存储的是一组字节，而不是真实的颜色值。字节值是颜色表的索引，索引指向 3 字节的颜色值。\n<ul>\n<li>通常选择最重要的 256 种颜色。</li>\n<li>这些颜色可以通过聚类 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>256</mn><mo>×</mo><mn>256</mn><mo>×</mo><mn>256</mn></mrow><annotation encoding=\"application/x-tex\">256 \\times 256 \\times 256</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">256</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">256</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">256</span></span></span></span></span> 种颜色生成，例如使用 <strong>中位切割算法(Median-cut Algorithm)</strong>。</li>\n</ul>\n</li>\n</ul>\n<p><details  class=\"callout callout-type-example\"><summary > Application: Medical Images</summary><div class=\"callout-content\"><p></p><p>将灰度的 <strong>医学图像(medical image)</strong> 转换为彩色图像。</p><p><img src=\"https://img.memset0.cn/2025/02/21/ztLxqKq9.png\"alt=\"\" style=\"width: 650px; \" ></p><p><img src=\"https://img.memset0.cn/2025/02/21/3pdGIDTR.png\"alt=\"3pdGIDTR.png\" style=\"width: 604px; \" ></p></div></details></p>\n<h4 id=\"anchor-9c5ad71b8bb5a721\" style=\"position: relative;\"><a href=\"#anchor-9c5ad71b8bb5a721\" aria-label=\"anchor 9c5ad71b8bb5a721 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4.1. To Devise a Color Lookup Table</h4>\n<p>最简单的思想是根据按 RGB 分配，人眼对 <strong>红色(R)</strong> 和 <strong>绿色(G)</strong> 比对 <strong>蓝色(B)</strong> 更敏感，可以为 R 分配 3 位，G 分配 3 位，B 分配 2 位，总共 8 位。通过截断处理，如 R 和 G 从 8 位缩小到 3 位，通过将其除以 32（<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>256</mn><mi mathvariant=\"normal\">/</mi><mn>8</mn><mo>=</mo><mn>32</mn></mrow><annotation encoding=\"application/x-tex\">256/8=32</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">256/8</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">32</span></span></span></span></span>）然后截断得到 3 位的索引值。这是一种均匀的颜色分配方式。</p>\n<p><strong>聚类(clustering)</strong> 方法可以帮我们找到更合适的 LUT，常见的聚类方法有 K-Means 和 Median Cut，这里主要介绍 <strong>中值切割(Median Cut)</strong> 算法：循环 8 轮，每轮根据 R,G,B 三个维度上的颜色范围（最大值 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo></mrow><annotation encoding=\"application/x-tex\">-</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span></span></span></span></span> 最小值）选择范围跨度最大的进行切分，通过从这一维度的中位数位置切开，进行中值切割，并递归这一过程。</p>\n<p><img src=\"https://img.memset0.cn/2025/02/21/fMMI6syt.png\"alt=\"\" style=\"width: 464px; \" ></p>\n<p>中值切割算法相对于 K-Means 速度更快但是质量略差，也可以结合两者以获得高效且高质量的 LUT 算法。</p>\n<h2 id=\"anchor-7533a4273981d43e\" style=\"position: relative;\"><a href=\"#anchor-7533a4273981d43e\" aria-label=\"anchor 7533a4273981d43e permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Popular Image File Format</h2>\n<h3 id=\"anchor-28257add3b871dad\" style=\"position: relative;\"><a href=\"#anchor-28257add3b871dad\" aria-label=\"anchor 28257add3b871dad permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1. GIF Image</h3>\n<ul>\n<li><strong>图形交换格式(Graphics Interchange Format, GIF)</strong>。</li>\n<li>由 <strong>UNISYS 公司</strong> 和 <strong>CompuServe 公司</strong> 于 1987 年发明，最初用于通过电话线传输图形图像。现在不属于任何特定应用程序。</li>\n<li>GIF 图片使用 <strong>LZW(Lempel-Ziv-Welch)</strong> 压缩算法。\n<ul>\n<li>是一种 <strong>无损压缩(lossless compression)</strong> 算法。</li>\n<li>对于连续色调图像，压缩率约为 50%。</li>\n</ul>\n</li>\n<li>GIF 最多支持于 8 位（256 色）图像。</li>\n<li>以 <strong>隔行扫描(interlacing)</strong> 的方式存储\n<ul>\n<li>可以通过四遍扫描 <strong>渐进显示(gradually display)</strong> 图像。</li>\n</ul>\n</li>\n<li><strong>GIF89a</strong> 支持动画和 <strong>透明色(transparent color)</strong>。</li>\n<li><img align=\"right\" src=\"https://img.memset0.cn/2025/02/21/bRfSLXHO.png\" width=\"160\">GIF 文件格式：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">偏移量(Offset)</th>\n<th align=\"center\">长度(Length)</th>\n<th align=\"left\">内容(Contents)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">0</td>\n<td align=\"center\">3 字节</td>\n<td align=\"left\">\"GIF\"</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">3 字节</td>\n<td align=\"left\">\"87a\" 或 \"89a\"</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">2 字节</td>\n<td align=\"left\">逻辑屏幕宽度</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">2 字节</td>\n<td align=\"left\">逻辑屏幕高度</td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">1 字节</td>\n<td align=\"left\">位 0: 全局颜色表标志(GCTF)</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"left\">位 1..3: 颜色分辨率</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"left\">位 4: 全局颜色表排序标志</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"left\">位 5..7: 全局颜色表大小: 2^(1+n)</td>\n</tr>\n<tr>\n<td align=\"center\">...</td>\n<td align=\"center\">1 字节</td>\n<td align=\"left\">背景颜色索引</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"anchor-ddc58d3af5bd1603\" style=\"position: relative;\"><a href=\"#anchor-ddc58d3af5bd1603\" aria-label=\"anchor ddc58d3af5bd1603 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2. JPEG Image</h3>\n<ul>\n<li><strong>联合图像专家组(Joint Photographic Experts Group, JPEG)</strong></li>\n<li>利用人类视觉系统的一些局限性，JPEG 可以通过 <strong>有损压缩(lossy compression)</strong> 实现高压缩率。</li>\n<li>允许用户设置所需的 <strong>质量级别(quality level)</strong> 或 <strong>压缩比(compression ratio)</strong>（输入大小除以输出大小）。</li>\n</ul>\n<h3 id=\"anchor-342a37ed33a891e4\" style=\"position: relative;\"><a href=\"#anchor-342a37ed33a891e4\" aria-label=\"anchor 342a37ed33a891e4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3. BMP Image</h3>\n<ul>\n<li>由 <strong>Microsoft</strong> 创建，作为 Windows 的主要图像格式，可以存储 1 位、4 位、8 位以及真彩色数据。</li>\n<li>BMP 文件有三种存储形式：\n<ul>\n<li><strong>原始数据，不压缩(Original data without compression)</strong>，最流行。</li>\n<li><strong>游程编码(Run Length Encoding, RLE)</strong>：用于 8 位图像（256 色）<strong>BI-RLE8</strong>。</li>\n<li><strong>RLE</strong>：用于 4 位图像（16 色）<strong>BI_RLE4</strong>。</li>\n</ul>\n</li>\n<li>BMP 文件由四个部分组成：\n<ul>\n<li><strong>文件头(File Head)</strong>：类型和其他信息。</li>\n<li><strong>位图信息头(Information head of bitmap)</strong>：长度、宽度、压缩算法等。</li>\n<li><strong>调色板(Palette)</strong>：颜色 LUT 表格，24 位真彩色图像没有调色板。</li>\n<li><strong>图像数据(Image Data)</strong>：真彩色图像存储 (R,G,B) 三个分量，带调色板的图像存储调色板的索引。</li>\n</ul>\n</li>\n<li>BMP 文件格式：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">偏移量(Offset)</th>\n<th align=\"center\">长度(Length)</th>\n<th align=\"left\">内容(Contents)</th>\n<th align=\"center\">偏移量(Offset)</th>\n<th align=\"center\">长度(Length)</th>\n<th align=\"center\">内容(Contents)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">0</td>\n<td align=\"center\">2 字节</td>\n<td align=\"left\">\"BM\"</td>\n<td align=\"center\">18</td>\n<td align=\"center\">4 字节</td>\n<td align=\"center\">宽度</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">4 字节</td>\n<td align=\"left\">包含 \"BM\" 的总大小</td>\n<td align=\"center\">22</td>\n<td align=\"center\">4 字节</td>\n<td align=\"center\">高度</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">2 字节</td>\n<td align=\"left\">保留 1</td>\n<td align=\"center\">26</td>\n<td align=\"center\">2 字节</td>\n<td align=\"center\">位面数</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">2 字节</td>\n<td align=\"left\">保留 2</td>\n<td align=\"center\">28</td>\n<td align=\"center\">2 字节</td>\n<td align=\"center\">每像素位数</td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">4 字节</td>\n<td align=\"left\">偏移字节数</td>\n<td align=\"center\">30</td>\n<td align=\"center\">4 字节</td>\n<td align=\"center\">压缩</td>\n</tr>\n<tr>\n<td align=\"center\">14</td>\n<td align=\"center\">4 字节</td>\n<td align=\"left\">头部大小 (n)</td>\n<td align=\"center\">34</td>\n<td align=\"center\">4 字节</td>\n<td align=\"center\">图像大小</td>\n</tr>\n<tr>\n<td align=\"center\">18</td>\n<td align=\"center\">n-4 字节</td>\n<td align=\"left\">头部 (见右侧表格)</td>\n<td align=\"center\">38</td>\n<td align=\"center\">4 字节</td>\n<td align=\"center\">每米像素的水平分辨率</td>\n</tr>\n<tr>\n<td align=\"center\">14+n ... s-1</td>\n<td align=\"center\"></td>\n<td align=\"left\">图像数据</td>\n<td align=\"center\">42</td>\n<td align=\"center\">4 字节</td>\n<td align=\"center\">每米像素的垂直分辨率</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"left\"></td>\n<td align=\"center\">46</td>\n<td align=\"center\">4 字节</td>\n<td align=\"center\">颜色表中的颜色数</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"left\"></td>\n<td align=\"center\">50</td>\n<td align=\"center\">4 字节</td>\n<td align=\"center\">重要颜色计数</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"left\"></td>\n<td align=\"center\">54</td>\n<td align=\"center\">(n-40) 字节</td>\n<td align=\"center\">OS/2 新扩展字段</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"anchor-45d71b88c2b73e17\" style=\"position: relative;\"><a href=\"#anchor-45d71b88c2b73e17\" aria-label=\"anchor 45d71b88c2b73e17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4. Other Image Formats</h3>\n<ul>\n<li><strong>PNG(Portable Network Graphics)</strong> - <strong>便携式网络图形</strong></li>\n<li><strong>TIFF(Tagged Image File Format)</strong> - <strong>标签图像文件格式</strong></li>\n<li><strong>EXIF(Exchangeable Image File Format)</strong> - <strong>可交换图像文件格式</strong></li>\n<li>……</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#anchor-8d7cf15b707628a5\">1. Basic Data Types</a></p>\n<ul>\n<li><a href=\"#anchor-8c7db053596b6cde\">1.1. 1-bit Images</a></li>\n<li><a href=\"#anchor-806f1a59789f08b8\">1.2. 8-Bit Grey-Level Image</a></li>\n<li><a href=\"#anchor-78d632f9582b5627\">1.3. 24-Bit Color Image</a></li>\n<li><a href=\"#anchor-fe9b0021d3c68d12\">1.4. 8-Bit Color Image</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-7533a4273981d43e\">2. Popular Image File Format</a></p>\n<ul>\n<li><a href=\"#anchor-28257add3b871dad\">2.1. GIF Image</a></li>\n<li><a href=\"#anchor-ddc58d3af5bd1603\">2.2. JPEG Image</a></li>\n<li><a href=\"#anchor-342a37ed33a891e4\">2.3. BMP Image</a></li>\n<li><a href=\"#anchor-45d71b88c2b73e17\">2.4. Other Image Formats</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"II. Graphics and Image Data Representation","description":null},"fields":{"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#384848","images":{"fallback":{"src":"/static/34f64735968077047b7e1323bb14578f/51f17/xpHwaFpG.png","srcSet":"/static/34f64735968077047b7e1323bb14578f/6ef68/xpHwaFpG.png 390w,\n/static/34f64735968077047b7e1323bb14578f/7981e/xpHwaFpG.png 780w,\n/static/34f64735968077047b7e1323bb14578f/51f17/xpHwaFpG.png 1559w","sizes":"(min-width: 1559px) 1559px, 100vw"},"sources":[{"srcSet":"/static/34f64735968077047b7e1323bb14578f/86029/xpHwaFpG.webp 390w,\n/static/34f64735968077047b7e1323bb14578f/6d9ba/xpHwaFpG.webp 780w,\n/static/34f64735968077047b7e1323bb14578f/26a27/xpHwaFpG.webp 1559w","type":"image/webp","sizes":"(min-width: 1559px) 1559px, 100vw"}]},"width":1559,"height":1065}}},"slug":"/course/multimedia/note/2/","cssclasses":null,"isDoc":true,"authors":[],"createTime":"2025 年 2 月 21 日","updateTime":"2025 年 2 月 21 日","category":"[{\"name\":\"课程笔记\",\"to\":\"/course/\"}]","propsJson":null}},"previous":{"fields":{"slug":"/course/co/note/5/"},"frontmatter":{"title":"V. Memory"}},"next":null},"pageContext":{"id":"3d9a7f38-dce0-5462-b4cc-75956a29475f","previousPostId":"51807d27-808f-5640-a002-efe438a563d9","nextPostId":null,"navJson":"[{\"slug\":\"/course/multimedia\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/multimedia/index.md\",\"title\":\"Intro\"},{\"title\":\"Note\",\"children\":[{\"slug\":\"/course/multimedia/note/2\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/multimedia/note/2.md\",\"title\":\"II. Graphics and Image Data Representation\"}]}]"}},"staticQueryHashes":["3871233186"],"slicesMap":{}}