{"componentChunkName":"component---src-templates-post-js","path":"/course/oop/note/class-and-object/","result":{"data":{"site":{"siteMetadata":{"title":"mem 的小站"}},"post":{"id":"33815351-e7bd-5d14-8431-10e367ff9fd2","excerpt":"构造与析构 运算符重载 1.1. 重载运算符的条件 运算符本身需要可以被重载。 必须在类或枚举类（enumeration）上定义 算子(operand) 的数量保持一致，如  必须是两个参数 。 重载后运算符的优先级不变。 可以被重载的运算符： 不可以被重载的运算符： 语法 作为类的成员函数： 作为自由函数：","html":"<h2 id=\"anchor-a6be65605cb88190\" style=\"position: relative;\"><a href=\"#anchor-a6be65605cb88190\" aria-label=\"anchor a6be65605cb88190 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>构造与析构</h2>\n<h2 id=\"anchor-52ff714c6a9d1255\" style=\"position: relative;\"><a href=\"#anchor-52ff714c6a9d1255\" aria-label=\"anchor 52ff714c6a9d1255 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>运算符重载</h2>\n<h3 id=\"anchor-85cf62244944d8eb\" style=\"position: relative;\"><a href=\"#anchor-85cf62244944d8eb\" aria-label=\"anchor 85cf62244944d8eb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. 重载运算符的条件</h3>\n<ul>\n<li>运算符本身需要可以被重载。</li>\n<li>必须在类或枚举类（<a href=\"https://learn.microsoft.com/en-us/cpp/cpp/enumerations-cpp?view=msvc-170\">enumeration</a>）上定义</li>\n<li><strong>算子(operand)</strong> 的数量保持一致，如 <code class=\"language-text\">operator +</code> 必须是两个参数 <code class=\"language-text\">a + b</code>。</li>\n<li>重载后运算符的优先级不变。</li>\n</ul>\n<p>可以被重载的运算符：</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token operator\">+</span> <span class=\"token operator\">-</span> <span class=\"token operator\">*</span> <span class=\"token operator\">/</span> <span class=\"token operator\">%</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">|</span> <span class=\"token operator\">^</span> <span class=\"token operator\">~</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">>></span>\n<span class=\"token operator\">=</span> <span class=\"token operator\">+=</span> <span class=\"token operator\">-=</span> <span class=\"token operator\">*=</span> <span class=\"token operator\">/=</span> <span class=\"token operator\">%=</span> <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">|=</span> <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token operator\">>>=</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token operator\">></span> <span class=\"token operator\">==</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">>=</span>\n<span class=\"token operator\">!</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">||</span> <span class=\"token operator\">++</span> <span class=\"token operator\">--</span>\n<span class=\"token punctuation\">,</span> <span class=\"token operator\">-></span><span class=\"token operator\">*</span> <span class=\"token operator\">-></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">new</span> <span class=\"token keyword\">delete</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>不可以被重载的运算符：</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token double-colon punctuation\">::</span> <span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token keyword\">sizeof</span> <span class=\"token keyword\">typeid</span> <span class=\"token keyword\">static_cast</span> <span class=\"token keyword\">dynamic_cast</span> <span class=\"token keyword\">const_cast</span> <span class=\"token keyword\">reinterpret_cast</span></code></pre></div>\n<h3 id=\"anchor-acef7e66fbd06a02\" style=\"position: relative;\"><a href=\"#anchor-acef7e66fbd06a02\" aria-label=\"anchor acef7e66fbd06a02 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>语法</h3>\n<p>作为类的成员函数：</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Integer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n\tInteger <span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Integer <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t    <span class=\"token keyword\">return</span> <span class=\"token function\">Integer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-></span>val <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>作为自由函数：</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// globally</span>\nInteger <span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Integer <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> Integer <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Integer</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>val <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#anchor-a6be65605cb88190\">构造与析构</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-52ff714c6a9d1255\">运算符重载</a></p>\n<ul>\n<li><a href=\"#anchor-85cf62244944d8eb\">1.1. 重载运算符的条件</a></li>\n<li><a href=\"#anchor-acef7e66fbd06a02\">语法</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"类与对象","description":null},"fields":{"cover":null,"slug":"/course/oop/note/class-and-object/","cssclasses":null,"isDoc":true,"authors":[],"createTime":null,"updateTime":null,"category":"[{\"name\":\"课程笔记\",\"to\":\"/course/\"}]","propsJson":null}},"previous":null,"next":null},"pageContext":{"id":"33815351-e7bd-5d14-8431-10e367ff9fd2","previousPostId":null,"nextPostId":null,"navJson":"[{\"slug\":\"/course/oop\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/oop/index.md\",\"title\":\"课程简介\"},{\"slug\":\"/course/oop/review\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/oop/review.md\",\"title\":\"速通笔记\"}]"}},"staticQueryHashes":["3871233186"],"slicesMap":{}}