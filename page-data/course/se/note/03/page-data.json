{"componentChunkName":"component---src-templates-post-js","path":"/course/se/note/03/","result":{"data":{"site":{"siteMetadata":{"title":"mem 的小站"}},"post":{"id":"67e8eab1-3bf4-5b68-b925-1155d7520abd","excerpt":"本篇笔记总结了软件工程中团队项目管理与敏捷开发的核心概念。首先，介绍了软件项目管理的四个关键要素（人员、产品、过程、项目）以及主要干系人角色，并探讨了团队领导者的 MOI 模型和不同的软件团队结构。随后，分析了团队协调与沟通的重要性，并强调了避免团队“毒性”的必要性。接着，笔记详细介绍了敏捷开发的核心理念，包括敏捷宣言、敏捷原则、敏捷团队的特点以及敏捷开发过程的关键实践，如极限编程（XP）、Scrum 和动态系统开发方法（DSDM）。最后，讨论了敏捷建模和敏捷统一过程（AUP），强调了敏捷方法在软件开发中的灵活性和高效性。（由 gpt-4o 生成摘要）","html":"<blockquote>\n<p>本篇笔记总结了软件工程中团队项目管理与敏捷开发的核心概念。首先，介绍了软件项目管理的四个关键要素（人员、产品、过程、项目）以及主要干系人角色，并探讨了团队领导者的 MOI 模型和不同的软件团队结构。随后，分析了团队协调与沟通的重要性，并强调了避免团队“毒性”的必要性。接着，笔记详细介绍了敏捷开发的核心理念，包括敏捷宣言、敏捷原则、敏捷团队的特点以及敏捷开发过程的关键实践，如极限编程（XP）、Scrum 和动态系统开发方法（DSDM）。最后，讨论了敏捷建模和敏捷统一过程（AUP），强调了敏捷方法在软件开发中的灵活性和高效性。<small style=\"font-style: italic; opacity: 0.5\">（由 gpt-4o 生成摘要）</small></p>\n</blockquote>\n<!-- more -->\n<h1 id=\"anchor-db2a8814688740d4\" style=\"position: relative;\"><a href=\"#anchor-db2a8814688740d4\" aria-label=\"anchor db2a8814688740d4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ch.31 Project Management Concepts</h1>\n<h2 id=\"anchor-da4e21c738edb26b\" style=\"position: relative;\"><a href=\"#anchor-da4e21c738edb26b\" aria-label=\"anchor da4e21c738edb26b permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. The Four P's</h2>\n<p>在软件项目管理中，有四个关键要素（被称为 <strong>四个 P(The Four P's)</strong>），它们共同决定着项目的成败。</p>\n<ul>\n<li><strong>人员(People)</strong>：这是项目成功的<strong>最重要</strong>的因素。</li>\n<li><strong>产品(Product)</strong>：指的是要构建的软件本身。</li>\n<li><strong>过程(Process)</strong>：指为了完成软件工程工作而采用的一系列框架活动和软件工程任务。</li>\n<li><strong>项目(Project)</strong>：指的是使产品成为现实所需完成的所有工作。</li>\n</ul>\n<h2 id=\"anchor-e1f751d1a6962dbb\" style=\"position: relative;\"><a href=\"#anchor-e1f751d1a6962dbb\" aria-label=\"anchor e1f751d1a6962dbb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Stakeholders</h2>\n<p><strong>干系人(Stakeholder)</strong> 是指所有受到项目影响或者对项目有影响的个人或组织。主要的软件项目干系人包括：</p>\n<ul>\n<li><strong>高级管理者(Senior manager)</strong>：他们定义业务问题，这些问题通常对项目有重大影响。高级管理者的支持和决策对项目的资源分配和方向具有重要意义。</li>\n<li><strong>项目经理(Project manager)</strong> / <strong>技术经理(technical manager)</strong>：负责计划、激励、组织和控制进行软件工作的实践者。</li>\n<li><strong>实践者(Practitioner)</strong>：提供工程化产品或应用所需的技术技能，包括程序员、设计师、测试人员等。</li>\n<li><strong>顾客(Customer)</strong>：包括提出软件需求的人员和对结果有间接兴趣的其他相关方。</li>\n<li><strong>最终用户(End-user)</strong>：软件发布投入生产使用后与之交互的人员。</li>\n</ul>\n<h2 id=\"anchor-dff037c88c823173\" style=\"position: relative;\"><a href=\"#anchor-dff037c88c823173\" aria-label=\"anchor dff037c88c823173 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. The MOI Model</h2>\n<p><strong>MOI 模型(The MOI Model)</strong> 概括了优秀的 <strong>团队领导者(Team Leader)</strong> 需要具备的三个关键能力：</p>\n<ul>\n<li><strong>激励(Motivation)</strong>：鼓励技术人员尽最大能力进行生产（通过“push or pull”）。</li>\n<li><strong>组织(Organization)</strong>：塑造现有流程（或创建新流程），使最初的概念转化为最终产品。</li>\n<li><strong>想法或创新(Ideas or innovation)</strong>：鼓励人们即使在为特定的软件产品或应用程序建立的界限内工作时，也能创造并感到有创造力。团队领导者需要营造鼓励创新的氛围，激发团队成员的创造潜力，从而产生更具竞争力的软件产品。</li>\n</ul>\n<h2 id=\"anchor-c249635585f12d31\" style=\"position: relative;\"><a href=\"#anchor-c249635585f12d31\" aria-label=\"anchor c249635585f12d31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Software Team Structure</h2>\n<p>选择软件项目团队结构时，必须考虑以下因素：</p>\n<ul>\n<li>要解决的问题的难度。</li>\n<li>最终程序的大小（以代码行或功能点计）。</li>\n<li>团队将保持在一起的时间（团队 <em>寿命(lifetime)</em>）。</li>\n<li>问题可以 <em>模块化(modularized)</em> 的程度。</li>\n<li>要构建的系统的所需质量和 <em>可靠性(reliability)</em>。</li>\n<li>交付日期的 <em>严格性(regidity)</em>。</li>\n<li>项目所需的社交性（沟通程度）。</li>\n</ul>\n<p><img src=\"https://img.memset0.cn/2025/03/03/AivoJ0Bc.png\"alt=\"\" style=\"width: 421px; \" ></p>\n<h3 id=\"anchor-be48cffdcb4f19bb\" style=\"position: relative;\"><a href=\"#anchor-be48cffdcb4f19bb\" aria-label=\"anchor be48cffdcb4f19bb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1. Organizational Paradigms</h3>\n<p><strong>组织范式(Organizational Paradigm)</strong> 描述了不同的团队组织结构和管理风格。Constantine 提出了四种组织范式：</p>\n<ul>\n<li><strong>封闭范式(closed paradigm)</strong>：按照传统的等级权威结构组织团队，强调集中控制和层级管理。</li>\n<li><strong>随机范式(random paradigm)</strong>：结构松散地组织团队，并依赖于团队成员的 <mark class=\"m-mark\">个人自驱力</mark>。这种范式鼓励创新和自由。</li>\n<li><strong>开放范式(open paradigm)</strong>：试图以一种方式组织团队，使其实现与封闭范式相关的一些控制，但也实现了使用随机范式时发生的许多创新。——试图在控制和创新之间找到平衡，是综合了前两个。</li>\n<li><strong>同步范式(synchronous paradigm)</strong>：依赖于问题的自然划分，并组织团队成员在问题的各个部分上工作，团队成员之间几乎没有积极的沟通。同步范式适用于问题可以被清晰地分解为独立模块的项目，各模块可以并行开发。</li>\n</ul>\n<h3 id=\"anchor-71fd7aedc7bb4012\" style=\"position: relative;\"><a href=\"#anchor-71fd7aedc7bb4012\" aria-label=\"anchor 71fd7aedc7bb4012 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2. Avoid Team \"Toxicity\"</h3>\n<p>团队“<strong>毒性(Toxicity)</strong>”指的是阻碍团队有效工作并导致项目失败的负面因素。应该努力避免以下团队“毒性”：</p>\n<ul>\n<li>疯狂的工作氛围，使得团队成员浪费精力，失去对工作目标的关注。</li>\n<li>个人冲突、业务目标不明确、技术难题等导致团队成员之间产生 <em>矛盾(friction)</em> 和 <em>挫折(frustration)</em>。</li>\n<li>“<em>分散的(fragmented)</em> 或 <em>协调不良的(poorly coordinated)</em> 程序” 或定义不明确或选择不当的流程模型，成为完成任务的障碍。流程混乱、缺乏规范、流程模型不适合项目特点都可能导致团队工作效率低下。</li>\n<li>角色定义不清导致项目成员缺乏 <em>责任感(accountability)</em>，并随之而来引发 <em>互相指责(finger-pointing)</em>。</li>\n<li>持续和反复的失败，这将导致团队成员的信心丧失，<em>士气(morale)</em> 低落。</li>\n</ul>\n<h2 id=\"anchor-7ce7d844fe07db26\" style=\"position: relative;\"><a href=\"#anchor-7ce7d844fe07db26\" aria-label=\"anchor 7ce7d844fe07db26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Agile Teams</h2>\n<p><strong>敏捷团队(Agile Teams)</strong> 是一种适应性强、高效协作的团队模式，特别适用于需求变化频繁的项目。敏捷团队具有以下特点：</p>\n<ul>\n<li>团队成员之间必须相互信任。</li>\n<li>技能的分布必须适合问题，团队成员之间能够形成互补的技能组合。</li>\n<li>为了保持团队凝聚力，可能必须将特立独行者排除在团队之外。</li>\n<li>团队是“自组织”的：\n<ul>\n<li><em>自适应(adaptive)</em> 的团队结构：敏捷团队的结构可以根据项目需要灵活调整。</li>\n<li>使用随机 / 开放 / 同步范式的元素，敏捷团队综合了这些范式的优点。</li>\n<li>成员拥有高度的 <em>自主权(autonomy)</em>。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"anchor-f1ed83b99f3e15dd\" style=\"position: relative;\"><a href=\"#anchor-f1ed83b99f3e15dd\" aria-label=\"anchor f1ed83b99f3e15dd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Team Coordination &#x26; Communication</h2>\n<p>有效的 <strong>团队协调与沟通(Team Coordination &#x26; Communication)</strong> 是项目成功的关键保障。团队可以使用多种沟通方式：</p>\n<ul>\n<li><strong>正式的、非个人方法(formal &#x26; impersonal approaches)</strong>：包括软件工程文档、工作产品、技术备忘录、项目里程碑、进度表和项目控制工具（第 23 章）、变更请求和相关文档、错误跟踪报告、和存储库数据（第 26 章）。这些方法主要用于记录和传递项目信息，例如需求文档、设计文档、代码、测试报告等。</li>\n<li><strong>正式的、人际程序(formal &#x26; interpersonal procedures)</strong>：侧重于应用于软件工程工作产品的质量保证活动（第 25 章）。这些包括状态审查会议以及设计和代码检查。例如：评审会议、代码审查、走查等，这些方法主要用于确保软件质量。</li>\n<li><strong>非正式的、人际程序(informal &#x26; interpersonal procedures)</strong>：包括用于信息传播和问题解决的小组会议以及“需求和开发人员的搭配”，如头脑风暴等。</li>\n<li><strong>电子通讯(electronic communication)</strong>：包括电子邮件、电子公告板，以及扩展的、基于视频的会议系统，这些方法可以打破时间和空间的限制，方便团队成员远程沟通。</li>\n<li><strong>人际网络(interpersonal networking)</strong>：包括与团队成员和项目外部人员的非正式讨论，他们可能拥有有帮助的经验或见解。</li>\n</ul>\n<h2 id=\"anchor-db23e172226298d7\" style=\"position: relative;\"><a href=\"#anchor-db23e172226298d7\" aria-label=\"anchor db23e172226298d7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. The Product Scope</h2>\n<p><strong>产品范围(The Product Scope)</strong> 定义了软件系统需要实现的功能和特性，它必须在管理和技术层面都是明确和可理解的。产品范围需要从以下几个方面进行描述：</p>\n<ul>\n<li><strong>背景(Context)</strong>：要构建的软件如何适应更大的系统、产品或业务背景？由此产生什么约束？ 理解软件的背景有助于确定其边界和约束条件。</li>\n<li><strong>信息目标(Information objectives)</strong>：软件作为输出产生哪些客户可见的数据对象？需要哪些数据对象作为输入？ 明确输入和输出数据对象有助于定义软件的功能和数据处理流程。</li>\n<li><strong>功能和性能(Function and performance)</strong>：软件执行什么功能将输入数据转换为输出？是否需要解决任何特殊的性能特征？ 定义软件的功能和性能指标，有助于指导软件设计和开发。</li>\n</ul>\n<h3 id=\"anchor-4c6c8adf5c73f012\" style=\"position: relative;\"><a href=\"#anchor-4c6c8adf5c73f012\" aria-label=\"anchor 4c6c8adf5c73f012 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7.1. Problem Decomposition</h3>\n<p><strong>问题分解(Problem Decomposition)</strong> 有时也称为 <strong>分区(partitioning)</strong> 或 <strong>问题细化(problem elaboration)</strong>。</p>\n<ul>\n<li>一旦定义了范围，其可以被分解为 <strong>组成功能(constituent functions)</strong>、用户可见的 <strong>数据对象(data objects)</strong>、一组 <strong>问题类(problem classes)</strong>……</li>\n<li>分解过程将持续进行，直到定义了所有功能或问题类为止。</li>\n<li>目的：将复杂的问题分解为更小、更易于管理和解决的子问题。</li>\n</ul>\n<h2 id=\"anchor-48f7b26830bcfe3f\" style=\"position: relative;\"><a href=\"#anchor-48f7b26830bcfe3f\" aria-label=\"anchor 48f7b26830bcfe3f permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. The Process</h2>\n<p>项目的 <strong>过程(process)</strong> 框架的搭建需要考虑以下要素：</p>\n<ul>\n<li>项目 <em>特点(characteristic)</em></li>\n<li>确定所需的 <em>严谨程度(degree of rigor)</em></li>\n<li>为每个软件工程活动定义 <strong>任务集(task set)</strong>——任务集包含以下内容：\n<ul>\n<li><strong>软件工程任务(Software engineering tasks)</strong>：为了完成特定的软件工程活动而需要执行的具体任务，如需求分析、设计、编码、测试等等。</li>\n<li><strong>工作产品(Work products)</strong>：可交付物，包括需求文档、源代码、测试用例等等。</li>\n<li><strong>质量保证点(Quality assurance points)</strong>：如测试或。</li>\n<li><strong>里程碑(Milestones)</strong>：项目进展过程中的重要事件或时间节点。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img.memset0.cn/2025/03/03/JJddAB70.png\"alt=\"Melding the Problem and the Process\" style=\"width: 522px; \" ><span class=\"image-alt\">Melding the Problem and the Process</span></p>\n<h2 id=\"anchor-2d32e27754fabbc7\" style=\"position: relative;\"><a href=\"#anchor-2d32e27754fabbc7\" aria-label=\"anchor 2d32e27754fabbc7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. The Project</h2>\n<p>项目在以下情况下会陷入困境...</p>\n<ul>\n<li>软件人员不了解客户的需求。</li>\n<li>产品范围定义不明确。</li>\n<li>变更管理不善。</li>\n<li>选择的技术发生变化。</li>\n<li>业务需求发生变化或定义不明确。</li>\n<li>截止日期 <em>不切实际(unrealistic)</em>。</li>\n<li>用户抵制。</li>\n<li><em>赞助(sponsorship)</em> 丢失或未正确获得。</li>\n<li>项目团队缺乏具有适当技能的人员。</li>\n<li>管理人员（和实践者）没有从最佳实践中吸取教训。</li>\n</ul>\n<h3 id=\"anchor-2ef70db65ae34899\" style=\"position: relative;\"><a href=\"#anchor-2ef70db65ae34899\" aria-label=\"anchor 2ef70db65ae34899 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9.1. Common-Sense Approach to Projects</h3>\n<p>对项目采取 <strong>常识性方法(Common-Sense Approach to Projects)</strong>，可以有效地提高项目成功率。这包含以下几个关键原则：</p>\n<ul>\n<li><strong>良好的开端(Start on the right foot)</strong>：努力（非常努力）理解要解决的问题，然后设定切合实际的目标和期望。项目启动阶段至关重要，需要充分理解客户需求，明确项目目标和范围。</li>\n<li><strong>保持动力(Maintain momentum)</strong>：项目经理必须提供激励措施，以最大限度地减少人员流动，团队应强调其执行的每项任务的质量，高级管理层应尽一切可能不干涉团队的工作。保持团队稳定、重视质量、减少外部干扰，都有助于项目保持良好势头。</li>\n<li><strong>跟踪进展(Track progress)</strong>：对于软件项目，当工作产品（例如，模型、源代码、成套测试用例）被生产出来并作为质量保证活动的一部分获得批准（使用正式技术评审）时，就会跟踪进展。通过定期跟踪项目进展，及时发现和解决问题，确保项目按计划进行。</li>\n<li><strong>做出明智的决定(Make smart decisions)</strong>：本质上，项目经理和软件团队的决定应该是“保持简单”。在项目决策过程中，应优先考虑简单有效的方案，避免过度设计和复杂化。</li>\n<li><strong>进行事后分析(Conduct a postmortem analysis)</strong>：为每个项目建立一致的机制，以吸取经验教训。项目结束后，应进行回顾和总结，提炼经验教训，为后续项目提供借鉴。</li>\n</ul>\n<h3 id=\"anchor-5c1a5ec63d30210a\" style=\"position: relative;\"><a href=\"#anchor-5c1a5ec63d30210a\" aria-label=\"anchor 5c1a5ec63d30210a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9.2. To Get to the Essence of a Project</h3>\n<p>Barry Boehm 提出了以下五个 W 和两个 H，以帮助抓住项目的核心要点：</p>\n<table>\n<thead>\n<tr>\n<th>CN</th>\n<th>EN</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>为什么要开发系统？</td>\n<td>Why is the system being developed?</td>\n</tr>\n<tr>\n<td>将要完成什么？</td>\n<td>What will be done?</td>\n</tr>\n<tr>\n<td>何时完成？</td>\n<td>When will it be accomplished?</td>\n</tr>\n<tr>\n<td>谁负责？</td>\n<td>Who is responsible?</td>\n</tr>\n<tr>\n<td>他们在组织结构中的位置在哪里？</td>\n<td>Where are they organizationally located?</td>\n</tr>\n<tr>\n<td>如何在技术和管理上完成这项工作？</td>\n<td>How will the job be done technically and managerially?</td>\n</tr>\n<tr>\n<td>每种 <em>资源(resource)</em>（例如，人员、软件、工具、数据库）需要多少？</td>\n<td>How much of each resource (e.g., people, software, tools, database) will be needed?</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"anchor-658604afb51e1466\" style=\"position: relative;\"><a href=\"#anchor-658604afb51e1466\" aria-label=\"anchor 658604afb51e1466 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9.3. Critical Practices</h3>\n<p>以下是一些<strong>关键实践(Critical Practices)</strong>，可以显著提高软件项目成功率：</p>\n<table>\n<thead>\n<tr>\n<th>CN</th>\n<th>EN</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>系统的风险管理</td>\n<td>Formal risk management</td>\n</tr>\n<tr>\n<td>经验成本和进度估算</td>\n<td>Empirical cost and schedule estimation</td>\n</tr>\n<tr>\n<td><em>基于度量的(metrics-based)</em> 项目管理</td>\n<td>Metrics-based project management</td>\n</tr>\n<tr>\n<td><em>挣值(earned value)</em> 跟踪</td>\n<td>Earned value tracking</td>\n</tr>\n<tr>\n<td>针对质量目标的 <em>缺陷跟踪(defect tracking)</em></td>\n<td>Defect tracking against quality targets</td>\n</tr>\n<tr>\n<td>以人为本的项目管理</td>\n<td>People aware project management</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"anchor-dfb5b97794cb9c84\" style=\"position: relative;\"><a href=\"#anchor-dfb5b97794cb9c84\" aria-label=\"anchor dfb5b97794cb9c84 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ch.5 Agile Development</h1>\n<h2 id=\"anchor-89081b3eca2593a0\" style=\"position: relative;\"><a href=\"#anchor-89081b3eca2593a0\" aria-label=\"anchor 89081b3eca2593a0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Agile Development</h2>\n<h3 id=\"anchor-1bb5a15d8e61d251\" style=\"position: relative;\"><a href=\"#anchor-1bb5a15d8e61d251\" aria-label=\"anchor 1bb5a15d8e61d251 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1. The Manifesto for Agile Software Development</h3>\n<p>由 Kent Beck 提出的敏捷软件开发 <em>宣言(manifesto)</em> 的核心价值观是：</p>\n<ul>\n<li><strong>个体与互动(Individuals and interactions)</strong> 胜过 <strong>流程与工具(processes and tools)</strong></li>\n<li><strong>可工作的软件(Working software)</strong> 胜过 <strong>完善的文档(comprehensive documentation)</strong></li>\n<li><strong>客户合作(Customer collaboration)</strong> 胜过 <strong>合同谈判(contract negotiation)</strong></li>\n<li><strong>响应变化(Responding to change)</strong> 胜过 <strong>遵循计划(following a plan)</strong></li>\n</ul>\n<h3 id=\"anchor-fed1435001ed8a11\" style=\"position: relative;\"><a href=\"#anchor-fed1435001ed8a11\" aria-label=\"anchor fed1435001ed8a11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2. What is \"Agility\"?</h3>\n<p><strong>敏捷(Agility)</strong> 意味着：</p>\n<table>\n<thead>\n<tr>\n<th>CN</th>\n<th>EN</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>所有 <em>干系人(stakeholder)</em> 之间有效的沟通</td>\n<td>Effective communication among all stakeholders</td>\n</tr>\n<tr>\n<td>将客户融入团队</td>\n<td>Drawing the customer onto the team</td>\n</tr>\n<tr>\n<td>组织团队使其能够掌控工作</td>\n<td>Organizing a team so that it is in control of the work performed</td>\n</tr>\n<tr>\n<td>进而实现：<mark class=\"m-mark\">快速、增量式的软件交付</mark>（逐步交付软件，而不是一次性交付所有功能）</td>\n<td>Yielding... Rapid, incremental delivery of software</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://img.memset0.cn/2025/03/03/XdvU65wJ.png\"alt=\"Agility and the Cost of Change\" style=\"width: 444px; \" ><span class=\"image-alt\">Agility and the Cost of Change</span></p>\n<h2 id=\"anchor-5239b07abbd6d5b9\" style=\"position: relative;\"><a href=\"#anchor-5239b07abbd6d5b9\" aria-label=\"anchor 5239b07abbd6d5b9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Agile Process</h2>\n<p>典型的 <strong>敏捷开发过程(Agile Process)</strong> 具有以下特点：</p>\n<table>\n<thead>\n<tr>\n<th>CN</th>\n<th>EN</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>根据客户的需求描述驱动敏捷开发</td>\n<td>Is driven by customer descriptions of what is required (scenarios)</td>\n</tr>\n<tr>\n<td>必须认识到计划是短期的，承认计划需要不断调整和迭代，不能奢求直接得到长期计划</td>\n<td>Recognizes that plans are short-lived</td>\n</tr>\n<tr>\n<td>通过高度强调构建活动来迭代地开发软件——每个迭代周期都需要包含设计、编码和测试环节，确保都能产生可工作的版本</td>\n<td>Develops software iteratively with a heavy emphasis on construction activities</td>\n</tr>\n<tr>\n<td>将软件分解成多个“软件增量”并交互给客户</td>\n<td>Delivers multiple software increments</td>\n</tr>\n<tr>\n<td>随着变化而适应——能够根据项目进展和客户需求灵活调整方向</td>\n<td>Adapts as changes occur</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"anchor-6f84a4c3ee401ee2\" style=\"position: relative;\"><a href=\"#anchor-6f84a4c3ee401ee2\" aria-label=\"anchor 6f84a4c3ee401ee2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Agility Principles</h2>\n<p>敏捷开发遵循以下 12 条 <strong>敏捷开发原则(Agility principles)</strong>。</p>\n<table>\n<thead>\n<tr>\n<th>CN</th>\n<th>EN</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>最重要的目标是通过尽早和<mark class=\"m-mark\">持续交付</mark>有价值的软件来满足客户。</td>\n<td>Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.</td>\n</tr>\n<tr>\n<td><mark class=\"m-mark\">欢迎需求变化，即使在项目后期</mark>。敏捷过程 <em>利用(harness)</em> 变化来为客户创造竞争优势。</td>\n<td>Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.</td>\n</tr>\n<tr>\n<td>经常交付可工作的软件，交付周期从几周到几个月不等，倾向于较短的周期。</td>\n<td>Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.</td>\n</tr>\n<tr>\n<td>业务人员和开发人员必须在整个项目中每天一起工作。</td>\n<td>Business people and developers must work together daily throughout the project.</td>\n</tr>\n<tr>\n<td>围绕积极主动的个人构建项目。为他们提供所需的环境和支持，并信任他们能够完成工作。</td>\n<td>Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.</td>\n</tr>\n<tr>\n<td>与开发团队进行信息传递的<mark class=\"m-mark\">最有效方法是 <em>面对面(face-to-face)</em> 的交谈</mark>。</td>\n<td>The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.</td>\n</tr>\n<tr>\n<td>可工作的软件是衡量进度的 <em>主要指标(primary measure)</em>。</td>\n<td>Working software is the primary measure of progress.</td>\n</tr>\n<tr>\n<td>敏捷过程提倡 <mark class=\"m-mark\"><em>可持续的(sustainable)</em> 开发</mark>。发起人、开发者和用户应该能够 <em>无限期地(indefinitely)</em> 保持稳定的节奏。</td>\n<td>Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.</td>\n</tr>\n<tr>\n<td>持续关注技术卓越和良好设计有助于提高敏捷性。</td>\n<td>Continuous attention to technical excellence and good design enhances agility.</td>\n</tr>\n<tr>\n<td><mark class=\"m-mark\"><em>简洁(simplicity)</em> 至关重要</mark>，应最大限度地减少工作量。</td>\n<td>Simplicity - the art of maximizing the amount of work not done - is essential.</td>\n</tr>\n<tr>\n<td>最好的架构、需求和设计来自 <mark class=\"m-mark\"><em>自组织的(self-organizing)</em></mark> 团队。</td>\n<td>The best architectures, requirements, and designs emerge from self-organizing teams.</td>\n</tr>\n<tr>\n<td>团队 <mark class=\"m-mark\"><em>定期(at regular intervals)</em> 反思</mark>如何变得更有效率，并据此调整自身的行为。</td>\n<td>At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"anchor-201e1544a5ccf9e5\" style=\"position: relative;\"><a href=\"#anchor-201e1544a5ccf9e5\" aria-label=\"anchor 201e1544a5ccf9e5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Human Factors</h2>\n<p>在敏捷开发中，<strong>人为因素(Human Factors)</strong> 至关重要。开发过程应该去 <mark class=\"m-mark\"><em>适应(mold)</em> 人和团队的 <em>需求(need)</em></mark>。以下是敏捷团队成员和团队必须具备的关键特质：</p>\n<ul>\n<li><strong>能力(Competence)</strong>：团队成员需要具备完成工作所需的专业技能和知识。</li>\n<li><strong>共同目标(Common focus)</strong>：团队成员需要对项目目标有统一的认识和认同。</li>\n<li><strong>协作(Collaboration)</strong>：团队成员之间需要密切合作，共同解决问题。</li>\n<li><strong>决策能力(Decision-making ability)</strong>：团队需要拥有自主决策的能力，快速响应变化。</li>\n<li><strong>模糊问题解决能力(Fuzzy problem-solving ability)</strong>：面对不确定性和模糊性，团队需要能够灵活应变，找到解决方案。</li>\n<li><strong>相互信任和尊重(Mutual trust and respect)</strong>：团队成员之间需要相互信任和尊重，营造积极和谐的工作氛围。</li>\n<li><strong>自组织(Self-organization)</strong>：团队需要具备自组织能力，自主管理和分配任务。</li>\n</ul>\n<h2 id=\"anchor-9b1bf80818589fbb\" style=\"position: relative;\"><a href=\"#anchor-9b1bf80818589fbb\" aria-label=\"anchor 9b1bf80818589fbb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Agile Progress Examples</h2>\n<h3 id=\"anchor-1d98ee1419fa1a07\" style=\"position: relative;\"><a href=\"#anchor-1d98ee1419fa1a07\" aria-label=\"anchor 1d98ee1419fa1a07 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1. Extreme Programming</h3>\n<p><strong>极限编程(Extreme Programming, XP)</strong> 是最广泛使用的一种敏捷开发过程，最初由 Kent Beck 提出。</p>\n<ul>\n<li><strong>XP Planning</strong>\n<ul>\n<li>从创建 <strong>用户故事(user stories)</strong> 开始——用户故事是描述用户需求的一种简洁方式。</li>\n<li>敏捷团队评估每个用户故事并分配成本。</li>\n<li>用户故事被分组形成 <em>可交付的(deliverable)</em> 增量。</li>\n<li>做出 <em>交付日期(delivery date)</em> 的 <em>许诺(commitment)</em>。</li>\n<li>使用 <strong>项目速度(project velocity)</strong> 帮助定义后续增量的交付日期——项目速度指每个迭代周期内需要完成的工作量。</li>\n</ul>\n</li>\n<li><strong>XP Design</strong>\n<ul>\n<li>遵循 <strong>KIS 原则(Keep It Simple, KIS)</strong>，保持设计简单。</li>\n<li>鼓励使用 <mark class=\"m-mark\"><strong>类-职责-协作卡(Class-Responsibility-Collaboration card, CRC card)</strong></mark>（第 8 章）。</li>\n<li>对于困难的设计问题，使用小型的设计 <em>原型(prototype)</em> 来探索和验证设计方案的可行性，称作“spike solutions”。</li>\n<li>鼓励 <em>重构(refactoring)</em>，通过迭代改进内部程序设计。</li>\n</ul>\n</li>\n<li><strong>XP Coding</strong>\n<ul>\n<li>建议在开始编码之前，为用户故事构建 <strong>单元测试(unit test)</strong>。</li>\n<li>鼓励 <strong>结对编程(pair programming)</strong>。</li>\n</ul>\n</li>\n<li><strong>XP Testing</strong>\n<ul>\n<li>每天执行所有单元测试——可以使用 <strong>持续集成(Continuous Integration, CI)</strong> 工具。</li>\n<li><em>验收测试(Acceptance test)</em>：由客户定义，用于评估软件是否满足客户的需求。</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://img.memset0.cn/2025/03/03/GEQYhWc2.png\"alt=\"Adaptive Software Development\" style=\"width: 555px; \" ><span class=\"image-alt\">Adaptive Software Development</span></p>\n<h3 id=\"anchor-d3edc003225cfcde\" style=\"position: relative;\"><a href=\"#anchor-d3edc003225cfcde\" aria-label=\"anchor d3edc003225cfcde permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.2. Industrial XP</h3>\n<p><strong>工业极限编程(Industrial Extreme Programming, IXP)</strong> 是 XP 的扩展和增强版本，更加注重管理、客户角色和技术实践。其包含六个新的实践：</p>\n<ul>\n<li><strong>准备度评估(Readiness assessment)</strong>：在项目开始前评估团队和组织的敏捷开发准备程度。</li>\n<li><strong>项目社区(Project community)</strong>：强调建立积极协作的项目社区，包括所有利益相关者。</li>\n<li><strong>项目章程(Project chartering)</strong>：制定清晰的项目目标、范围和愿景。</li>\n<li><strong>测试驱动管理(Test driven management)</strong>：使用测试结果来驱动项目管理和决策。</li>\n<li><strong>回顾(Retrospectives)</strong>：定期回顾和总结项目经验，持续改进。</li>\n<li><strong>持续学习(Continuous learning)</strong>：鼓励团队成员持续学习和提升技能。</li>\n</ul>\n<h3 id=\"anchor-9beb07ba0a10592e\" style=\"position: relative;\"><a href=\"#anchor-9beb07ba0a10592e\" aria-label=\"anchor 9beb07ba0a10592e permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.3. Scrum</h3>\n<p><strong>Scrum</strong> 最初由 Schwaber 和 Beedle 提出，其显著特点包括：</p>\n<ul>\n<li>将大的开发工作划分为一个一个小的 <strong>包(packets)</strong>。</li>\n<li>测试和文档在产品构建过程中持续进行，贯穿始终。</li>\n<li>通过 <strong>待办事项列表(backlog)</strong> 划出若干段的开发周期，称为 “<strong>冲刺(sprints)</strong>”。</li>\n<li>使用非常简短的会议形式，有时甚至可以站着进行。</li>\n<li>每一个冲刺周期结束后的都向客户交付 <strong>演示(demo)</strong>。</li>\n</ul>\n<h3 id=\"anchor-888c58dbfaf3eec7\" style=\"position: relative;\"><a href=\"#anchor-888c58dbfaf3eec7\" aria-label=\"anchor 888c58dbfaf3eec7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.4. Dynamic Systems Development Method</h3>\n<p><strong>动态系统开发方法(Dynamic Systems Development Method, DSDM)</strong> 由 DSDM 联盟推广，其大多数方面与 XP 相似，并有以下九条指导原则：</p>\n<table>\n<thead>\n<tr>\n<th>CN</th>\n<th>EN</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>用户的积极参与 <em>至关重要(imperative)</em></td>\n<td>Active user involvement is imperative.</td>\n</tr>\n<tr>\n<td>DSDM 团队必须 <em>被授权(empowered)</em> 进行自主决策</td>\n<td>DSDM teams must be empowered to make decisions.</td>\n</tr>\n<tr>\n<td>重点是产品的频繁交付</td>\n<td>The focus is on frequent delivery of products.</td>\n</tr>\n<tr>\n<td>验收的基本标注是对业务的 <em>符合程度(fitness)</em></td>\n<td>Fitness for business purpose is the essential criterion for acceptance of deliverables.</td>\n</tr>\n<tr>\n<td>迭代和增量开发是实现精确业务解决方案的必要条件</td>\n<td>Iterative and incremental development is necessary to converge on an accurate business solution.</td>\n</tr>\n<tr>\n<td>开发期间的所有变更都是 <em>可逆的(reversible)</em></td>\n<td>All changes during development are reversible.</td>\n</tr>\n<tr>\n<td>需求在较高层次上基线化——即不必太过详细，可以在迭代过程中进行细化</td>\n<td>Requirements are baselined at a high level</td>\n</tr>\n<tr>\n<td>测试贯穿整个 <em>生命周期(life-cycle)</em>——必须在每个阶段都进行</td>\n<td>Testing is integrated throughout the life-cycle.</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"https://img.memset0.cn/2025/03/03/C6FRCcQx.png\"alt=\"\" style=\"width: 592px; \" ></p>\n<blockquote>\n<p><strong>80% 原则(80 percent rule)</strong>：通常，一个应用程序的 80% 经常在 20% 的时间内交付，而另外 20% 的部分则需要剩余的 80% 的时间。</p>\n</blockquote>\n<h2 id=\"anchor-a0ced684f584619b\" style=\"position: relative;\"><a href=\"#anchor-a0ced684f584619b\" aria-label=\"anchor a0ced684f584619b permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Agile Modeling</h2>\n<p><strong>敏捷建模(Agile Modeling)</strong> 最初由 Scott Ambler 提出，包括以下原则：</p>\n<ul>\n<li><strong>以目标为导向进行建模(Model with a purpose)</strong>：建模应该服务于特定的目标，例如沟通、理解或设计。</li>\n<li><strong>使用多种模型(Use multiple models)</strong>：根据需要选择合适的模型，例如用例图、类图、流程图等。</li>\n<li><strong>轻量级建模(Travel light)</strong>：避免过度建模，只创建必要的模型，保持模型的简洁和实用性。</li>\n<li><strong>内容比表示形式更重要(Content is more important than representation)</strong>：模型的目的是传达信息，内容比模型的具体表示形式更重要。</li>\n<li><strong>了解模型和用于创建模型的工具(Know the models and the tools you use to create them)</strong>：熟练掌握建模技术和工具。</li>\n<li><strong>局部适应(Adapt locally)</strong>：根据具体项目和团队情况，灵活调整建模方法。</li>\n</ul>\n<h2 id=\"anchor-1851a08e959b58f9\" style=\"position: relative;\"><a href=\"#anchor-1851a08e959b58f9\" aria-label=\"anchor 1851a08e959b58f9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. Agile Unified Process</h2>\n<p><strong>敏捷统一过程(Agile Unified Process, AUP)</strong> 是一种简化的 Rational Unified Process (RUP) 的敏捷版本，包含以下活动：</p>\n<ul>\n<li><strong>建模(Modeling)</strong>：理解需求，设计系统架构和组件。</li>\n<li><strong>实现(Implementation)</strong>：编写代码，构建软件组件。</li>\n<li><strong>测试(Testing)</strong>：单元测试、集成测试、系统测试等，确保软件质量。</li>\n<li><strong>部署(Deployment)</strong>：将软件部署到目标环境。</li>\n<li><strong>配置(configuration)</strong> 和 <strong>项目管理(project management)</strong>：版本控制、配置管理、项目计划、进度跟踪等。</li>\n<li><strong>环境管理(Environment management)</strong>：搭建和维护开发、测试和部署环境。</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#anchor-db2a8814688740d4\">Ch.31 Project Management Concepts</a></p>\n<ul>\n<li>\n<p><a href=\"#anchor-da4e21c738edb26b\">1. The Four P's</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-e1f751d1a6962dbb\">2. Stakeholders</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-dff037c88c823173\">3. The MOI Model</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-c249635585f12d31\">4. Software Team Structure</a></p>\n<ul>\n<li><a href=\"#anchor-be48cffdcb4f19bb\">4.1. Organizational Paradigms</a></li>\n<li><a href=\"#anchor-71fd7aedc7bb4012\">4.2. Avoid Team \"Toxicity\"</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-7ce7d844fe07db26\">5. Agile Teams</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-f1ed83b99f3e15dd\">6. Team Coordination &#x26; Communication</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-db23e172226298d7\">7. The Product Scope</a></p>\n<ul>\n<li><a href=\"#anchor-4c6c8adf5c73f012\">7.1. Problem Decomposition</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-48f7b26830bcfe3f\">8. The Process</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-2d32e27754fabbc7\">9. The Project</a></p>\n<ul>\n<li><a href=\"#anchor-2ef70db65ae34899\">9.1. Common-Sense Approach to Projects</a></li>\n<li><a href=\"#anchor-5c1a5ec63d30210a\">9.2. To Get to the Essence of a Project</a></li>\n<li><a href=\"#anchor-658604afb51e1466\">9.3. Critical Practices</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-dfb5b97794cb9c84\">Ch.5 Agile Development</a></p>\n<ul>\n<li>\n<p><a href=\"#anchor-89081b3eca2593a0\">1. Agile Development</a></p>\n<ul>\n<li><a href=\"#anchor-1bb5a15d8e61d251\">1.1. The Manifesto for Agile Software Development</a></li>\n<li><a href=\"#anchor-fed1435001ed8a11\">1.2. What is \"Agility\"?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-5239b07abbd6d5b9\">2. Agile Process</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-6f84a4c3ee401ee2\">3. Agility Principles</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-201e1544a5ccf9e5\">4. Human Factors</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-9b1bf80818589fbb\">5. Agile Progress Examples</a></p>\n<ul>\n<li><a href=\"#anchor-1d98ee1419fa1a07\">5.1. Extreme Programming</a></li>\n<li><a href=\"#anchor-d3edc003225cfcde\">5.2. Industrial XP</a></li>\n<li><a href=\"#anchor-9beb07ba0a10592e\">5.3. Scrum</a></li>\n<li><a href=\"#anchor-888c58dbfaf3eec7\">5.4. Dynamic Systems Development Method</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#anchor-a0ced684f584619b\">6. Agile Modeling</a></p>\n</li>\n<li>\n<p><a href=\"#anchor-1851a08e959b58f9\">7. Agile Unified Process</a></p>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Lecture 3. 团队项目管理与敏捷开发","description":null},"fields":{"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#081838","images":{"fallback":{"src":"/static/9500cd500f81cd3665f47d5188bffaa8/7d7c4/GLnkqhFM.jpg","srcSet":"/static/9500cd500f81cd3665f47d5188bffaa8/0229f/GLnkqhFM.jpg 243w,\n/static/9500cd500f81cd3665f47d5188bffaa8/471f2/GLnkqhFM.jpg 486w,\n/static/9500cd500f81cd3665f47d5188bffaa8/7d7c4/GLnkqhFM.jpg 972w","sizes":"(min-width: 972px) 972px, 100vw"},"sources":[{"srcSet":"/static/9500cd500f81cd3665f47d5188bffaa8/c4d9c/GLnkqhFM.webp 243w,\n/static/9500cd500f81cd3665f47d5188bffaa8/52d02/GLnkqhFM.webp 486w,\n/static/9500cd500f81cd3665f47d5188bffaa8/2e059/GLnkqhFM.webp 972w","type":"image/webp","sizes":"(min-width: 972px) 972px, 100vw"}]},"width":972,"height":712}}},"slug":"/course/se/note/03/","cssclasses":null,"isDoc":true,"authors":[],"createTime":"2025 年 3 月 3 日","updateTime":"2025 年 3 月 3 日","category":"[{\"name\":\"课程笔记\",\"to\":\"/course/\"}]","propsJson":null}},"previous":{"fields":{"slug":"/course/multimedia/note/4/"},"frontmatter":{"title":"IV. Fundamental Concepts in Video"}},"next":null},"pageContext":{"id":"67e8eab1-3bf4-5b68-b925-1155d7520abd","previousPostId":"db935d90-1114-563e-af05-12cb8d78e372","nextPostId":null,"navJson":"[{\"slug\":\"/course\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/index.md\",\"title\":\"导航\"},{\"title\":\"通识课程\",\"children\":[{\"slug\":\"/course/calculus\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/calculus/index.md\",\"title\":\"微积分\"},{\"slug\":\"/course/linear-algebra\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/linear-algebra/index.md\",\"title\":\"线性代数\"},{\"slug\":\"/course/physics\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/physics/index.md\",\"title\":\"工程物理学\"}]},{\"title\":\"专业必修课程\",\"children\":[{\"slug\":\"/course/dm\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/dm/index.md\",\"title\":\"离散数学及其应用\"},{\"slug\":\"/course/ptms\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/ptms/index.md\",\"title\":\"概率论与数理统计\"},{\"slug\":\"/course/ads\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/ads/index.md\",\"title\":\"高级数据结构\"},{\"slug\":\"/course/dd\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/dd/index.md\",\"title\":\"数字逻辑设计\"},{\"slug\":\"/course/co\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/co/index.md\",\"title\":\"计算机组成\"}]},{\"title\":\"专业选修课程\",\"children\":[{\"slug\":\"/course/java\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/java/index.md\",\"title\":\"Java 应用技术\"}]},{\"title\":\"个性修读课程\",\"children\":[{\"slug\":\"/course/fasm\",\"file\":\"/home/runner/work/gatsby-blog/gatsby-blog/content/course/fasm/index.md\",\"title\":\"汇编程序设计基础\"}]}]"}},"staticQueryHashes":["3871233186"],"slicesMap":{}}